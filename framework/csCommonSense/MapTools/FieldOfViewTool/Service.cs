//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestFoV.FieldOfViewService
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewBaseRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest))]
    public partial class FieldOfViewBaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location CameraLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DesiredFieldOfViewField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Masks MaskField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxVisualRangeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinVisualRangeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.ModeOfOperation ModeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrientationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewAngleField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location CameraLocation
        {
            get
            {
                return this.CameraLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CameraLocationField, value) != true))
                {
                    this.CameraLocationField = value;
                    this.RaisePropertyChanged("CameraLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DesiredFieldOfView
        {
            get
            {
                return this.DesiredFieldOfViewField;
            }
            set
            {
                if ((this.DesiredFieldOfViewField.Equals(value) != true)) // TODO Replace all Equals calls by Object.Equals(1, 2) to avoid NullReferences.
                {
                    this.DesiredFieldOfViewField = value;
                    this.RaisePropertyChanged("DesiredFieldOfView");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Masks Mask
        {
            get
            {
                return this.MaskField;
            }
            set
            {
                if ((this.MaskField.Equals(value) != true))
                {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxVisualRange
        {
            get
            {
                return this.MaxVisualRangeField;
            }
            set
            {
                if ((this.MaxVisualRangeField.Equals(value) != true))
                {
                    this.MaxVisualRangeField = value;
                    this.RaisePropertyChanged("MaxVisualRange");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinVisualRange
        {
            get
            {
                return this.MinVisualRangeField;
            }
            set
            {
                if ((this.MinVisualRangeField.Equals(value) != true))
                {
                    this.MinVisualRangeField = value;
                    this.RaisePropertyChanged("MinVisualRange");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.ModeOfOperation Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                if ((this.ModeField.Equals(value) != true))
                {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Orientation
        {
            get
            {
                return this.OrientationField;
            }
            set
            {
                if ((this.OrientationField.Equals(value) != true))
                {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewAngle
        {
            get
            {
                return this.ViewAngleField;
            }
            set
            {
                if ((this.ViewAngleField.Equals(value) != true))
                {
                    this.ViewAngleField = value;
                    this.RaisePropertyChanged("ViewAngle");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Location", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltitudeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude
        {
            get
            {
                return this.AltitudeField;
            }
            set
            {
                if ((this.AltitudeField.Equals(value) != true))
                {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                if ((this.LatitudeField.Equals(value) != true))
                {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                if ((this.LongitudeField.Equals(value) != true))
                {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewAsImageRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class FieldOfViewAsImageRequest : TestFoV.FieldOfViewService.FieldOfViewBaseRequest
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Color ColorField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Color Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                if ((this.ColorField.Equals(value) != true))
                {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewAsVectorRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class FieldOfViewAsVectorRequest : TestFoV.FieldOfViewService.FieldOfViewBaseRequest
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrecisionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Precision
        {
            get
            {
                return this.PrecisionField;
            }
            set
            {
                if ((this.PrecisionField.Equals(value) != true))
                {
                    this.PrecisionField = value;
                    this.RaisePropertyChanged("Precision");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Masks", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum Masks : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Water = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Land = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ModeOfOperation", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum ModeOfOperation : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElectroOptic = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalRadar = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewBaseResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestFoV.FieldOfViewService.FieldOfViewAsImageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse))]
    public partial class FieldOfViewBaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.FieldOfViewAlgorithmAccuracy AlgorithmAccuracyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.BoundaryBox BoundingBoxField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CameraAltitudeInCmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.SizeF GridCellResolutionInMeterField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.FieldOfViewAlgorithmAccuracy AlgorithmAccuracy
        {
            get
            {
                return this.AlgorithmAccuracyField;
            }
            set
            {
                if ((this.AlgorithmAccuracyField.Equals(value) != true))
                {
                    this.AlgorithmAccuracyField = value;
                    this.RaisePropertyChanged("AlgorithmAccuracy");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.BoundaryBox BoundingBox
        {
            get
            {
                return this.BoundingBoxField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BoundingBoxField, value) != true))
                {
                    this.BoundingBoxField = value;
                    this.RaisePropertyChanged("BoundingBox");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CameraAltitudeInCm
        {
            get
            {
                return this.CameraAltitudeInCmField;
            }
            set
            {
                if ((this.CameraAltitudeInCmField.Equals(value) != true))
                {
                    this.CameraAltitudeInCmField = value;
                    this.RaisePropertyChanged("CameraAltitudeInCm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.SizeF GridCellResolutionInMeter
        {
            get
            {
                return this.GridCellResolutionInMeterField;
            }
            set
            {
                if ((this.GridCellResolutionInMeterField.Equals(value) != true))
                {
                    this.GridCellResolutionInMeterField = value;
                    this.RaisePropertyChanged("GridCellResolutionInMeter");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BoundaryBox", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class BoundaryBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.GeoAccuracy AccuracyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSetField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaximumLatitudeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaximumLongitudeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinimumLatitudeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinimumLongitudeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.GeoAccuracy Accuracy
        {
            get
            {
                return this.AccuracyField;
            }
            set
            {
                if ((this.AccuracyField.Equals(value) != true))
                {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSet
        {
            get
            {
                return this.IsSetField;
            }
            set
            {
                if ((this.IsSetField.Equals(value) != true))
                {
                    this.IsSetField = value;
                    this.RaisePropertyChanged("IsSet");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumLatitude
        {
            get
            {
                return this.MaximumLatitudeField;
            }
            set
            {
                if ((this.MaximumLatitudeField.Equals(value) != true))
                {
                    this.MaximumLatitudeField = value;
                    this.RaisePropertyChanged("MaximumLatitude");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumLongitude
        {
            get
            {
                return this.MaximumLongitudeField;
            }
            set
            {
                if ((this.MaximumLongitudeField.Equals(value) != true))
                {
                    this.MaximumLongitudeField = value;
                    this.RaisePropertyChanged("MaximumLongitude");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumLatitude
        {
            get
            {
                return this.MinimumLatitudeField;
            }
            set
            {
                if ((this.MinimumLatitudeField.Equals(value) != true))
                {
                    this.MinimumLatitudeField = value;
                    this.RaisePropertyChanged("MinimumLatitude");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinimumLongitude
        {
            get
            {
                return this.MinimumLongitudeField;
            }
            set
            {
                if ((this.MinimumLongitudeField.Equals(value) != true))
                {
                    this.MinimumLongitudeField = value;
                    this.RaisePropertyChanged("MinimumLongitude");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewAsImageResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class FieldOfViewAsImageResponse : TestFoV.FieldOfViewService.FieldOfViewBaseResponse
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ByteBufferField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.FieldOfViewAsImageRequest RequestMessageField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ByteBuffer
        {
            get
            {
                return this.ByteBufferField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ByteBufferField, value) != true))
                {
                    this.ByteBufferField = value;
                    this.RaisePropertyChanged("ByteBuffer");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.FieldOfViewAsImageRequest RequestMessage
        {
            get
            {
                return this.RequestMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestMessageField, value) != true))
                {
                    this.RequestMessageField = value;
                    this.RaisePropertyChanged("RequestMessage");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewAsVectorResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class FieldOfViewAsVectorResponse : TestFoV.FieldOfViewService.FieldOfViewBaseResponse
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> LocationsField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxGridXField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxGridYField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinGridXField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinGridYField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest RequestMessageField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> Locations
        {
            get
            {
                return this.LocationsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationsField, value) != true))
                {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxGridX
        {
            get
            {
                return this.MaxGridXField;
            }
            set
            {
                if ((this.MaxGridXField.Equals(value) != true))
                {
                    this.MaxGridXField = value;
                    this.RaisePropertyChanged("MaxGridX");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxGridY
        {
            get
            {
                return this.MaxGridYField;
            }
            set
            {
                if ((this.MaxGridYField.Equals(value) != true))
                {
                    this.MaxGridYField = value;
                    this.RaisePropertyChanged("MaxGridY");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinGridX
        {
            get
            {
                return this.MinGridXField;
            }
            set
            {
                if ((this.MinGridXField.Equals(value) != true))
                {
                    this.MinGridXField = value;
                    this.RaisePropertyChanged("MinGridX");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinGridY
        {
            get
            {
                return this.MinGridYField;
            }
            set
            {
                if ((this.MinGridYField.Equals(value) != true))
                {
                    this.MinGridYField = value;
                    this.RaisePropertyChanged("MinGridY");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest RequestMessage
        {
            get
            {
                return this.RequestMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestMessageField, value) != true))
                {
                    this.RequestMessageField = value;
                    this.RaisePropertyChanged("RequestMessage");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldOfViewAlgorithmAccuracy", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum FieldOfViewAlgorithmAccuracy : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ideal = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SemiIdeal = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optimistic = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SemiRealistic = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Realistic = 5,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GeoAccuracy", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum GeoAccuracy : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        World = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level2 = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level4 = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level5 = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level7 = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level8 = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level9 = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level10 = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level12 = 12,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level13 = 13,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level14 = 14,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Level15 = 15,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Street = 16,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TerrainTypeRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class TerrainTypeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location LocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxSearchRangeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.RequestedTerrainType TypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxSearchRange
        {
            get
            {
                return this.MaxSearchRangeField;
            }
            set
            {
                if ((this.MaxSearchRangeField.Equals(value) != true))
                {
                    this.MaxSearchRangeField = value;
                    this.RaisePropertyChanged("MaxSearchRange");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.RequestedTerrainType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((this.TypeField.Equals(value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RequestedTerrainType", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum RequestedTerrainType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AtTheCurrentLocation = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NearestLandLocation = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NearestWaterLocation = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TerrainTypeResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class TerrainTypeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location LocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.RequestedTerrainType RequestedTerrainTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.TerrainType TerrainTypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.RequestedTerrainType RequestedTerrainType
        {
            get
            {
                return this.RequestedTerrainTypeField;
            }
            set
            {
                if ((this.RequestedTerrainTypeField.Equals(value) != true))
                {
                    this.RequestedTerrainTypeField = value;
                    this.RaisePropertyChanged("RequestedTerrainType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.TerrainType TerrainType
        {
            get
            {
                return this.TerrainTypeField;
            }
            set
            {
                if ((this.TerrainTypeField.Equals(value) != true))
                {
                    this.TerrainTypeField = value;
                    this.RaisePropertyChanged("TerrainType");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TerrainType", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum TerrainType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Water = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Land = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationMapRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ElevationMapRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.BoundaryBox BoundaryField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightMapType HeightMapTypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.BoundaryBox Boundary
        {
            get
            {
                return this.BoundaryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BoundaryField, value) != true))
                {
                    this.BoundaryField = value;
                    this.RaisePropertyChanged("Boundary");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightMapType HeightMapType
        {
            get
            {
                return this.HeightMapTypeField;
            }
            set
            {
                if ((this.HeightMapTypeField.Equals(value) != true))
                {
                    this.HeightMapTypeField = value;
                    this.RaisePropertyChanged("HeightMapType");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HeightMapType", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum HeightMapType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Raw = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationMapResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ElevationMapResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.BoundaryBox BoundaryField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightMapType HeightMapTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Image MapField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxHeightInCentimeterField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinHeightInCentimeterField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Collections.Generic.List<short>> RawMapField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.BoundaryBox Boundary
        {
            get
            {
                return this.BoundaryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BoundaryField, value) != true))
                {
                    this.BoundaryField = value;
                    this.RaisePropertyChanged("Boundary");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightMapType HeightMapType
        {
            get
            {
                return this.HeightMapTypeField;
            }
            set
            {
                if ((this.HeightMapTypeField.Equals(value) != true))
                {
                    this.HeightMapTypeField = value;
                    this.RaisePropertyChanged("HeightMapType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Image Map
        {
            get
            {
                return this.MapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MapField, value) != true))
                {
                    this.MapField = value;
                    this.RaisePropertyChanged("Map");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxHeightInCentimeter
        {
            get
            {
                return this.MaxHeightInCentimeterField;
            }
            set
            {
                if ((this.MaxHeightInCentimeterField.Equals(value) != true))
                {
                    this.MaxHeightInCentimeterField = value;
                    this.RaisePropertyChanged("MaxHeightInCentimeter");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinHeightInCentimeter
        {
            get
            {
                return this.MinHeightInCentimeterField;
            }
            set
            {
                if ((this.MinHeightInCentimeterField.Equals(value) != true))
                {
                    this.MinHeightInCentimeterField = value;
                    this.RaisePropertyChanged("MinHeightInCentimeter");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.List<short>> RawMap
        {
            get
            {
                return this.RawMapField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RawMapField, value) != true))
                {
                    this.RawMapField = value;
                    this.RaisePropertyChanged("RawMap");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationLineRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ElevationLineRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location EndLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightLineType HeightLineTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location StartLocationField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location EndLocation
        {
            get
            {
                return this.EndLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EndLocationField, value) != true))
                {
                    this.EndLocationField = value;
                    this.RaisePropertyChanged("EndLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightLineType HeightLineType
        {
            get
            {
                return this.HeightLineTypeField;
            }
            set
            {
                if ((this.HeightLineTypeField.Equals(value) != true))
                {
                    this.HeightLineTypeField = value;
                    this.RaisePropertyChanged("HeightLineType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location StartLocation
        {
            get
            {
                return this.StartLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StartLocationField, value) != true))
                {
                    this.StartLocationField = value;
                    this.RaisePropertyChanged("StartLocation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "HeightLineType", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum HeightLineType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeglectEarthCurvature = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarthNormalRadius = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EarthRadarRadius = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationLineResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ElevationLineResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location EndLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> HeightLineField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightLineType HeightLineTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location StartLocationField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location EndLocation
        {
            get
            {
                return this.EndLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EndLocationField, value) != true))
                {
                    this.EndLocationField = value;
                    this.RaisePropertyChanged("EndLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> HeightLine
        {
            get
            {
                return this.HeightLineField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HeightLineField, value) != true))
                {
                    this.HeightLineField = value;
                    this.RaisePropertyChanged("HeightLine");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightLineType HeightLineType
        {
            get
            {
                return this.HeightLineTypeField;
            }
            set
            {
                if ((this.HeightLineTypeField.Equals(value) != true))
                {
                    this.HeightLineTypeField = value;
                    this.RaisePropertyChanged("HeightLineType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location StartLocation
        {
            get
            {
                return this.StartLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StartLocationField, value) != true))
                {
                    this.StartLocationField = value;
                    this.RaisePropertyChanged("StartLocation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LineOfSightRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class LineOfSightRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location EndLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightLineType HeightLineTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.LineOfSightAlgorithm LineOfSightAlgorithmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReturnElevationLineInResponseField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location StartLocationField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location EndLocation
        {
            get
            {
                return this.EndLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EndLocationField, value) != true))
                {
                    this.EndLocationField = value;
                    this.RaisePropertyChanged("EndLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightLineType HeightLineType
        {
            get
            {
                return this.HeightLineTypeField;
            }
            set
            {
                if ((this.HeightLineTypeField.Equals(value) != true))
                {
                    this.HeightLineTypeField = value;
                    this.RaisePropertyChanged("HeightLineType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.LineOfSightAlgorithm LineOfSightAlgorithm
        {
            get
            {
                return this.LineOfSightAlgorithmField;
            }
            set
            {
                if ((this.LineOfSightAlgorithmField.Equals(value) != true))
                {
                    this.LineOfSightAlgorithmField = value;
                    this.RaisePropertyChanged("LineOfSightAlgorithm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReturnElevationLineInResponse
        {
            get
            {
                return this.ReturnElevationLineInResponseField;
            }
            set
            {
                if ((this.ReturnElevationLineInResponseField.Equals(value) != true))
                {
                    this.ReturnElevationLineInResponseField = value;
                    this.RaisePropertyChanged("ReturnElevationLineInResponse");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location StartLocation
        {
            get
            {
                return this.StartLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StartLocationField, value) != true))
                {
                    this.StartLocationField = value;
                    this.RaisePropertyChanged("StartLocation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LineOfSightAlgorithm", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    public enum LineOfSightAlgorithm : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fresnel40 = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fresnel20 = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LineOfSightResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class LineOfSightResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location EndLocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> HeightLineField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.HeightLineType HeightLineTypeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInLineOfSightField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.LineOfSightAlgorithm LineOfSightAlgorithmField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location StartLocationField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location EndLocation
        {
            get
            {
                return this.EndLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EndLocationField, value) != true))
                {
                    this.EndLocationField = value;
                    this.RaisePropertyChanged("EndLocation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<TestFoV.FieldOfViewService.Location> HeightLine
        {
            get
            {
                return this.HeightLineField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HeightLineField, value) != true))
                {
                    this.HeightLineField = value;
                    this.RaisePropertyChanged("HeightLine");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.HeightLineType HeightLineType
        {
            get
            {
                return this.HeightLineTypeField;
            }
            set
            {
                if ((this.HeightLineTypeField.Equals(value) != true))
                {
                    this.HeightLineTypeField = value;
                    this.RaisePropertyChanged("HeightLineType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInLineOfSight
        {
            get
            {
                return this.IsInLineOfSightField;
            }
            set
            {
                if ((this.IsInLineOfSightField.Equals(value) != true))
                {
                    this.IsInLineOfSightField = value;
                    this.RaisePropertyChanged("IsInLineOfSight");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.LineOfSightAlgorithm LineOfSightAlgorithm
        {
            get
            {
                return this.LineOfSightAlgorithmField;
            }
            set
            {
                if ((this.LineOfSightAlgorithmField.Equals(value) != true))
                {
                    this.LineOfSightAlgorithmField = value;
                    this.RaisePropertyChanged("LineOfSightAlgorithm");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location StartLocation
        {
            get
            {
                return this.StartLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StartLocationField, value) != true))
                {
                    this.StartLocationField = value;
                    this.RaisePropertyChanged("StartLocation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestFoV.FieldOfViewService.ElevationResponse))]
    public partial class ElevationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.Location LocationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RetreiveTerrainTypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.LocationField, value) != true))
                {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetreiveTerrainType
        {
            get
            {
                return this.RetreiveTerrainTypeField;
            }
            set
            {
                if ((this.RetreiveTerrainTypeField.Equals(value) != true))
                {
                    this.RetreiveTerrainTypeField = value;
                    this.RaisePropertyChanged("RetreiveTerrainType");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElevationResponse", Namespace = "http://schemas.datacontract.org/2004/07/Contracts")]
    [System.SerializableAttribute()]
    public partial class ElevationResponse : TestFoV.FieldOfViewService.ElevationRequest
    {

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HeightInMetersField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestFoV.FieldOfViewService.TerrainType TerrainTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public float HeightInMeters
        {
            get
            {
                return this.HeightInMetersField;
            }
            set
            {
                if ((this.HeightInMetersField.Equals(value) != true))
                {
                    this.HeightInMetersField = value;
                    this.RaisePropertyChanged("HeightInMeters");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestFoV.FieldOfViewService.TerrainType TerrainType
        {
            get
            {
                return this.TerrainTypeField;
            }
            set
            {
                if ((this.TerrainTypeField.Equals(value) != true))
                {
                    this.TerrainTypeField = value;
                    this.RaisePropertyChanged("TerrainType");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "FieldOfViewService.IFieldOfViewService")]
    public interface IFieldOfViewService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsVector", ReplyAction = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsVectorResponse")]
        TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse ComputeFieldOfViewAsVector(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsVector", ReplyAction = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsVectorResponse")]
        System.IAsyncResult BeginComputeFieldOfViewAsVector(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse EndComputeFieldOfViewAsVector(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsImage", ReplyAction = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsImageResponse")]
        TestFoV.FieldOfViewService.FieldOfViewAsImageResponse ComputeFieldOfViewAsImage(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsImage", ReplyAction = "http://tempuri.org/IFieldOfViewService/ComputeFieldOfViewAsImageResponse")]
        System.IAsyncResult BeginComputeFieldOfViewAsImage(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.FieldOfViewAsImageResponse EndComputeFieldOfViewAsImage(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/GetTerrainTypeAtLocation", ReplyAction = "http://tempuri.org/IFieldOfViewService/GetTerrainTypeAtLocationResponse")]
        TestFoV.FieldOfViewService.TerrainTypeResponse GetTerrainTypeAtLocation(TestFoV.FieldOfViewService.TerrainTypeRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/GetTerrainTypeAtLocation", ReplyAction = "http://tempuri.org/IFieldOfViewService/GetTerrainTypeAtLocationResponse")]
        System.IAsyncResult BeginGetTerrainTypeAtLocation(TestFoV.FieldOfViewService.TerrainTypeRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.TerrainTypeResponse EndGetTerrainTypeAtLocation(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeightMap", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightMapResponse")]
        TestFoV.FieldOfViewService.ElevationMapResponse RetreiveHeightMap(TestFoV.FieldOfViewService.ElevationMapRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeightMap", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightMapResponse")]
        System.IAsyncResult BeginRetreiveHeightMap(TestFoV.FieldOfViewService.ElevationMapRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.ElevationMapResponse EndRetreiveHeightMap(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeightLine", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightLineResponse")]
        TestFoV.FieldOfViewService.ElevationLineResponse RetreiveHeightLine(TestFoV.FieldOfViewService.ElevationLineRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeightLine", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightLineResponse")]
        System.IAsyncResult BeginRetreiveHeightLine(TestFoV.FieldOfViewService.ElevationLineRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.ElevationLineResponse EndRetreiveHeightLine(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/IsInLineOfSight", ReplyAction = "http://tempuri.org/IFieldOfViewService/IsInLineOfSightResponse")]
        TestFoV.FieldOfViewService.LineOfSightResponse IsInLineOfSight(TestFoV.FieldOfViewService.LineOfSightRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/IsInLineOfSight", ReplyAction = "http://tempuri.org/IFieldOfViewService/IsInLineOfSightResponse")]
        System.IAsyncResult BeginIsInLineOfSight(TestFoV.FieldOfViewService.LineOfSightRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.LineOfSightResponse EndIsInLineOfSight(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeight", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightResponse")]
        TestFoV.FieldOfViewService.ElevationResponse RetreiveHeight(TestFoV.FieldOfViewService.ElevationRequest request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IFieldOfViewService/RetreiveHeight", ReplyAction = "http://tempuri.org/IFieldOfViewService/RetreiveHeightResponse")]
        System.IAsyncResult BeginRetreiveHeight(TestFoV.FieldOfViewService.ElevationRequest request, System.AsyncCallback callback, object asyncState);

        TestFoV.FieldOfViewService.ElevationResponse EndRetreiveHeight(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFieldOfViewServiceChannel : TestFoV.FieldOfViewService.IFieldOfViewService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]    
    public partial class ComputeFieldOfViewAsVectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public ComputeFieldOfViewAsVectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComputeFieldOfViewAsImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public ComputeFieldOfViewAsImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.FieldOfViewAsImageResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.FieldOfViewAsImageResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTerrainTypeAtLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetTerrainTypeAtLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.TerrainTypeResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.TerrainTypeResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetreiveHeightMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RetreiveHeightMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.ElevationMapResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.ElevationMapResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetreiveHeightLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RetreiveHeightLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.ElevationLineResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.ElevationLineResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsInLineOfSightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public IsInLineOfSightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.LineOfSightResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.LineOfSightResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetreiveHeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RetreiveHeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TestFoV.FieldOfViewService.ElevationResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TestFoV.FieldOfViewService.ElevationResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FieldOfViewServiceClient : System.ServiceModel.ClientBase<TestFoV.FieldOfViewService.IFieldOfViewService>, TestFoV.FieldOfViewService.IFieldOfViewService
    {

        private BeginOperationDelegate onBeginComputeFieldOfViewAsVectorDelegate;

        private EndOperationDelegate onEndComputeFieldOfViewAsVectorDelegate;

        private System.Threading.SendOrPostCallback onComputeFieldOfViewAsVectorCompletedDelegate;

        private BeginOperationDelegate onBeginComputeFieldOfViewAsImageDelegate;

        private EndOperationDelegate onEndComputeFieldOfViewAsImageDelegate;

        private System.Threading.SendOrPostCallback onComputeFieldOfViewAsImageCompletedDelegate;

        private BeginOperationDelegate onBeginGetTerrainTypeAtLocationDelegate;

        private EndOperationDelegate onEndGetTerrainTypeAtLocationDelegate;

        private System.Threading.SendOrPostCallback onGetTerrainTypeAtLocationCompletedDelegate;

        private BeginOperationDelegate onBeginRetreiveHeightMapDelegate;

        private EndOperationDelegate onEndRetreiveHeightMapDelegate;

        private System.Threading.SendOrPostCallback onRetreiveHeightMapCompletedDelegate;

        private BeginOperationDelegate onBeginRetreiveHeightLineDelegate;

        private EndOperationDelegate onEndRetreiveHeightLineDelegate;

        private System.Threading.SendOrPostCallback onRetreiveHeightLineCompletedDelegate;

        private BeginOperationDelegate onBeginIsInLineOfSightDelegate;

        private EndOperationDelegate onEndIsInLineOfSightDelegate;

        private System.Threading.SendOrPostCallback onIsInLineOfSightCompletedDelegate;

        private BeginOperationDelegate onBeginRetreiveHeightDelegate;

        private EndOperationDelegate onEndRetreiveHeightDelegate;

        private System.Threading.SendOrPostCallback onRetreiveHeightCompletedDelegate;

        public FieldOfViewServiceClient()
        {
        }

        public FieldOfViewServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public FieldOfViewServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public FieldOfViewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public FieldOfViewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public event System.EventHandler<ComputeFieldOfViewAsVectorCompletedEventArgs> ComputeFieldOfViewAsVectorCompleted;

        public event System.EventHandler<ComputeFieldOfViewAsImageCompletedEventArgs> ComputeFieldOfViewAsImageCompleted;

        public event System.EventHandler<GetTerrainTypeAtLocationCompletedEventArgs> GetTerrainTypeAtLocationCompleted;

        public event System.EventHandler<RetreiveHeightMapCompletedEventArgs> RetreiveHeightMapCompleted;

        public event System.EventHandler<RetreiveHeightLineCompletedEventArgs> RetreiveHeightLineCompleted;

        public event System.EventHandler<IsInLineOfSightCompletedEventArgs> IsInLineOfSightCompleted;

        public event System.EventHandler<RetreiveHeightCompletedEventArgs> RetreiveHeightCompleted;

        public TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse ComputeFieldOfViewAsVector(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request)
        {
            return base.Channel.ComputeFieldOfViewAsVector(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginComputeFieldOfViewAsVector(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginComputeFieldOfViewAsVector(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse EndComputeFieldOfViewAsVector(System.IAsyncResult result)
        {
            return base.Channel.EndComputeFieldOfViewAsVector(result);
        }

        private System.IAsyncResult OnBeginComputeFieldOfViewAsVector(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request = ((TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest)(inValues[0]));
            return this.BeginComputeFieldOfViewAsVector(request, callback, asyncState);
        }

        private object[] OnEndComputeFieldOfViewAsVector(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.FieldOfViewAsVectorResponse retVal = this.EndComputeFieldOfViewAsVector(result);
            return new object[] {
                    retVal};
        }

        private void OnComputeFieldOfViewAsVectorCompleted(object state)
        {
            if ((this.ComputeFieldOfViewAsVectorCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ComputeFieldOfViewAsVectorCompleted(this, new ComputeFieldOfViewAsVectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ComputeFieldOfViewAsVectorAsync(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request)
        {
            this.ComputeFieldOfViewAsVectorAsync(request, null);
        }

        public void ComputeFieldOfViewAsVectorAsync(TestFoV.FieldOfViewService.FieldOfViewAsVectorRequest request, object userState)
        {
            if ((this.onBeginComputeFieldOfViewAsVectorDelegate == null))
            {
                this.onBeginComputeFieldOfViewAsVectorDelegate = new BeginOperationDelegate(this.OnBeginComputeFieldOfViewAsVector);
            }
            if ((this.onEndComputeFieldOfViewAsVectorDelegate == null))
            {
                this.onEndComputeFieldOfViewAsVectorDelegate = new EndOperationDelegate(this.OnEndComputeFieldOfViewAsVector);
            }
            if ((this.onComputeFieldOfViewAsVectorCompletedDelegate == null))
            {
                this.onComputeFieldOfViewAsVectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnComputeFieldOfViewAsVectorCompleted);
            }
            base.InvokeAsync(this.onBeginComputeFieldOfViewAsVectorDelegate, new object[] {
                        request}, this.onEndComputeFieldOfViewAsVectorDelegate, this.onComputeFieldOfViewAsVectorCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.FieldOfViewAsImageResponse ComputeFieldOfViewAsImage(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage)
        {
            return base.Channel.ComputeFieldOfViewAsImage(requestAsImage);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginComputeFieldOfViewAsImage(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginComputeFieldOfViewAsImage(requestAsImage, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.FieldOfViewAsImageResponse EndComputeFieldOfViewAsImage(System.IAsyncResult result)
        {
            return base.Channel.EndComputeFieldOfViewAsImage(result);
        }

        private System.IAsyncResult OnBeginComputeFieldOfViewAsImage(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage = ((TestFoV.FieldOfViewService.FieldOfViewAsImageRequest)(inValues[0]));
            return this.BeginComputeFieldOfViewAsImage(requestAsImage, callback, asyncState);
        }

        private object[] OnEndComputeFieldOfViewAsImage(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.FieldOfViewAsImageResponse retVal = this.EndComputeFieldOfViewAsImage(result);
            return new object[] {
                    retVal};
        }

        private void OnComputeFieldOfViewAsImageCompleted(object state)
        {
            if ((this.ComputeFieldOfViewAsImageCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ComputeFieldOfViewAsImageCompleted(this, new ComputeFieldOfViewAsImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ComputeFieldOfViewAsImageAsync(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage)
        {
            this.ComputeFieldOfViewAsImageAsync(requestAsImage, null);
        }

        public void ComputeFieldOfViewAsImageAsync(TestFoV.FieldOfViewService.FieldOfViewAsImageRequest requestAsImage, object userState)
        {
            if ((this.onBeginComputeFieldOfViewAsImageDelegate == null))
            {
                this.onBeginComputeFieldOfViewAsImageDelegate = new BeginOperationDelegate(this.OnBeginComputeFieldOfViewAsImage);
            }
            if ((this.onEndComputeFieldOfViewAsImageDelegate == null))
            {
                this.onEndComputeFieldOfViewAsImageDelegate = new EndOperationDelegate(this.OnEndComputeFieldOfViewAsImage);
            }
            if ((this.onComputeFieldOfViewAsImageCompletedDelegate == null))
            {
                this.onComputeFieldOfViewAsImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnComputeFieldOfViewAsImageCompleted);
            }
            base.InvokeAsync(this.onBeginComputeFieldOfViewAsImageDelegate, new object[] {
                        requestAsImage}, this.onEndComputeFieldOfViewAsImageDelegate, this.onComputeFieldOfViewAsImageCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.TerrainTypeResponse GetTerrainTypeAtLocation(TestFoV.FieldOfViewService.TerrainTypeRequest request)
        {
            return base.Channel.GetTerrainTypeAtLocation(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTerrainTypeAtLocation(TestFoV.FieldOfViewService.TerrainTypeRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetTerrainTypeAtLocation(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.TerrainTypeResponse EndGetTerrainTypeAtLocation(System.IAsyncResult result)
        {
            return base.Channel.EndGetTerrainTypeAtLocation(result);
        }

        private System.IAsyncResult OnBeginGetTerrainTypeAtLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.TerrainTypeRequest request = ((TestFoV.FieldOfViewService.TerrainTypeRequest)(inValues[0]));
            return this.BeginGetTerrainTypeAtLocation(request, callback, asyncState);
        }

        private object[] OnEndGetTerrainTypeAtLocation(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.TerrainTypeResponse retVal = this.EndGetTerrainTypeAtLocation(result);
            return new object[] {
                    retVal};
        }

        private void OnGetTerrainTypeAtLocationCompleted(object state)
        {
            if ((this.GetTerrainTypeAtLocationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTerrainTypeAtLocationCompleted(this, new GetTerrainTypeAtLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetTerrainTypeAtLocationAsync(TestFoV.FieldOfViewService.TerrainTypeRequest request)
        {
            this.GetTerrainTypeAtLocationAsync(request, null);
        }

        public void GetTerrainTypeAtLocationAsync(TestFoV.FieldOfViewService.TerrainTypeRequest request, object userState)
        {
            if ((this.onBeginGetTerrainTypeAtLocationDelegate == null))
            {
                this.onBeginGetTerrainTypeAtLocationDelegate = new BeginOperationDelegate(this.OnBeginGetTerrainTypeAtLocation);
            }
            if ((this.onEndGetTerrainTypeAtLocationDelegate == null))
            {
                this.onEndGetTerrainTypeAtLocationDelegate = new EndOperationDelegate(this.OnEndGetTerrainTypeAtLocation);
            }
            if ((this.onGetTerrainTypeAtLocationCompletedDelegate == null))
            {
                this.onGetTerrainTypeAtLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTerrainTypeAtLocationCompleted);
            }
            base.InvokeAsync(this.onBeginGetTerrainTypeAtLocationDelegate, new object[] {
                        request}, this.onEndGetTerrainTypeAtLocationDelegate, this.onGetTerrainTypeAtLocationCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.ElevationMapResponse RetreiveHeightMap(TestFoV.FieldOfViewService.ElevationMapRequest request)
        {
            return base.Channel.RetreiveHeightMap(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetreiveHeightMap(TestFoV.FieldOfViewService.ElevationMapRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetreiveHeightMap(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.ElevationMapResponse EndRetreiveHeightMap(System.IAsyncResult result)
        {
            return base.Channel.EndRetreiveHeightMap(result);
        }

        private System.IAsyncResult OnBeginRetreiveHeightMap(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.ElevationMapRequest request = ((TestFoV.FieldOfViewService.ElevationMapRequest)(inValues[0]));
            return this.BeginRetreiveHeightMap(request, callback, asyncState);
        }

        private object[] OnEndRetreiveHeightMap(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.ElevationMapResponse retVal = this.EndRetreiveHeightMap(result);
            return new object[] {
                    retVal};
        }

        private void OnRetreiveHeightMapCompleted(object state)
        {
            if ((this.RetreiveHeightMapCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetreiveHeightMapCompleted(this, new RetreiveHeightMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RetreiveHeightMapAsync(TestFoV.FieldOfViewService.ElevationMapRequest request)
        {
            this.RetreiveHeightMapAsync(request, null);
        }

        public void RetreiveHeightMapAsync(TestFoV.FieldOfViewService.ElevationMapRequest request, object userState)
        {
            if ((this.onBeginRetreiveHeightMapDelegate == null))
            {
                this.onBeginRetreiveHeightMapDelegate = new BeginOperationDelegate(this.OnBeginRetreiveHeightMap);
            }
            if ((this.onEndRetreiveHeightMapDelegate == null))
            {
                this.onEndRetreiveHeightMapDelegate = new EndOperationDelegate(this.OnEndRetreiveHeightMap);
            }
            if ((this.onRetreiveHeightMapCompletedDelegate == null))
            {
                this.onRetreiveHeightMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetreiveHeightMapCompleted);
            }
            base.InvokeAsync(this.onBeginRetreiveHeightMapDelegate, new object[] {
                        request}, this.onEndRetreiveHeightMapDelegate, this.onRetreiveHeightMapCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.ElevationLineResponse RetreiveHeightLine(TestFoV.FieldOfViewService.ElevationLineRequest request)
        {
            return base.Channel.RetreiveHeightLine(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetreiveHeightLine(TestFoV.FieldOfViewService.ElevationLineRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetreiveHeightLine(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.ElevationLineResponse EndRetreiveHeightLine(System.IAsyncResult result)
        {
            return base.Channel.EndRetreiveHeightLine(result);
        }

        private System.IAsyncResult OnBeginRetreiveHeightLine(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.ElevationLineRequest request = ((TestFoV.FieldOfViewService.ElevationLineRequest)(inValues[0]));
            return this.BeginRetreiveHeightLine(request, callback, asyncState);
        }

        private object[] OnEndRetreiveHeightLine(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.ElevationLineResponse retVal = this.EndRetreiveHeightLine(result);
            return new object[] {
                    retVal};
        }

        private void OnRetreiveHeightLineCompleted(object state)
        {
            if ((this.RetreiveHeightLineCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetreiveHeightLineCompleted(this, new RetreiveHeightLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RetreiveHeightLineAsync(TestFoV.FieldOfViewService.ElevationLineRequest request)
        {
            this.RetreiveHeightLineAsync(request, null);
        }

        public void RetreiveHeightLineAsync(TestFoV.FieldOfViewService.ElevationLineRequest request, object userState)
        {
            if ((this.onBeginRetreiveHeightLineDelegate == null))
            {
                this.onBeginRetreiveHeightLineDelegate = new BeginOperationDelegate(this.OnBeginRetreiveHeightLine);
            }
            if ((this.onEndRetreiveHeightLineDelegate == null))
            {
                this.onEndRetreiveHeightLineDelegate = new EndOperationDelegate(this.OnEndRetreiveHeightLine);
            }
            if ((this.onRetreiveHeightLineCompletedDelegate == null))
            {
                this.onRetreiveHeightLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetreiveHeightLineCompleted);
            }
            base.InvokeAsync(this.onBeginRetreiveHeightLineDelegate, new object[] {
                        request}, this.onEndRetreiveHeightLineDelegate, this.onRetreiveHeightLineCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.LineOfSightResponse IsInLineOfSight(TestFoV.FieldOfViewService.LineOfSightRequest request)
        {
            return base.Channel.IsInLineOfSight(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsInLineOfSight(TestFoV.FieldOfViewService.LineOfSightRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginIsInLineOfSight(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.LineOfSightResponse EndIsInLineOfSight(System.IAsyncResult result)
        {
            return base.Channel.EndIsInLineOfSight(result);
        }

        private System.IAsyncResult OnBeginIsInLineOfSight(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.LineOfSightRequest request = ((TestFoV.FieldOfViewService.LineOfSightRequest)(inValues[0]));
            return this.BeginIsInLineOfSight(request, callback, asyncState);
        }

        private object[] OnEndIsInLineOfSight(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.LineOfSightResponse retVal = this.EndIsInLineOfSight(result);
            return new object[] {
                    retVal};
        }

        private void OnIsInLineOfSightCompleted(object state)
        {
            if ((this.IsInLineOfSightCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsInLineOfSightCompleted(this, new IsInLineOfSightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void IsInLineOfSightAsync(TestFoV.FieldOfViewService.LineOfSightRequest request)
        {
            this.IsInLineOfSightAsync(request, null);
        }

        public void IsInLineOfSightAsync(TestFoV.FieldOfViewService.LineOfSightRequest request, object userState)
        {
            if ((this.onBeginIsInLineOfSightDelegate == null))
            {
                this.onBeginIsInLineOfSightDelegate = new BeginOperationDelegate(this.OnBeginIsInLineOfSight);
            }
            if ((this.onEndIsInLineOfSightDelegate == null))
            {
                this.onEndIsInLineOfSightDelegate = new EndOperationDelegate(this.OnEndIsInLineOfSight);
            }
            if ((this.onIsInLineOfSightCompletedDelegate == null))
            {
                this.onIsInLineOfSightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsInLineOfSightCompleted);
            }
            base.InvokeAsync(this.onBeginIsInLineOfSightDelegate, new object[] {
                        request}, this.onEndIsInLineOfSightDelegate, this.onIsInLineOfSightCompletedDelegate, userState);
        }

        public TestFoV.FieldOfViewService.ElevationResponse RetreiveHeight(TestFoV.FieldOfViewService.ElevationRequest request)
        {
            return base.Channel.RetreiveHeight(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetreiveHeight(TestFoV.FieldOfViewService.ElevationRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRetreiveHeight(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TestFoV.FieldOfViewService.ElevationResponse EndRetreiveHeight(System.IAsyncResult result)
        {
            return base.Channel.EndRetreiveHeight(result);
        }

        private System.IAsyncResult OnBeginRetreiveHeight(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TestFoV.FieldOfViewService.ElevationRequest request = ((TestFoV.FieldOfViewService.ElevationRequest)(inValues[0]));
            return this.BeginRetreiveHeight(request, callback, asyncState);
        }

        private object[] OnEndRetreiveHeight(System.IAsyncResult result)
        {
            TestFoV.FieldOfViewService.ElevationResponse retVal = this.EndRetreiveHeight(result);
            return new object[] {
                    retVal};
        }

        private void OnRetreiveHeightCompleted(object state)
        {
            if ((this.RetreiveHeightCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetreiveHeightCompleted(this, new RetreiveHeightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RetreiveHeightAsync(TestFoV.FieldOfViewService.ElevationRequest request)
        {
            this.RetreiveHeightAsync(request, null);
        }

        public void RetreiveHeightAsync(TestFoV.FieldOfViewService.ElevationRequest request, object userState)
        {
            if ((this.onBeginRetreiveHeightDelegate == null))
            {
                this.onBeginRetreiveHeightDelegate = new BeginOperationDelegate(this.OnBeginRetreiveHeight);
            }
            if ((this.onEndRetreiveHeightDelegate == null))
            {
                this.onEndRetreiveHeightDelegate = new EndOperationDelegate(this.OnEndRetreiveHeight);
            }
            if ((this.onRetreiveHeightCompletedDelegate == null))
            {
                this.onRetreiveHeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetreiveHeightCompleted);
            }
            base.InvokeAsync(this.onBeginRetreiveHeightDelegate, new object[] {
                        request}, this.onEndRetreiveHeightDelegate, this.onRetreiveHeightCompletedDelegate, userState);
        }
    }
}

<UserControl x:Class="csCommon.LayersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:SlideTab="clr-namespace:csShared.Controls.SlideTab"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:csCommon="clr-namespace:csCommon"
             xmlns:csDataServerPlugin="clr-namespace:csDataServerPlugin"
             xmlns:custom="http://schemas.microsoft.com/surface/2008"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             x:Name="UserControl"
             mc:Ignorable="d">

    <!--  TODO Suggestion: can we add comments to this large file to indicate what the function is of all the components? Right now, it is quite hard to find what everything does. Giving items a name would also help.  -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/csCommon;component/Resources/Styles/Simple Styles.xaml" />
                <ResourceDictionary Source="/csCommon;component/Resources/Styles/BlackStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <wpfConverters:DoubleIsZeroVisibilityConverter x:Key="DoubleIsZeroVisibilityConverter" />
            <csCommon:LayerBackgroundColor x:Key="LayerBackgroundColor" />
            <wpfConverters:BooleanActiveOpacityConverter x:Key="BooleanActiveOpacityConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <wpfConverters:ReverseBooleanVisibilityConverter x:Key="ReverseBooleanVisibilityConverter" />
            <wpfConverters:ReverseBooleanActiveOpacityConverter x:Key="ReverseBooleanActiveOpacityConverter" />
            <csCommon:ServiceIconConverter x:Key="ServiceIconConverter" />
            <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels" Value="False" />
                <Setter Property="FontFamily" Value="Segoe360" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="17" />
                <Setter Property="Padding" Value="6,2,10,10" />
                <Setter Property="MinHeight" Value="38" />
                <Setter Property="MinWidth" Value="38" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="BorderThickness" Value="2" />
            </Style>
            <SolidColorBrush x:Key="ControlHitAreaBrush" Color="#00FFFFFF" />

            <ItemsPanelTemplate x:Key="DefaultItemsPanelTemplate">
                <StackPanel Width="Auto"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ClipToBounds="False"
                            Orientation="Vertical">
                    <!--ItemHeight="50"
                                             ItemWidth="325"
                                             IsComposing="True"
                                             DragOpacity="0.75"
                                             DragScale="1.1"
                        <wpfSpark:FluidWrapPanel.ElementEasing>
                        <BackEase EasingMode="EaseOut"
                                      Amplitude="0.35"></BackEase>
                    </wpfSpark:FluidWrapPanel.ElementEasing>
                    <wpfSpark:FluidWrapPanel.DragEasing>
                        <BackEase EasingMode="EaseOut"
                                      Amplitude="0.65"></BackEase>
                    </wpfSpark:FluidWrapPanel.DragEasing>-->
                </StackPanel>
            </ItemsPanelTemplate>


            <DataTemplate x:Key="LayerTemplate">
                <Grid>
                    <!--  d:DataContext="{d:DesignInstance csCommon:LayersViewModel}"  -->
                    <StackPanel Margin="0" Orientation="Vertical">
                        <Grid>

                            <custom:SurfaceCheckBox x:Name="cbVisible"
                                                    Margin="0"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Top"
                                                    cal:Message.Attach="[Event Checked]=[Action ActivateGisLayer($dataContext];[Event DeactivateGisLayer]=[Action Unchecked($dataContext)]"
                                                    Background="Black"
                                                    Content="{Binding Title}"
                                                    Foreground="Black"
                                                    IsChecked="{Binding Visible}"
                                                    IsEnabled="{Binding IsLoading,
                                                                        Converter={StaticResource ReverseBooleanActiveOpacityConverter}}" />

                            <!--<Border  HorizontalAlignment="Right" Margin="0,0,50,0">
                                <i:Interaction.Behaviors>
                                    <wpfSpark:FluidMouseDragBehavior  DragButton="Left"></wpfSpark:FluidMouseDragBehavior>
                                </i:Interaction.Behaviors>
                                <Image Source="/csCommon;component/icons/Order.png" Width="30" Height="30" IsHitTestVisible="False" />
                            </Border>-->
                            <!--<Border Background="Black" Width="10" Height="10" Visibility="{Binding Layer.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"></Border>-->
                            <custom:SurfaceToggleButton x:Name="stbExpand"
                                                        Margin="0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        IsChecked="False">
                                <Path Width="15"
                                      Height="15"
                                      Margin="0,0,0,0"
                                      Data="M30.707001,52.895L63.441002,52.895 63.441002,58.181999 30.707001,58.181999z M0,47.075001L16.922001,47.075001 16.922001,64 0,64z M30.707001,29.372L63.441002,29.372 63.441002,34.66 30.707001,34.66z M0,23.555L16.922001,23.555 16.922001,40.478001 0,40.478001z M30.707001,5.8150005L63.441002,5.8150005 63.441002,11.103 30.707001,11.103z M0,0L16.922001,0 16.922001,16.921 0,16.921z"
                                      Fill="#FF898989"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Uniform">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </custom:SurfaceToggleButton>

                        </Grid>

                        <Grid Margin="20,0,0,0">
                            <StackPanel Margin="0" Orientation="Vertical">
                                <Grid Margin="0" Visibility="{Binding IsChecked, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=stbExpand}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Viewbox Width="20"
                                             Height="20"
                                             Margin="8,5,12,0"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Top">
                                        <Path Margin="0,0,0,0"
                                              Data="M33.597977,10.759002C37.946865,10.759002 41.485962,14.285001 41.485962,18.649 41.485962,23 37.946865,26.535 33.597977,26.535 29.23909,26.535 25.709992,23 25.709992,18.649 25.709992,17.784 25.849955,16.953001 26.109888,16.174002 26.779719,16.881001 27.70948,17.327002 28.759213,17.327002 30.778696,17.327002 32.418278,15.691001 32.418278,13.668001 32.418278,12.663001 32.008381,11.748001 31.348551,11.087002 32.058369,10.876001 32.818176,10.759002 33.597977,10.759002z M33.606682,4.3679962C25.92741,4.3679957 19.698065,10.594956 19.698065,18.27293 19.698065,25.953894 25.92741,32.177862 33.606682,32.177862 41.295838,32.177862 47.515175,25.953894 47.515175,18.27293 47.515175,10.594956 41.295838,4.3679957 33.606682,4.3679962z M34.867642,1.546141E-09C36.890393,2.6508449E-05 58.705193,0.41938579 68.893006,18.299923 68.893006,18.299923 57.1442,36.139837 34.44656,34.768854 34.44656,34.768854 14.428583,36.59984 0,18.299923 0,18.299923 9.0791523,0.4590019 34.716553,0.0010111886 34.716553,0.0010114873 34.768162,-1.4442128E-06 34.867642,1.546141E-09z"
                                              Fill="#FF000000"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Uniform" />

                                    </Viewbox>
                                    <custom:SurfaceSlider Height="Auto"
                                                          MinWidth="40"
                                                          MinHeight="40"
                                                          Margin="20,0,0,0"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Top"
                                                          Background="{x:Null}"
                                                          Foreground="Red"
                                                          LargeChange="0.25"
                                                          Maximum="1"
                                                          Style="{StaticResource BlackSliderStyle}"
                                                          Value="{Binding Layer.Opacity,
                                                                          Mode=TwoWay}" />
                                    <StackPanel Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Orientation="Horizontal">
                                        <custom:SurfaceButton x:Name="ZoomButton"
                                                              Margin="0"
                                                              cal:Message.Attach="[Event Click]=[Action Zoom($dataContext)]">
                                            <Path Width="20"
                                                  Height="20"
                                                  Margin="0,0,0,0"
                                                  Data="F1M1937.77,2316.51L1924.92,2300.18C1929.1,2294.35 1929.14,2286.25 1924.48,2280.33 1918.84,2273.15 1908.45,2271.92 1901.27,2277.56 1894.1,2283.2 1892.86,2293.59 1898.5,2300.77 1903.23,2306.77 1911.26,2308.6 1917.96,2305.74L1930.77,2322.02 1937.77,2316.51z M1903.81,2296.59C1900.48,2292.35 1901.21,2286.21 1905.45,2282.87 1909.69,2279.53 1915.84,2280.26 1919.17,2284.51 1922.51,2288.75 1921.78,2294.89 1917.54,2298.23 1913.29,2301.57 1907.15,2300.84 1903.81,2296.59z"
                                                  Fill="#FF000000"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  Stretch="Uniform">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </custom:SurfaceButton>
                                        <custom:SurfaceButton x:Name="ConfigButton"
                                                              Margin="0"
                                                              cal:Message.Attach="[Event Click]=[Action Config($dataContext)]"
                                                              Visibility="{Binding IsConfigAvailable,
                                                                                   Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Path Width="20"
                                                  Height="20"
                                                  Margin="0,0,0,0"
                                                  Data="F1M60.9043,41.6863C57.7236,39.6523 41.5319,29.1797 32.4893,23.332 33.1949,17.4545 30.6182,11.4167 25.3102,7.98975 20.0208,4.57422 13.4778,4.68884 8.41565,7.72009L22.7796,17.0052 22.3782,25.129 15.1432,28.8373 0.76886,19.5496C0.0845947,25.4115 2.66895,31.4285 7.95862,34.8463 13.2617,38.2709 19.8206,38.142 24.888,35.0925 33.9541,40.9545 50.2184,51.4688 53.303,53.4492 57.6168,56.2239 65.3626,44.5326 60.9043,41.6863z"
                                                  Fill="#FF000000"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  Stretch="Uniform" />
                                        </custom:SurfaceButton>

                                    </StackPanel>
                                </Grid>
                                <ItemsControl x:Name="icsChildLayers"
                                              Margin="0"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Stretch"
                                              ItemTemplate="{DynamicResource LayerTemplate}"
                                              ItemsPanel="{StaticResource DefaultItemsPanelTemplate}"
                                              ItemsSource="{Binding Children}"
                                              Visibility="{Binding IsChecked,
                                                                   BindsDirectlyToSource=True,
                                                                   Converter={StaticResource BooleanToVisibilityConverter},
                                                                   ElementName=cbVisible}" />
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Grid>
            </DataTemplate>


            <Style x:Key="LayerSurfaceCheckBoxStyle"
                   BasedOn="{StaticResource ControlBaseStyle}"
                   TargetType="{x:Type custom:SurfaceCheckBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceCheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Checked">
                                    <DoubleAnimation Duration="00:00:00.0100000"
                                                     Storyboard.TargetName="Checkmark"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" />
                                </Storyboard>
                                <Storyboard x:Key="Unchecked">
                                    <DoubleAnimation Duration="00:00:00.1500000"
                                                     From="0.4"
                                                     Storyboard.TargetName="Checkmark"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="hitArea"
                                           Grid.ColumnSpan="2"
                                           Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{StaticResource ControlHitAreaBrush}" />
                                <BulletDecorator x:Name="bulletDecorator"
                                                 Grid.Column="0"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <BulletDecorator.Bullet>
                                        <Border x:Name="CheckButtonRect"
                                                Width="20"
                                                Height="20"
                                                Margin="1,6,0,0"
                                                BorderBrush="#99000000"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Path x:Name="Checkmark"
                                                      Width="14"
                                                      Height="14"
                                                      Data="M0,24 L12,0 M0,0 L12,24"
                                                      Fill="{x:Null}"
                                                      Opacity="0"
                                                      Stretch="Fill"
                                                      Stroke="#E6000000"
                                                      StrokeEndLineCap="Flat"
                                                      StrokeStartLineCap="Flat"
                                                      StrokeThickness="2" />
                                                <Rectangle x:Name="ThreeStateMark"
                                                           Width="6"
                                                           Height="6"
                                                           Fill="{DynamicResource {x:Static custom:SurfaceColors.BulletBrushKey}}"
                                                           Opacity="0" />
                                            </Grid>
                                        </Border>
                                    </BulletDecorator.Bullet>
                                </BulletDecorator>
                                <ContentPresenter x:Name="Content"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsThreeState" Value="True" />
                                        <Condition Property="IsChecked" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Checkmark" Property="Opacity" Value="0" />
                                    <Setter TargetName="ThreeStateMark" Property="Opacity" Value="1" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Checked}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Unchecked}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundPressedBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderPressedBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundPressedBrushKey}}" />
                                    <Setter TargetName="Checkmark" Property="Stroke" Value="{DynamicResource {x:Static custom:SurfaceColors.BulletPressedBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderDisabledBrushKey}}" />
                                    <Setter Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundDisabledBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundDisabledBrushKey}}" />
                                    <Setter TargetName="Checkmark" Property="Stroke" Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
                                    <Setter TargetName="ThreeStateMark" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SurfaceHitAreaBaseStyle" TargetType="{x:Type Control}">
                <Setter Property="SnapsToDevicePixels" Value="False" />
                <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="MinWidth" Value="40" />
                <Setter Property="MinHeight" Value="40" />
            </Style>
            <Style x:Key="SliderToolTipStyle" TargetType="{x:Type Label}">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="ClipToBounds" Value="False" />
                <Setter Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ToolTipBackgroundBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ToolTipForegroundBrushKey}}" />
                <Setter Property="Padding" Value="5,2,5,3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Grid Background="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundBrushKey}}">
                                <Border HorizontalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        Opacity="{TemplateBinding Opacity}">
                                    <TextBlock Margin="{TemplateBinding Padding}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SliderHorzDecreaseRepeatButtonStyle" TargetType="{x:Type custom:SurfaceRepeatButton}">
                <Setter Property="Interval" Value="150" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceRepeatButton}">
                            <Grid MinHeight="38"
                                  MaxHeight="38"
                                  Background="{StaticResource ControlHitAreaBrush}">
                                <Rectangle MinHeight="4"
                                           Margin="1,14,1,0"
                                           VerticalAlignment="Top"
                                           Fill="Black" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SliderHorzIncreaseRepeatButtonStyle" TargetType="{x:Type custom:SurfaceRepeatButton}">
                <Setter Property="Interval" Value="150" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceRepeatButton}">
                            <Grid MinHeight="38"
                                  MaxHeight="38"
                                  Background="{StaticResource ControlHitAreaBrush}">
                                <Rectangle MinHeight="4"
                                           Margin="1,14,1,0"
                                           VerticalAlignment="Top"
                                           Fill="Black"
                                           StrokeThickness="3" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SurfaceThumbStyle"
                   BasedOn="{StaticResource SurfaceHitAreaBaseStyle}"
                   TargetType="{x:Type custom:SurfaceThumb}">
                <Setter Property="custom:TouchVisualizer.Adapter">
                    <Setter.Value>
                        <custom:RectangleTouchVisualizerAdapter RadiusX="15" RadiusY="15" />
                    </Setter.Value>
                </Setter>
                <Setter Property="MinHeight" Value="6" />
                <Setter Property="MinWidth" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceThumb}">
                            <ControlTemplate.Resources>
                                <!--  Horizontal orientation  -->
                                <Storyboard x:Key="Touch">
                                    <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="Thumb"
                                                     Storyboard.TargetProperty="Width"
                                                     To="38" />
                                    <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="Thumb"
                                                     Storyboard.TargetProperty="Height"
                                                     To="16" />
                                    <ThicknessAnimation Duration="0:0:0.1"
                                                        Storyboard.TargetName="Thumb"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="-16,7,-16,0" />
                                </Storyboard>
                                <Storyboard x:Key="Release">
                                    <DoubleAnimation Duration="0:0:0.15"
                                                     Storyboard.TargetName="Thumb"
                                                     Storyboard.TargetProperty="Width"
                                                     To="6" />
                                    <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="Thumb"
                                                     Storyboard.TargetProperty="Height"
                                                     To="14" />
                                    <ThicknessAnimation Duration="0:0:0.15"
                                                        Storyboard.TargetName="Thumb"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="0,8,0,0" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="Grid">
                                <Rectangle x:Name="HitArea"
                                           Width="38"
                                           Height="38"
                                           Margin="-18,0,-18,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{StaticResource ControlHitAreaBrush}" />
                                <Rectangle x:Name="Thumb"
                                           Width="8"
                                           Height="16"
                                           Margin="0,8,0,0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Top"
                                           Fill="Black" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="custom:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Touch}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Release}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Thumb" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.ThumbDisabledBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
            <StreamGeometry x:Key="TreeArrow">M0,0L0,16 16,0z</StreamGeometry>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="32"
                                    Height="32"
                                    Background="Transparent"
                                    Padding="0">
                                <Path x:Name="ExpandPath"
                                      Margin="10,5,-2,0"
                                      Data="{StaticResource TreeArrow}"
                                      Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                                      Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                                    <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                                    <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ListBorder" Color="#828790" />
            <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                                    -->
                                    <ToggleButton x:Name="Expander"
                                                  ClickMode="Press"
                                                  IsChecked="{Binding IsExpanded,
                                                                      RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Focusable" Value="false" />
                                                <Setter Property="Width" Value="16" />
                                                <Setter Property="Height" Value="16" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border Width="16"
                                                                    Height="16"
                                                                    Background="#00FFFFFF"
                                                                    Padding="5,5,5,5">
                                                                <Path x:Name="ExpandPath"
                                                                      Fill="#00FFFFFF"
                                                                      Stroke="#FF989898">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#00FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="Bd"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Panel.Background}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="PART_Header"
                                                          HorizontalAlignment="Stretch"
                                                          Content="{TemplateBinding HeaderedContentControl.Header}"
                                                          ContentSource="Header"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost"
                                                    Grid.Row="1"
                                                    Grid.Column="1" />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemStyle2"
                   BasedOn="{StaticResource {x:Type TreeViewItem}}"
                   TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                                    -->
                                    <Border x:Name="Bd"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Panel.Background}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="PART_Header"
                                                          HorizontalAlignment="Stretch"
                                                          Content="{TemplateBinding HeaderedContentControl.Header}"
                                                          ContentSource="Header"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost"
                                                    Grid.Row="1"
                                                    Grid.Column="1" />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False" />
                                <Trigger Property="IsSelected" Value="True" />
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style x:Key="TreeViewStyle2" TargetType="{x:Type TreeView}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border x:Name="Bd"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <custom:SurfaceScrollViewer x:Name="_tv_scrollviewer_"
                                                            Background="{TemplateBinding Background}"
                                                            CanContentScroll="false"
                                                            Focusable="false"
                                                            HorizontalScrollBarVisibility="Disabled"
                                                            Padding="{TemplateBinding Padding}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            VerticalScrollBarVisibility="Hidden">
                                    <ItemsPresenter />
                                </custom:SurfaceScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                </Trigger>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                    <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabItemStyle2" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type SlideTab:SlideTabItem}">
                            <Grid x:Name="grid"
                                  Margin="0"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="Bd"
                                        Height="Auto"
                                        Margin="0,5,0,0"
                                        Background="{x:Null}"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,0,1">
                                    <ContentPresenter ContentSource="Header" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Panel.ZIndex" Value="1" />
                                    <Setter TargetName="Bd" Property="Margin" Value="0" />
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
                                    <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0" />
                                    <Setter TargetName="grid" Property="Margin" Value="0" />
                                    <Setter TargetName="Bd" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="Bd" Property="Margin" Value="0,5,0,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TabItemDisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SlideTabControlStyle1" TargetType="{x:Type SlideTab:SlideTabControl}">
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="#FFACACAC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type SlideTab:SlideTabControl}">
                            <Grid x:Name="templateRoot"
                                  ClipToBounds="True"
                                  KeyboardNavigation.TabNavigation="Local"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2"
                                        Width="20"
                                        Height="50"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,0,1" />
                                <Border Grid.Row="0"
                                        Grid.Column="0"
                                        Height="50"
                                        Margin="20,0,0,0"
                                        BorderBrush="Black"
                                        BorderThickness="0">
                                    <TabPanel x:Name="HeaderPanel"
                                              Panel.ZIndex="1"
                                              Background="{x:Null}"
                                              IsItemsHost="True"
                                              KeyboardNavigation.TabIndex="1" />
                                </Border>
                                <Border x:Name="ContentPanel"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding SelectedContent}"
                                                      ContentSource="SelectedContent"
                                                      ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="AvailableTemplate">
                <Grid>
                    <Border Width="35"
                            Height="35"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="Black"
                            CornerRadius="4">
                        <Image Margin="5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding IconUri}" />
                    </Border>
                    <TextBlock Margin="40,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               FontSize="24"
                               Text="{Binding Name}"
                               TextWrapping="Wrap" />
                    <custom:SurfaceButton MinWidth="30"
                                          MinHeight="30"
                                          Margin="0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          cal:Message.Attach="[Event Click]=[Action AddTemplate($dataContext)]"
                                          Background="{x:Null}">
                        <Path Width="30"
                              Height="30"
                              Margin="0,0,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"
                              Fill="#FF000000"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </custom:SurfaceButton>
                </Grid>
            </DataTemplate>
            <Style x:Key="CleanToggleButton" TargetType="{x:Type custom:SurfaceToggleButton}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="7" />
                <!--<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}"/>-->
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceToggleButton}">
                            <ControlTemplate.Resources>
                                <!--<Storyboard x:Key="Press">
            						<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
            							<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="Release">
            						<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
            							<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>-->
                            </ControlTemplate.Resources>
                            <Grid x:Name="Grid"
                                  Background="Transparent"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Border x:Name="ButtonBody"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--<Border x:Name="PressOverlay" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                <ContentPresenter x:Name="Content"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsChecked" Value="True">
            						<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}"/>
            					</Trigger>-->
                                <!--<Trigger Property="IsPressed" Value="True">
            						<Trigger.EnterActions>
            							<BeginStoryboard>
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
            										<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</BeginStoryboard>
            						</Trigger.EnterActions>
            						<Trigger.ExitActions>
            							<BeginStoryboard>
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
            										<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</BeginStoryboard>
            						</Trigger.ExitActions>
            						-->
                                <!--<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}"/>-->
                                <!--
            					</Trigger>-->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Content" Property="Opacity" Value="0.6" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <!--<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type custom:SurfaceColors}}}"/>-->
                                    <Setter TargetName="Content" Property="Opacity" Value="0.33" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="SnapsToDevicePixels" Value="False" />
                        <Setter Property="FontFamily" Value="Segoe360" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="17" />
                        <Setter Property="Padding" Value="6,2,10,10" />
                        <Setter Property="MinHeight" Value="38" />
                        <Setter Property="MinWidth" Value="38" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Top" />
                        <Setter Property="BorderThickness" Value="2" />
                    </Style>
                </Style.BasedOn>
            </Style>

            <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                <StackPanel HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsItemsHost="True" />
            </ItemsPanelTemplate>
            <Style x:Key="SurfaceButtonStyle3" TargetType="{x:Type custom:SurfaceButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceButton}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <wpfConverters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisiblityConverter" />
            <DataTemplate x:Key="ContentItemTemplate">
                <Grid Width="Auto"
                      Height="Auto"
                      Margin="3"
                      Background="{x:Null}">
                    <custom:SurfaceButton x:Name="Config"
                                          Width="48"
                                          Height="48"
                                          Margin="0,1,1,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          cal:Message.Attach="[Event Click] = [Action ConfigContent($dataContext)]"
                                          Style="{DynamicResource SurfaceButtonStyle1}"
                                          Visibility="{Binding IsRunning,
                                                               Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid Width="48"
                              Height="48"
                              Background="#3F000000"
                              Visibility="Collapsed">
                            <Image Margin="10" Source="/csCommon;component/Resources/Icons/tools.png" />
                        </Grid>
                    </custom:SurfaceButton>
                    <Border Width="35"
                            Height="35"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="Black"
                            CornerRadius="4">
                        <Image Margin="5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding IconUri}" />
                    </Border>
                    <TextBlock Margin="40,0"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Top"
                               FontSize="24"
                               Text="{Binding Name}"
                               TextWrapping="NoWrap" />
                    <custom:SurfaceButton x:Name="Add"
                                          MinWidth="30"
                                          MinHeight="30"
                                          Margin="0,0,4,0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          cal:Message.Attach="[Event Click]=[Action AddContent($dataContext)]"
                                          Background="{x:Null}"
                                          Visibility="{Binding IsRunning,
                                                               Converter={StaticResource InverseBooleanToVisiblityConverter}}">
                        <Path Width="30"
                              Height="30"
                              Margin="0,0,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"
                              Fill="#FF000000"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </custom:SurfaceButton>
                    <custom:SurfaceButton x:Name="Remove"
                                          MinWidth="30"
                                          MinHeight="30"
                                          Margin="0,0,4,0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          HorizontalContentAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          cal:Message.Attach="[Event Click]=[Action RemoveContent($dataContext)]"
                                          Background="{x:Null}"
                                          Visibility="{Binding IsRunning,
                                                               Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Path Width="29.999"
                              Height="7.261"
                              Margin="0,0,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M52.334,19.833999 L52.334,32.500999 0,32.500999 0,19.833999 z"
                              Fill="#FF000000"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </custom:SurfaceButton>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid Margin="0" ScrollViewer.CanContentScroll="True">
        <Border Height="50"
                Margin="170,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                BorderBrush="Black"
                BorderThickness="0,0,0,1" />
        <SlideTab:SlideTabControl HorizontalContentAlignment="Stretch"
                                  VerticalContentAlignment="Stretch"
                                  Background="{x:Null}"
                                  BorderThickness="0"
                                  SelectedIndex="{Binding SelectedTab,
                                                          Mode=TwoWay}"
                                  Style="{DynamicResource SlideTabControlStyle1}">
            <SlideTab:SlideTabItem x:Name="stiLayers"
                                   Height="50"
                                   MinWidth="75"
                                   Background="{x:Null}"
                                   FontSize="16"
                                   Foreground="Black"
                                   Padding="0"
                                   ShowHeaderText="Hidden"
                                   Style="{DynamicResource TabItemStyle2}">
                <SlideTab:SlideTabItem.Header>
                    <Grid Margin="0" Background="Transparent">
                        <Path Width="30"
                              Height="30"
                              Margin="0"
                              Data="M0,14.769L9.8462706,14.769 9.8462706,39.384388 49.23,39.384388 49.23,49.231003 0,49.231003z M14.77,0L64,0 64,34.462002 14.77,34.462002z"
                              Fill="#FF000000"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform" />
                    </Grid>
                </SlideTab:SlideTabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TreeView x:Name="tvStartLayer"
                              Grid.RowSpan="2"
                              Margin="0,8,0,0"
                              Background="{x:Null}"
                              BorderBrush="{x:Null}"
                              BorderThickness="0"
                              ItemContainerStyle="{DynamicResource TreeViewItemStyle2}"
                              Style="{DynamicResource TreeViewStyle2}">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="csDataServerPlugin:dsLayer" ItemsSource="{Binding Children}">
                                <HierarchicalDataTemplate.Resources>
                                    <Storyboard x:Key="Loading" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="pLoading" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="360" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </HierarchicalDataTemplate.Resources>
                                <Grid Margin="0"
                                      HorizontalAlignment="Stretch"
                                      d:DesignWidth="300">
                                    <custom:SurfaceToggleButton x:Name="stbToggle"
                                                                Width="40"
                                                                Height="40"
                                                                MinWidth="30"
                                                                MinHeight="30"
                                                                Margin="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top"
                                                                HorizontalContentAlignment="Left"
                                                                VerticalContentAlignment="Top"
                                                                cal:Message.Attach="[Event Click]=[Action UpdateExpandState($dataContext)]"
                                                                Background="{x:Null}"
                                                                IsChecked="{Binding IsExpanded,
                                                                                    Mode=TwoWay}"
                                                                Padding="0"
                                                                Style="{StaticResource CleanToggleButton}">
                                        <Grid Height="Auto" HorizontalAlignment="Left">
                                            <Border x:Name="bIcon"
                                                    Width="30"
                                                    Height="30"
                                                    Margin="0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="{Binding Visible,
                                                                         Converter={StaticResource LayerBackgroundColor}}"
                                                    BorderBrush="Black"
                                                    BorderThickness="2"
                                                    CornerRadius="4">

                                                <Grid Margin="0">

                                                    <Image Margin="3"
                                                           Source="{Binding Converter={StaticResource ServiceIconConverter}}"
                                                           Visibility="{Binding IsLoading,
                                                                                Converter={StaticResource ReverseBooleanVisibilityConverter}}" />
                                                    <Path x:Name="pLoading"
                                                          Width="20"
                                                          Height="20"
                                                          Margin="0,0,0,0"
                                                          Data="M33.091251,58.314999C35.398258,58.314999 37.268002,60.186188 37.268002,62.490997 37.268002,64.797111 35.398258,66.667 33.091251,66.667 30.786645,66.667 28.917001,64.797111 28.917001,62.490997 28.917001,60.186188 30.786645,58.314999 33.091251,58.314999z M47.2943,55.271999C49.601437,55.271999 51.471003,57.141811 51.471003,59.447948 51.471003,61.752788 49.601437,63.624 47.2943,63.624 44.989765,63.624 43.119999,61.752788 43.119999,59.447948 43.119999,57.141811 44.989765,55.271999 47.2943,55.271999z M18.6666,54.257999C21.252921,54.257999 23.352,56.354423 23.352,58.94035 23.352,61.526379 21.252921,63.624 18.6666,63.624 16.08058,63.624 13.984001,61.526379 13.984001,58.94035 13.984001,56.354423 16.08058,54.257999 18.6666,54.257999z M57.4405,45.199001C59.3416,45.199001 60.891001,46.743435 60.891001,48.651199 60.891001,50.557564 59.3416,52.102001 57.4405,52.102001 55.534201,52.102001 53.99,50.557564 53.99,48.651199 53.99,46.743435 55.534201,45.199001 57.4405,45.199001z M8.3045502,43.967003C10.890694,43.967003 12.987,46.064644 12.987,48.6507 12.987,51.236656 10.890694,53.333 8.3045502,53.333 5.7185383,53.333 3.6219997,51.236656 3.6219997,48.6507 3.6219997,46.064644 5.7185383,43.967003 8.3045502,43.967003z M61.643499,30.851999C63.544542,30.851999 65.093996,32.396133 65.093996,34.30365 65.093996,36.209869 63.544542,37.754002 61.643499,37.754002 59.737253,37.754002 58.193001,36.209869 58.193001,34.30365 58.193001,32.396133 59.737253,30.851999 61.643499,30.851999z M4.6824703,29.619999C7.268652,29.619999 9.3649998,31.717722 9.3649998,34.30365 9.3649998,36.88958 7.268652,38.986 4.6824703,38.986 2.0965385,38.986 0,36.88958 0,34.30365 0,31.717722 2.0965385,29.619999 4.6824703,29.619999z M57.440451,16.938999C59.101923,16.938999 60.455999,18.287865 60.455999,19.9543 60.455999,21.620834 59.101923,22.971001 57.440451,22.971001 55.773779,22.971001 54.425001,21.620834 54.425001,19.9543 54.425001,18.287865 55.773779,16.938999 57.440451,16.938999z M8.3045502,15.272C10.890694,15.272 12.987,17.368345 12.987,19.9543 12.987,22.540255 10.890694,24.637999 8.3045502,24.637999 5.7185383,24.637999 3.6219997,22.540255 3.6219997,19.9543 3.6219997,17.368345 5.7185383,15.272 8.3045502,15.272z M47.294703,7.0829992C48.875502,7.0829996 50.167002,8.3696136 50.167002,9.9543542 50.167002,11.540385 48.875502,12.827 47.294703,12.827 45.711302,12.827 44.425001,11.540385 44.425001,9.9543542 44.425001,8.3696136 45.711302,7.0829996 47.294703,7.0829992z M18.666401,4.0399989C21.61159,4.0399999 23.997,6.4307284 23.997001,9.3748798 23.997,12.319001 21.61159,14.710999 18.666401,14.710999 15.72391,14.710999 13.336,12.319001 13.335999,9.3748798 13.336,6.4307284 15.72391,4.0399999 18.666401,4.0399989z M33.091201,0C36.294464,-7.5211233E-08 38.891,2.59503 38.891,5.7968797 38.891,8.9987201 36.294464,11.595 33.091201,11.595 29.890533,11.595 27.294,8.9987201 27.294001,5.7968797 27.294,2.59503 29.890533,-7.5211233E-08 33.091201,0z"
                                                          Fill="#FFFFFDFD"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stretch="Uniform"
                                                          Visibility="{Binding IsLoading,
                                                                               BindsDirectlyToSource=True,
                                                                               Converter={StaticResource BooleanToVisibilityConverter},
                                                                               Mode=TwoWay}">
                                                        <Path.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                    <!--<Progress:CircularProgressBar/>-->

                                                </Grid>

                                            </Border>
                                            <Border x:Name="HasChildren"
                                                    Width="15"
                                                    Height="15"
                                                    Margin="21,22,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="Blue"
                                                    CornerRadius="2"
                                                    Visibility="{Binding HasChildren,
                                                                         Converter={x:Static wpfConverters:BooleanHiddenConverter.Instance}}">
                                                <Grid HorizontalAlignment="Left">
                                                    <Path x:Name="expandedPath"
                                                          Width="Auto"
                                                          Height="Auto"
                                                          Margin="0"
                                                          d:IsHidden="True"
                                                          Data="M 12.725695 15.919083 L 12.725695 8.8915273 C 12.725695 7.9084376 12.994508 7.1096772 13.532135 6.4952461 C 14.069762 5.8654544 14.837801 5.5505585 15.836252 5.5505585 C 16.834702 5.5505585 17.602741 5.8654544 18.140369 6.4952461 C 18.693357 7.1096772 18.969851 7.9084376 18.969851 8.8915273 L 18.969851 15.919083 L 25.905241 15.919083 C 26.919053 15.919083 27.717813 16.195577 28.301523 16.748565 C 28.900593 17.286192 29.200128 18.046551 29.200128 19.029640 C 29.200128 20.028091 28.900593 20.803810 28.301523 21.356798 C 27.717813 21.909786 26.919053 22.186280 25.905241 22.186280 L 18.969851 22.186280 L 18.969851 29.190795 C 18.969851 30.189245 18.693357 30.995686 18.140369 31.610117 C 17.587381 32.224548 16.819342 32.531764 15.836252 32.531764 C 14.853162 32.531764 14.085123 32.224548 13.532135 31.610117 C 12.994508 30.995686 12.725695 30.189245 12.725695 29.190795 L 12.725695 22.186280 L 5.7903036 22.186280 C 4.8072138 22.186280 4.0084534 21.886745 3.3940223 21.287675 C 2.7949518 20.673244 2.4954170 19.920565 2.4954170 19.029640 C 2.4954170 18.046551 2.7872715 17.286192 3.3709811 16.748565 C 3.9700516 16.195577 4.7764923 15.919083 5.7903036 15.919083 L 12.725695 15.919083 z "
                                                          Fill="White"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stretch="Fill"
                                                          StrokeThickness="1"
                                                          Visibility="{Binding IsExpanded,
                                                                               Converter={StaticResource ReverseBooleanVisibilityConverter}}">
                                                        <Path.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                    <Path x:Name="collapsedPath"
                                                          Width="Auto"
                                                          Height="Auto"
                                                          Margin="0,2.883,0,8.633"
                                                          Data="M25.905241,15.919083 C26.919053,15.919083 27.717813,16.195577 28.301523,16.748565 28.900593,17.286192 29.200128,18.046551 29.200128,19.02964 29.200128,20.028091 28.900593,20.80381 28.301523,21.356798 27.717813,21.909786 26.919053,22.18628 25.905241,22.18628 25.905241,22.18628 5.7903036,22.18628 5.7903036,22.18628 4.8072138,22.18628 4.0084534,21.886745 3.3940223,21.287675 2.7949518,20.673244 2.495417,19.920565 2.495417,19.02964 2.495417,18.046551 2.7872715,17.286192&#10;3.3709811,16.748565 3.9700516,16.195577 4.7764923,15.919083 5.7903036,15.919083"
                                                          Fill="White"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stretch="Fill"
                                                          StrokeThickness="1"
                                                          Visibility="{Binding IsExpanded,
                                                                               Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <Path.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform X="0" Y="2.8789999999999996" />
                                                            </TransformGroup>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="Online"
                                                    Width="15"
                                                    Height="15"
                                                    Margin="21,-6,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="Orange"
                                                    CornerRadius="2"
                                                    Visibility="{Binding IsOnline,
                                                                         Converter={x:Static wpfConverters:BooleanHiddenConverter.Instance}}">
                                                <Path x:Name="expandedPath1"
                                                      Width="Auto"
                                                      Height="Auto"
                                                      Margin="-3"
                                                      Data="M31.254362,35.970036C32.757583,35.969151 34.240959,36.574712 35.298164,37.770226 37.298198,40.040604 37.028194,43.531194 34.718154,45.561536 32.418113,47.611878 28.928051,47.451852 26.928016,45.171468 24.93798,42.92109 25.197986,39.450505 27.508026,37.400162 28.58617,36.443753 29.927991,35.970818 31.254362,35.970036z M31.039402,19.270732C33.952007,19.246856 36.870834,19.808196 39.674411,20.992596 43.425018,22.692633 46.785556,25.872702 50.076088,29.502782L42.754909,35.97292C34.193531,27.242732,28.872673,26.252711,19.571174,34.732896L19.181112,35.072903 12.820087,27.882746 13.200148,27.522738C18.254087,22.208249,24.631677,19.323264,31.039402,19.270732z M32.0298,0.0013140538C36.908603,0.041655358 41.698326,1.0129738 45.947811,3.2096021 54.037521,7.6296237 58.897277,11.98983 62.666999,16.169856L54.997436,22.970057C51.437545,19.040038 47.387806,15.319738 41.788089,12.469821 30.13861,6.9596865 14.959263,11.679764 6.9996739,20.490021L6.5996676,20.849892 0,13.379753 0.41001497,13.019882C6.511911,5.8752124,19.56175,-0.10177986,32.0298,0.0013140538z"
                                                      Fill="White"
                                                      RenderTransformOrigin="0.5,0.5"
                                                      Stretch="Fill"
                                                      StrokeThickness="1">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                                            <SkewTransform />
                                                            <RotateTransform />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Border>
                                            <Border x:Name="Shared"
                                                    Width="15"
                                                    Height="15"
                                                    Margin="-6,-6,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="Green"
                                                    CornerRadius="2"
                                                    Visibility="{Binding IsShared,
                                                                         Converter={x:Static wpfConverters:BooleanHiddenConverter.Instance}}">
                                                <Image Margin="1" Source="/csCommon;component/Resources/Icons/person.png" />
                                            </Border>
                                        </Grid>
                                    </custom:SurfaceToggleButton>


                                    <StackPanel Margin="40,0,4,4" Orientation="Vertical">
                                        <Grid Opacity="{Binding IsLoading, Converter={StaticResource ReverseBooleanActiveOpacityConverter}}">

                                            <custom:SurfaceToggleButton Name="LayerToggleButton"
                                                                        Margin="0,0,69,0"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Top"
                                                                        HorizontalContentAlignment="Left"
                                                                        Background="{x:Null}"
                                                                        Content="{Binding Title}"
                                                                        Foreground="Black"
                                                                        IsChecked="{Binding Visible}"
                                                                        Opacity="{Binding Visible,
                                                                                          Converter={StaticResource BooleanActiveOpacityConverter}}"
                                                                        Style="{StaticResource CleanToggleButton}"
                                                                        Visibility="{Binding Visible,
                                                                                             Converter={StaticResource BooleanActiveOpacityConverter}}" />
                                            <!--  ToolTip="{Binding Path}"  -->

                                            <TextBlock x:Name="isloadingtest"
                                                       Margin="0,4,0,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Top"
                                                       FontSize="21.333"
                                                       FontWeight="Normal"
                                                       Foreground="Red"
                                                       TextWrapping="Wrap" />

                                            <custom:SurfaceCheckBox x:Name="cbVisible"
                                                                    Margin="0"
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Top"
                                                                    cal:Message.Attach="[Event Checked]=[Action ActivateGisLayer($dataContext];[Event Unchecked]=[Action DeactivateGisLayer($dataContext)]"
                                                                    BorderBrush="Black"
                                                                    BorderThickness="2"
                                                                    Foreground="Black"
                                                                    IsChecked="{Binding Visible}"
                                                                    IsEnabled="{Binding IsLoading,
                                                                                        Converter={StaticResource ReverseBooleanActiveOpacityConverter}}"
                                                                    Padding="0"
                                                                    Style="{StaticResource LayerSurfaceCheckBoxStyle}"
                                                                    Visibility="Collapsed">
                                                <Grid Width="Auto"
                                                      Height="Auto"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Top" />
                                            </custom:SurfaceCheckBox>
                                            <StackPanel Margin="2"
                                                        HorizontalAlignment="Right"
                                                        Orientation="Horizontal">
                                                <custom:SurfaceToggleButton x:Name="stbExpand"
                                                                            Width="30"
                                                                            Height="30"
                                                                            MinWidth="30"
                                                                            MinHeight="30"
                                                                            Margin="0"
                                                                            HorizontalAlignment="Right"
                                                                            VerticalAlignment="Top"
                                                                            VerticalContentAlignment="Center"
                                                                            cal:Message.Attach="[Event MouseRightButtonDown]=[Action ToggleOpacity($dataContext)]"
                                                                            Background="{x:Null}"
                                                                            IsChecked="{Binding ShowOpacity,
                                                                                                Mode=TwoWay}"
                                                                            Style="{StaticResource CleanToggleButton}"
                                                                            Visibility="{Binding Visible,
                                                                                                 Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Grid Width="15" Height="15">
                                                        <Path Width="Auto"
                                                              Height="Auto"
                                                              Margin="0,0,0,0"
                                                              Data="M33.597977,10.759002C37.946865,10.759002 41.485962,14.285001 41.485962,18.649 41.485962,23 37.946865,26.535 33.597977,26.535 29.23909,26.535 25.709992,23 25.709992,18.649 25.709992,17.784 25.849955,16.953001 26.109888,16.174002 26.779719,16.881001 27.70948,17.327002 28.759213,17.327002 30.778696,17.327002 32.418278,15.691001 32.418278,13.668001 32.418278,12.663001 32.008381,11.748001 31.348551,11.087002 32.058369,10.876001 32.818176,10.759002 33.597977,10.759002z M33.606682,4.3679962C25.92741,4.3679957 19.698065,10.594956 19.698065,18.27293 19.698065,25.953894 25.92741,32.177862 33.606682,32.177862 41.295838,32.177862 47.515175,25.953894 47.515175,18.27293 47.515175,10.594956 41.295838,4.3679957 33.606682,4.3679962z M34.867642,1.546141E-09C36.890393,2.6508449E-05 58.705193,0.41938579 68.893006,18.299923 68.893006,18.299923 57.1442,36.139837 34.44656,34.768854 34.44656,34.768854 14.428583,36.59984 0,18.299923 0,18.299923 9.0791523,0.4590019 34.716553,0.0010111886 34.716553,0.0010114873 34.768162,-1.4442128E-06 34.867642,1.546141E-09z"
                                                              Fill="#FF898989"
                                                              RenderTransformOrigin="0.5,0.5"
                                                              Stretch="Uniform">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <RotateTransform Angle="0" />
                                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path x:Name="pLayerIsHidden1"
                                                              Width="10"
                                                              Height="15"
                                                              Margin="2.669,0,0,0"
                                                              HorizontalAlignment="Left"
                                                              VerticalAlignment="Top"
                                                              Data="M5,15 L15,0"
                                                              Stretch="Fill"
                                                              Stroke="Red"
                                                              StrokeThickness="2"
                                                              Visibility="{Binding Layer.Opacity,
                                                                                   Converter={StaticResource DoubleIsZeroVisibilityConverter}}" />
                                                    </Grid>
                                                </custom:SurfaceToggleButton>
                                                <custom:SurfaceButton x:Name="ConfigButton"
                                                                      Margin="0"
                                                                      cal:Message.Attach="[Event Click]=[Action Config($dataContext)]"
                                                                      Visibility="{Binding IsConfigAvailable,
                                                                                           Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Path Width="20"
                                                          Height="20"
                                                          Margin="0,0,0,0"
                                                          Data="F1M60.9043,41.6863C57.7236,39.6523 41.5319,29.1797 32.4893,23.332 33.1949,17.4545 30.6182,11.4167 25.3102,7.98975 20.0208,4.57422 13.4778,4.68884 8.41565,7.72009L22.7796,17.0052 22.3782,25.129 15.1432,28.8373 0.76886,19.5496C0.0845947,25.4115 2.66895,31.4285 7.95862,34.8463 13.2617,38.2709 19.8206,38.142 24.888,35.0925 33.9541,40.9545 50.2184,51.4688 53.303,53.4492 57.6168,56.2239 65.3626,44.5326 60.9043,41.6863z"
                                                          Fill="#FF000000"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stretch="Uniform" />
                                                </custom:SurfaceButton>
                                                <custom:SurfaceButton x:Name="sbMenu"
                                                                      Width="30"
                                                                      Height="30"
                                                                      MinWidth="30"
                                                                      MinHeight="30"
                                                                      Margin="0"
                                                                      HorizontalAlignment="Right"
                                                                      VerticalAlignment="Top"
                                                                      HorizontalContentAlignment="Center"
                                                                      VerticalContentAlignment="Center"
                                                                      cal:Message.Attach="[Event Click]=[Action LayerMenu($dataContext,$source)]"
                                                                      Background="{x:Null}"
                                                                      Foreground="Black"
                                                                      Padding="0"
                                                                      Visibility="{Binding HasMenu,
                                                                                           Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Path Width="15"
                                                          Height="15"
                                                          Margin="0"
                                                          Data="F1M60.9043,41.6863C57.7236,39.6523 41.5319,29.1797 32.4893,23.332 33.1949,17.4545 30.6182,11.4167 25.3102,7.98975 20.0208,4.57422 13.4778,4.68884 8.41565,7.72009L22.7796,17.0052 22.3782,25.129 15.1432,28.8373 0.76886,19.5496C0.0845947,25.4115 2.66895,31.4285 7.95862,34.8463 13.2617,38.2709 19.8206,38.142 24.888,35.0925 33.9541,40.9545 50.2184,51.4688 53.303,53.4492 57.6168,56.2239 65.3626,44.5326 60.9043,41.6863z"
                                                          Fill="#FF898989"
                                                          RenderTransformOrigin="0.5,0.5"
                                                          Stretch="Uniform" />
                                                </custom:SurfaceButton>
                                            </StackPanel>

                                            <!--<Border Background="Black" Width="10" Height="10" Visibility="{Binding Layer.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"></Border>-->
                                            <!--<Border Background="Red" Margin="-50,-5,0" Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="{Binding Layer.Service.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">

                                </Border>-->
                                        </Grid>

                                        <Grid Margin="0" Visibility="{Binding IsChecked, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=stbExpand}">
                                            <Grid Margin="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <custom:SurfaceButton x:Name="OpacityButton"
                                                                      MinWidth="0"
                                                                      MinHeight="0"
                                                                      Margin="0,7,0,0"
                                                                      HorizontalAlignment="Left"
                                                                      VerticalAlignment="Top"
                                                                      cal:Message.Attach="[Event Click]=[Action ToggleOpacity($dataContext)]"
                                                                      Background="{x:Null}"
                                                                      Padding="0">
                                                    <Grid Width="15" Height="15">
                                                        <Path Width="Auto"
                                                              Height="Auto"
                                                              Margin="0,0,0,0"
                                                              Data="M33.597977,10.759002C37.946865,10.759002 41.485962,14.285001 41.485962,18.649 41.485962,23 37.946865,26.535 33.597977,26.535 29.23909,26.535 25.709992,23 25.709992,18.649 25.709992,17.784 25.849955,16.953001 26.109888,16.174002 26.779719,16.881001 27.70948,17.327002 28.759213,17.327002 30.778696,17.327002 32.418278,15.691001 32.418278,13.668001 32.418278,12.663001 32.008381,11.748001 31.348551,11.087002 32.058369,10.876001 32.818176,10.759002 33.597977,10.759002z M33.606682,4.3679962C25.92741,4.3679957 19.698065,10.594956 19.698065,18.27293 19.698065,25.953894 25.92741,32.177862 33.606682,32.177862 41.295838,32.177862 47.515175,25.953894 47.515175,18.27293 47.515175,10.594956 41.295838,4.3679957 33.606682,4.3679962z M34.867642,1.546141E-09C36.890393,2.6508449E-05 58.705193,0.41938579 68.893006,18.299923 68.893006,18.299923 57.1442,36.139837 34.44656,34.768854 34.44656,34.768854 14.428583,36.59984 0,18.299923 0,18.299923 9.0791523,0.4590019 34.716553,0.0010111886 34.716553,0.0010114873 34.768162,-1.4442128E-06 34.867642,1.546141E-09z"
                                                              Fill="Black"
                                                              RenderTransformOrigin="0.5,0.5"
                                                              Stretch="Uniform">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <RotateTransform Angle="0" />
                                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path x:Name="pLayerIsHidden"
                                                              Width="10"
                                                              Height="15"
                                                              Margin="2.669,0,0,0"
                                                              HorizontalAlignment="Left"
                                                              VerticalAlignment="Top"
                                                              Data="M5,15 L15,0"
                                                              Stretch="Fill"
                                                              Stroke="Red"
                                                              StrokeThickness="2"
                                                              Visibility="{Binding Layer.Opacity,
                                                                                   Converter={StaticResource DoubleIsZeroVisibilityConverter}}" />
                                                    </Grid>
                                                </custom:SurfaceButton>
                                                <custom:SurfaceSlider Height="Auto"
                                                                      MinWidth="40"
                                                                      MinHeight="40"
                                                                      Margin="8,0,0,0"
                                                                      HorizontalAlignment="Stretch"
                                                                      VerticalAlignment="Top"
                                                                      Background="{x:Null}"
                                                                      Foreground="Red"
                                                                      LargeChange="0.25"
                                                                      Maximum="1"
                                                                      Style="{StaticResource BlackSliderStyle}"
                                                                      Value="{Binding Layer.Opacity,
                                                                                      Mode=TwoWay}" />
                                                <StackPanel Grid.Column="1"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Top"
                                                            Orientation="Horizontal">
                                                    <custom:SurfaceButton x:Name="ZoomButton"
                                                                          Margin="0"
                                                                          cal:Message.Attach="[Event Click]=[Action Zoom($dataContext)]">
                                                        <Path Width="20"
                                                              Height="20"
                                                              Margin="0,0,0,0"
                                                              Data="F1M1937.77,2316.51L1924.92,2300.18C1929.1,2294.35 1929.14,2286.25 1924.48,2280.33 1918.84,2273.15 1908.45,2271.92 1901.27,2277.56 1894.1,2283.2 1892.86,2293.59 1898.5,2300.77 1903.23,2306.77 1911.26,2308.6 1917.96,2305.74L1930.77,2322.02 1937.77,2316.51z M1903.81,2296.59C1900.48,2292.35 1901.21,2286.21 1905.45,2282.87 1909.69,2279.53 1915.84,2280.26 1919.17,2284.51 1922.51,2288.75 1921.78,2294.89 1917.54,2298.23 1913.29,2301.57 1907.15,2300.84 1903.81,2296.59z"
                                                              Fill="#FF000000"
                                                              RenderTransformOrigin="0.5,0.5"
                                                              Stretch="Uniform">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <RotateTransform Angle="0" />
                                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </custom:SurfaceButton>
                                                    <custom:SurfaceButton x:Name="NewConfigButton"
                                                                          Margin="0"
                                                                          cal:Message.Attach="[Event Click]=[Action Config($dataContext)]"
                                                                          Visibility="{Binding IsConfigAvailable,
                                                                                               Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <Path Width="20"
                                                              Height="20"
                                                              Margin="0,0,0,0"
                                                              Data="F1M60.9043,41.6863C57.7236,39.6523 41.5319,29.1797 32.4893,23.332 33.1949,17.4545 30.6182,11.4167 25.3102,7.98975 20.0208,4.57422 13.4778,4.68884 8.41565,7.72009L22.7796,17.0052 22.3782,25.129 15.1432,28.8373 0.76886,19.5496C0.0845947,25.4115 2.66895,31.4285 7.95862,34.8463 13.2617,38.2709 19.8206,38.142 24.888,35.0925 33.9541,40.9545 50.2184,51.4688 53.303,53.4492 57.6168,56.2239 65.3626,44.5326 60.9043,41.6863z"
                                                              Fill="#FF000000"
                                                              RenderTransformOrigin="0.5,0.5"
                                                              Stretch="Uniform" />
                                                    </custom:SurfaceButton>

                                                    <!--<custom:SurfaceToggleButton x:Name="TabButton"
														cal:Message.Attach="[Event Click]=[Action ToggleTab($dataContext)]"
														Margin="0,-4,0,0"
														IsChecked="{Binding Layer.IsTabActive}"
														Style="{DynamicResource SurfaceToggleButtonStyle1}">
														<custom:SurfaceToggleButton.Resources>
                                                    -->
                                                    <!--  ToggleButton  -->
                                                    <!--
															<Style x:Key="SurfaceToggleButtonStyle1"
																TargetType="{x:Type custom:SurfaceToggleButton}"
																BasedOn="{StaticResource ControlBaseStyle}">
																<Setter Property="HorizontalContentAlignment"
																	Value="Center" />
																<Setter Property="VerticalContentAlignment"
																	Value="Center" />
																<Setter Property="Padding"
																	Value="7" />
																<Setter Property="Background"
																	Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
																<Setter Property="Foreground"
																	Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundBrushKey}}" />
																<Setter Property="BorderThickness"
																	Value="0" />
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate
																			TargetType="{x:Type custom:SurfaceToggleButton}">
																			<ControlTemplate.Resources>
																				<Storyboard x:Key="Press">
																					<DoubleAnimationUsingKeyFrames
																						BeginTime="00:00:00"
																						Storyboard.TargetName="PressOverlay"
																						Storyboard.TargetProperty="(UIElement.Opacity)">
																						<SplineDoubleKeyFrame
																							KeyTime="00:00:00.1000000"
																							Value="1" />
																					</DoubleAnimationUsingKeyFrames>
																				</Storyboard>
																				<Storyboard x:Key="Release">
																					<DoubleAnimationUsingKeyFrames
																						BeginTime="00:00:00"
																						Storyboard.TargetName="PressOverlay"
																						Storyboard.TargetProperty="(UIElement.Opacity)">
																						<SplineDoubleKeyFrame
																							KeyTime="00:00:00.2500000"
																							Value="0" />
																					</DoubleAnimationUsingKeyFrames>
																				</Storyboard>
																			</ControlTemplate.Resources>
																			<Grid x:Name="Grid"
																				Background="{StaticResource ControlHitAreaBrush}"
																				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
																				Opacity="0.25">
																				<Border x:Name="ButtonBody"
																					BorderThickness="{TemplateBinding BorderThickness}"
																					Background="{TemplateBinding Background}"
																					BorderBrush="{TemplateBinding BorderBrush}"
																					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																				<Border x:Name="PressOverlay"
																					Background="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundPressedBrushKey}}"
																					Opacity="0"
																					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																				<ContentPresenter x:Name="Content"
																					Margin="{TemplateBinding Padding}"
																					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																			</Grid>

																			<ControlTemplate.Triggers>
																				<Trigger Property="IsChecked"
																					Value="True">
																					
																					<Setter Property="Foreground"
																						Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundBrushKey}}" />
																					<Setter Property="Opacity" TargetName="Grid"
																						Value="1" />
																				</Trigger>
																				<Trigger Property="IsPressed"
																					Value="True">
																					<Trigger.EnterActions>
																						<BeginStoryboard
																							Storyboard="{StaticResource Press}" />
																					</Trigger.EnterActions>
																					<Trigger.ExitActions>
																						<BeginStoryboard
																							Storyboard="{StaticResource Release}" />
																					</Trigger.ExitActions>
																					<Setter Property="Foreground"
																						Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundPressedBrushKey}}" />
																				</Trigger>
																				<MultiTrigger>
																					<MultiTrigger.Conditions>
																						<Condition Property="IsPressed"
																							Value="True" />
																						<Condition Property="IsChecked"
																							Value="True" />
																					</MultiTrigger.Conditions>
																				</MultiTrigger>
																				<MultiTrigger>
																					<MultiTrigger.Conditions>
																						<Condition Property="IsEnabled"
																							Value="False" />
																						<Condition Property="IsChecked"
																							Value="True" />
																					</MultiTrigger.Conditions>
																					<Setter Property="Background"
																						Value="{DynamicResource {x:Static custom:SurfaceColors.ToggleButtonBackgroundCheckedDisabledBrushKey}}"
																						TargetName="ButtonBody" />
																					<Setter Property="Opacity"
																						Value="0.6"
																						TargetName="Content" />
																				</MultiTrigger>
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
															</Style>

														</custom:SurfaceToggleButton.Resources>
														<custom:SurfaceToggleButton.Visibility>
															<Visibility>Collapsed</Visibility>
														</custom:SurfaceToggleButton.Visibility>
														<Path
															Data="M37.634445,2.663L49.985756,2.663C51.928524,2.6629998,53.504002,4.2371601,53.504002,6.1826047L53.504002,9.9770002 34.114998,9.9770002 34.114998,6.1826047C34.114998,4.2371601,35.690475,2.6629998,37.634445,2.663z M4.8268046,0L23.59108,0C26.256365,-6.333994E-08,28.415255,2.1627991,28.415255,4.8268222L28.415255,15.284035 57.100006,15.284035C57.988003,15.284035,58.708,16.005341,58.708,16.893349L58.708,43.695686C58.708,44.586391,57.988003,45.305,57.100006,45.305L1.6086317,45.305C0.72069931,45.305,0,44.586391,0,43.695686L0,9.9193973 0,4.8268222C0,2.1627991,2.1614389,-6.333994E-08,4.8268046,0z"
															Stretch="Uniform" Fill="#FF000000" Width="20" Height="20"
															Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
															<Path.RenderTransform>
																<TransformGroup>
																	<ScaleTransform />
																	<SkewTransform />
																	<RotateTransform Angle="90" />
																	<TranslateTransform />
																</TransformGroup>
															</Path.RenderTransform>
														</Path>
													</custom:SurfaceToggleButton>-->
                                                </StackPanel>
                                            </Grid>

                                        </Grid>
                                    </StackPanel>
                                </Grid>
                                <HierarchicalDataTemplate.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard Storyboard="{StaticResource Loading}" />
                                    </EventTrigger>
                                </HierarchicalDataTemplate.Triggers>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Grid>
            </SlideTab:SlideTabItem>
            <SlideTab:SlideTabItem x:Name="stiAdd"
                                   Height="50"
                                   MinWidth="75"
                                   Background="{x:Null}"
                                   FontSize="16"
                                   Foreground="Black"
                                   Padding="0"
                                   ShowHeaderText="Hidden"
                                   Style="{DynamicResource TabItemStyle2}">
                <SlideTab:SlideTabItem.Header>
                    <Grid Margin="0"
                          Background="Transparent"
                          RenderTransformOrigin="0.5,0.5">
                        <Path Width="30"
                              Height="30"
                              Margin="0,0,0,0"
                              Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"
                              Fill="#FF000000"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </SlideTab:SlideTabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <custom:SurfaceScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                        <StackPanel Orientation="Vertical">
                            <custom:SurfaceListBox x:Name="AvailableTemplates"
                                                   MinWidth="0"
                                                   MinHeight="100"
                                                   VerticalAlignment="Top"
                                                   HorizontalContentAlignment="Stretch"
                                                   Background="Red"
                                                   ItemTemplate="{DynamicResource AvailableTemplate}" />
                            <custom:SurfaceListBox x:Name="Content"
                                                   VerticalAlignment="Top"
                                                   HorizontalContentAlignment="Stretch"
                                                   Background="{x:Null}"
                                                   ItemContainerStyle="{DynamicResource SurfaceListBoxItemStyle1}"
                                                   ItemTemplate="{DynamicResource ContentItemTemplate}"
                                                   ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                                                   Style="{DynamicResource SurfaceListBoxStyle1}">
                                <custom:SurfaceListBox.Resources>
                                    <!--  Base Grid style for 55 dpi  -->
                                    <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="SnapsToDevicePixels" Value="False" />
                                        <Setter Property="FontFamily" Value="Segoe360" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Setter Property="FontSize" Value="17" />
                                        <Setter Property="Padding" Value="6,2,10,10" />
                                        <Setter Property="MinHeight" Value="38" />
                                        <Setter Property="MinWidth" Value="38" />
                                        <Setter Property="Margin" Value="1" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Top" />
                                        <Setter Property="BorderThickness" Value="2" />
                                    </Style>

                                    <!--  public section  -->
                                    <SolidColorBrush x:Key="ControlHitAreaBrush" Color="#00FFFFFF" />

                                    <!--  Minimum HitArea Base Style for 55 dpi  -->
                                    <Style x:Key="SurfaceHitAreaBaseStyle" TargetType="{x:Type Control}">
                                        <Setter Property="SnapsToDevicePixels" Value="False" />
                                        <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                        <Setter Property="MinWidth" Value="40" />
                                        <Setter Property="MinHeight" Value="40" />
                                    </Style>

                                    <Style x:Key="SurfaceVertScrollBarRepeatButton" TargetType="{x:Type custom:SurfaceRepeatButton}">
                                        <Setter Property="Interval" Value="150" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                        <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Setter Property="Focusable" Value="false" />
                                        <Setter Property="IsTabStop" Value="false" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceRepeatButton}">
                                                    <Grid Width="40" Background="{TemplateBinding Background}">
                                                        <Rectangle x:Name="Line"
                                                                   MinWidth="2"
                                                                   HorizontalAlignment="Center"
                                                                   Fill="{DynamicResource {x:Static custom:SurfaceColors.TrackBackgroundBrushKey}}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="Line" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.ThumbDisabledBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <!--  ScrollBar Vert Thumb  -->
                                    <Style x:Key="SurfaceScrollBarThumbStyle"
                                           BasedOn="{StaticResource SurfaceHitAreaBaseStyle}"
                                           TargetType="{x:Type custom:SurfaceThumb}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceThumb}">
                                                    <ControlTemplate.Resources>
                                                        <Storyboard x:Key="Touch">
                                                            <DoubleAnimation Duration="0:0:0.05"
                                                                             Storyboard.TargetName="Thumb"
                                                                             Storyboard.TargetProperty="Width"
                                                                             To="16" />
                                                            <ThicknessAnimation Duration="0:0:0.05"
                                                                                Storyboard.TargetName="Thumb"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="-1,0,-1,0" />
                                                        </Storyboard>
                                                        <Storyboard x:Key="Release">
                                                            <DoubleAnimation Duration="0:0:0.1"
                                                                             Storyboard.TargetName="Thumb"
                                                                             Storyboard.TargetProperty="Width"
                                                                             To="14" />
                                                            <ThicknessAnimation Duration="0:0:0.1"
                                                                                Storyboard.TargetName="Thumb"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="0,0,0,0" />
                                                        </Storyboard>
                                                    </ControlTemplate.Resources>
                                                    <Grid x:Name="Grid"
                                                          Background="{TemplateBinding Background}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <Rectangle x:Name="Thumb"
                                                                   Width="14"
                                                                   Height="Auto"
                                                                   HorizontalAlignment="Stretch"
                                                                   VerticalAlignment="Stretch"
                                                                   Fill="{DynamicResource {x:Static custom:SurfaceColors.ThumbEnabledBrushKey}}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="custom:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Touch}" />
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="Thumb" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.ThumbDisabledBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <!--  ScrollBar RepeatButton  -->
                                    <Style x:Key="SurfaceHorzScrollBarRepeatButton" TargetType="{x:Type custom:SurfaceRepeatButton}">
                                        <Setter Property="Interval" Value="150" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                        <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Setter Property="Focusable" Value="false" />
                                        <Setter Property="IsTabStop" Value="false" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceRepeatButton}">
                                                    <Grid Height="40" Background="{TemplateBinding Background}">
                                                        <Rectangle x:Name="Line"
                                                                   MinHeight="2"
                                                                   VerticalAlignment="Center"
                                                                   Fill="{DynamicResource {x:Static custom:SurfaceColors.TrackBackgroundBrushKey}}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="Line" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.ThumbDisabledBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style x:Key="SurfaceScrollBarHorizThumbStyle"
                                           BasedOn="{StaticResource SurfaceHitAreaBaseStyle}"
                                           TargetType="{x:Type custom:SurfaceThumb}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceThumb}">
                                                    <ControlTemplate.Resources>
                                                        <!--  Vertical orientation  -->
                                                        <Storyboard x:Key="Touch">
                                                            <DoubleAnimation Duration="0:0:0.05"
                                                                             Storyboard.TargetName="Thumb"
                                                                             Storyboard.TargetProperty="Height"
                                                                             To="16" />
                                                            <ThicknessAnimation Duration="0:0:0.05"
                                                                                Storyboard.TargetName="Thumb"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="0,-1,0,-1" />
                                                        </Storyboard>
                                                        <Storyboard x:Key="Release">
                                                            <DoubleAnimation Duration="0:0:0.1"
                                                                             Storyboard.TargetName="Thumb"
                                                                             Storyboard.TargetProperty="Height"
                                                                             To="14" />
                                                            <ThicknessAnimation Duration="0:0:0.1"
                                                                                Storyboard.TargetName="Thumb"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="0,0,0,0" />
                                                        </Storyboard>
                                                    </ControlTemplate.Resources>
                                                    <Grid x:Name="Grid"
                                                          Background="{TemplateBinding Background}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <Rectangle x:Name="Thumb"
                                                                   Width="Auto"
                                                                   Height="14"
                                                                   HorizontalAlignment="Stretch"
                                                                   VerticalAlignment="Stretch"
                                                                   Fill="{DynamicResource {x:Static custom:SurfaceColors.ThumbEnabledBrushKey}}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="custom:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Touch}" />
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="Thumb" Property="Fill" Value="{DynamicResource {x:Static custom:SurfaceColors.ThumbDisabledBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <!--  ScrollBar  -->
                                    <Style x:Key="SurfaceScrollBarStyle" TargetType="{x:Type custom:SurfaceScrollBar}">
                                        <Style.Resources>
                                            <System:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">38</System:Double>
                                            <System:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">38</System:Double>
                                        </Style.Resources>
                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                        <Setter Property="Width" Value="38" />
                                        <Setter Property="Height" Value="Auto" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <!--  vertical scroll bar  -->
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceScrollBar}">
                                                    <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                                        <Border x:Name="Track"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Stretch">
                                                            <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                                <Track.IncreaseRepeatButton>
                                                                    <custom:SurfaceRepeatButton x:Name="IncreaseRepeat"
                                                                                                HorizontalAlignment="Center"
                                                                                                Background="{TemplateBinding Background}"
                                                                                                Command="ScrollBar.PageDownCommand"
                                                                                                Style="{StaticResource SurfaceVertScrollBarRepeatButton}" />
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.DecreaseRepeatButton>
                                                                    <custom:SurfaceRepeatButton x:Name="DecreaseRepeat"
                                                                                                HorizontalAlignment="Center"
                                                                                                Background="{TemplateBinding Background}"
                                                                                                Command="ScrollBar.PageUpCommand"
                                                                                                Style="{StaticResource SurfaceVertScrollBarRepeatButton}" />
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <custom:SurfaceThumb x:Name="Thumb"
                                                                                         HorizontalAlignment="Center"
                                                                                         Background="{TemplateBinding Background}"
                                                                                         Style="{StaticResource SurfaceScrollBarThumbStyle}" />
                                                                </Track.Thumb>
                                                            </Track>
                                                        </Border>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <!--  Animates Scrollbar from small to large state  -->
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="PART_Track" Property="IsEnabled" Value="False" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.BasedOn>
                                            <StaticResource ResourceKey="SurfaceHitAreaBaseStyle" />
                                        </Style.BasedOn>

                                        <Style.Triggers>
                                            <!--  Horizontal orientation  -->
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Width" Value="Auto" />
                                                <Setter Property="Height" Value="38" />
                                                <!--  change the whole template  -->
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type custom:SurfaceScrollBar}">
                                                            <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                                                <Border x:Name="Track"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Stretch">
                                                                    <Track x:Name="PART_Track">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <custom:SurfaceRepeatButton x:Name="DecreaseRepeat"
                                                                                                        VerticalAlignment="Center"
                                                                                                        Background="{TemplateBinding Background}"
                                                                                                        Command="ScrollBar.PageLeftCommand"
                                                                                                        Style="{StaticResource SurfaceHorzScrollBarRepeatButton}" />
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <custom:SurfaceRepeatButton x:Name="IncreaseRepeat"
                                                                                                        VerticalAlignment="Center"
                                                                                                        Background="{TemplateBinding Background}"
                                                                                                        Command="ScrollBar.PageRightCommand"
                                                                                                        Style="{StaticResource SurfaceHorzScrollBarRepeatButton}" />
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <custom:SurfaceThumb x:Name="Thumb"
                                                                                                 VerticalAlignment="Center"
                                                                                                 Background="{TemplateBinding Background}"
                                                                                                 Style="{StaticResource SurfaceScrollBarHorizThumbStyle}" />
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <!--  Animates Scrollbar from small to large state  -->
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter TargetName="IncreaseRepeat" Property="Opacity" Value="0.33" />
                                                                    <Setter TargetName="DecreaseRepeat" Property="Opacity" Value="0.33" />
                                                                    <Setter TargetName="PART_Track" Property="IsEnabled" Value="False" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <!--  ScrollViewerBase  -->
                                    <Style x:Key="SurfaceScrollViewerStyle" TargetType="{x:Type custom:SurfaceScrollViewer}">
                                        <Setter Property="Elasticity" Value="0.4,0.4" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceScrollViewer}">
                                                    <Grid HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          Background="{TemplateBinding Background}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Border x:Name="PART_ElasticBorder" Background="{TemplateBinding Background}">
                                                            <ScrollContentPresenter Grid.Row="0"
                                                                                    Grid.RowSpan="1"
                                                                                    Grid.Column="0"
                                                                                    Grid.ColumnSpan="1"
                                                                                    Margin="-1,-1,-1,-1"
                                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                                    CanHorizontallyScroll="False"
                                                                                    CanVerticallyScroll="False"
                                                                                    Content="{TemplateBinding Content}"
                                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                                        </Border>

                                                        <custom:SurfaceScrollBar x:Name="PART_VerticalScrollBar"
                                                                                 Grid.Row="0"
                                                                                 Grid.Column="1"
                                                                                 Width="Auto"
                                                                                 HorizontalAlignment="Stretch"
                                                                                 HorizontalContentAlignment="Stretch"
                                                                                 VerticalContentAlignment="Stretch"
                                                                                 AutomationProperties.AutomationId="VerticalScrollBar"
                                                                                 Foreground="{x:Null}"
                                                                                 IsEnabled="True"
                                                                                 LargeChange="1"
                                                                                 Maximum="{TemplateBinding ScrollableHeight}"
                                                                                 Minimum="0"
                                                                                 Orientation="Vertical"
                                                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                                 Style="{StaticResource SurfaceScrollBarStyle}"
                                                                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                                                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                                                 Value="{Binding VerticalOffset,
                                                                                                 Mode=OneWay,
                                                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <custom:SurfaceScrollBar x:Name="PART_HorizontalScrollBar"
                                                                                 Grid.Row="1"
                                                                                 Grid.Column="0"
                                                                                 Height="Auto"
                                                                                 HorizontalAlignment="Stretch"
                                                                                 HorizontalContentAlignment="Stretch"
                                                                                 VerticalContentAlignment="Stretch"
                                                                                 AutomationProperties.AutomationId="HorizontalScrollBar"
                                                                                 Foreground="{x:Null}"
                                                                                 LargeChange="1"
                                                                                 Maximum="{TemplateBinding ScrollableWidth}"
                                                                                 Minimum="0"
                                                                                 Orientation="Horizontal"
                                                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                                 Style="{StaticResource SurfaceScrollBarStyle}"
                                                                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                                                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                 Value="{Binding HorizontalOffset,
                                                                                                 Mode=OneWay,
                                                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="PART_HorizontalScrollBar" Property="IsEnabled" Value="False" />
                                                            <Setter TargetName="PART_VerticalScrollBar" Property="IsEnabled" Value="False" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <!--  Listbox ScrollView  -->
                                    <Style x:Key="SurfaceListBoxScrollViewerStyle"
                                           BasedOn="{StaticResource SurfaceScrollViewerStyle}"
                                           TargetType="{x:Type custom:SurfaceScrollViewer}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceScrollViewer}">
                                                    <Grid Margin="{TemplateBinding BorderThickness}"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          Background="{DynamicResource {x:Static custom:SurfaceColors.ListBoxBackgroundBrushKey}}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Border x:Name="PART_ElasticBorder"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="Transparent"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <ScrollContentPresenter Grid.RowSpan="1"
                                                                                    Grid.ColumnSpan="1"
                                                                                    Margin="{TemplateBinding Padding}"
                                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                                    CanHorizontallyScroll="False"
                                                                                    CanVerticallyScroll="False"
                                                                                    Content="{TemplateBinding Content}"
                                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <custom:SurfaceScrollBar x:Name="PART_VerticalScrollBar"
                                                                                 Grid.Row="0"
                                                                                 Grid.Column="1"
                                                                                 Width="Auto"
                                                                                 AutomationProperties.AutomationId="VerticalScrollBar"
                                                                                 Background="{TemplateBinding Background}"
                                                                                 ClipToBounds="True"
                                                                                 LargeChange="1"
                                                                                 Maximum="{TemplateBinding ScrollableHeight}"
                                                                                 Minimum="0"
                                                                                 Orientation="Vertical"
                                                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                 Style="{StaticResource SurfaceScrollBarStyle}"
                                                                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                                                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                                                 Value="{Binding VerticalOffset,
                                                                                                 Mode=OneWay,
                                                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <custom:SurfaceScrollBar x:Name="PART_HorizontalScrollBar"
                                                                                 Grid.Row="1"
                                                                                 Height="Auto"
                                                                                 AutomationProperties.AutomationId="HorizontalScrollBar"
                                                                                 Background="{TemplateBinding Background}"
                                                                                 ClipToBounds="True"
                                                                                 LargeChange="1"
                                                                                 Maximum="{TemplateBinding ScrollableWidth}"
                                                                                 Minimum="0"
                                                                                 Orientation="Horizontal"
                                                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                 Style="{StaticResource SurfaceScrollBarStyle}"
                                                                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                                                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                 Value="{Binding HorizontalOffset,
                                                                                                 Mode=OneWay,
                                                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Border x:Name="Container"
                                                                Grid.Row="1"
                                                                Grid.Column="1"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="Transparent"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="PART_HorizontalScrollBar" Property="IsEnabled" Value="False" />
                                                            <Setter TargetName="PART_VerticalScrollBar" Property="IsEnabled" Value="False" />
                                                            <Setter TargetName="PART_ElasticBorder" Property="BorderBrush" Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderDisabledBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <!--  ListBox  -->
                                    <Style x:Key="SurfaceListBoxStyle1"
                                           BasedOn="{StaticResource ControlBaseStyle}"
                                           TargetType="{x:Type custom:SurfaceListBox}">
                                        <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        <Setter Property="custom:SurfaceScrollViewer.Elasticity" Value="0,0.4" />
                                        <Setter Property="MinHeight" Value="80" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxBorderBrushKey}}" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceListBox}">
                                                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <custom:SurfaceScrollViewer x:Name="scrollViewer"
                                                                                    Width="Auto"
                                                                                    Height="Auto"
                                                                                    MinWidth="{TemplateBinding MinWidth}"
                                                                                    MinHeight="{TemplateBinding MinHeight}"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    Elasticity="{TemplateBinding custom:SurfaceScrollViewer.Elasticity}"
                                                                                    Focusable="False"
                                                                                    Foreground="{TemplateBinding Foreground}"
                                                                                    HorizontalScrollBarVisibility="Disabled"
                                                                                    Style="{StaticResource SurfaceListBoxScrollViewerStyle}"
                                                                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                            <ItemsPresenter MinWidth="{TemplateBinding MinWidth}"
                                                                            MinHeight="{TemplateBinding MinHeight}"
                                                                            ClipToBounds="False" />
                                                        </custom:SurfaceScrollViewer>
                                                        <Border x:Name="Border"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsGrouping" Value="True">
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SurfaceListBoxItemStyle1"
                                           BasedOn="{StaticResource ControlBaseStyle}"
                                           TargetType="{x:Type custom:SurfaceListBoxItem}">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemBackgroundBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemForegroundBrushKey}}" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <!--<Setter Property="HorizontalContentAlignment"
										Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />-->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type custom:SurfaceListBoxItem}">
                                                    <ControlTemplate.Resources>
                                                        <!--<Storyboard x:Key="Press">
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
															Storyboard.TargetName="PressOverlay"
															Storyboard.TargetProperty="(UIElement.Opacity)">
															<SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
																Value="1" />
														</DoubleAnimationUsingKeyFrames>
													</Storyboard>
													<Storyboard x:Key="Release">
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
															Storyboard.TargetName="PressOverlay"
															Storyboard.TargetProperty="(UIElement.Opacity)">
															<SplineDoubleKeyFrame KeyTime="00:00:00.2500000"
																Value="0" />
														</DoubleAnimationUsingKeyFrames>
													</Storyboard>-->
                                                    </ControlTemplate.Resources>
                                                    <Grid x:Name="Grid"
                                                          Background="{StaticResource ControlHitAreaBrush}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <Border x:Name="ButtonBody"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <Border x:Name="PressOverlay"
                                                                Background="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemBackgroundPressedBrushKey}}"
                                                                Opacity="0"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <ContentPresenter x:Name="Content"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemSelectionBackgroundBrushKey}}" />
                                                            <Setter TargetName="PressOverlay" Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemSelectionBackgroundPressedBrushKey}}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <!--<Trigger.EnterActions>
															<BeginStoryboard Storyboard="{StaticResource Press}" />
														</Trigger.EnterActions>
														<Trigger.ExitActions>
															<BeginStoryboard Storyboard="{StaticResource Release}" />
														</Trigger.ExitActions>-->
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemForegroundPressedBrushKey}}" />
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsEnabled" Value="False" />
                                                                <Condition Property="IsSelected" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemSelectionBackgroundDisabledBrushKey}}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemForegroundDisabledBrushKey}}" />
                                                            <Setter TargetName="Content" Property="Opacity" Value="0.6" />
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsEnabled" Value="False" />
                                                                <Condition Property="IsSelected" Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemBackgroundDisabledBrushKey}}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static custom:SurfaceColors.ListBoxItemForegroundDisabledBrushKey}}" />
                                                            <Setter TargetName="Content" Property="Opacity" Value="0.33" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                </custom:SurfaceListBox.Resources>
                            </custom:SurfaceListBox>
                        </StackPanel>
                    </custom:SurfaceScrollViewer>

                </Grid>
            </SlideTab:SlideTabItem>
        </SlideTab:SlideTabControl>
    </Grid>

</UserControl>
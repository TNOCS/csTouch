<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Custom="http://schemas.microsoft.com/surface/2008" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:Microsoft_Surface_Presentation_Generic="clr-namespace:Microsoft.Surface.Presentation.Generic;assembly=Microsoft.Surface.Presentation.Generic" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	x:Class="csCommon.ucLayerItem"
	x:Name="UserControl"
	d:DesignWidth="200.36" mc:Ignorable="d">

	<Grid x:Name="LayoutRoot">
		<i:Interaction.Triggers>
			<i:EventTrigger EventName="Loaded">
				<ei:GoToStateAction StateName="Normal"/>
			</i:EventTrigger>
		</i:Interaction.Triggers>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.2"/>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="Normal"/>
				<VisualState x:Name="Extended">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.MaxHeight)" Storyboard.TargetName="grid">
							<EasingDoubleKeyFrame KeyTime="0" Value="10000"/>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="surfaceToggleButton">
							<EasingDoubleKeyFrame KeyTime="0" Value="180"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<StackPanel d:LayoutOverrides="Width, Height">
			<Grid>
				<Custom:SurfaceCheckBox Content="{Binding Name}" Foreground="Black" FontSize="16" IsChecked="{Binding Active}" IsEnabled="{Binding IsLoaded}" d:LayoutOverrides="Height" Background="#FF0041C0"/>
				<Custom:SurfaceToggleButton x:Name="surfaceToggleButton" Content="SurfaceToggleButton" Margin="0" HorizontalAlignment="Right" Width="30" Height="30" Style="{DynamicResource SurfaceToggleButtonStyle1}" RenderTransformOrigin="0.5,0.5">
					<Custom:SurfaceToggleButton.Resources>
						<Style x:Key="SurfaceToggleButtonStyle1" TargetType="{x:Type Custom:SurfaceToggleButton}">
							<Setter Property="Foreground" Value="Black"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
										<ControlTemplate.Resources>
											<Storyboard x:Key="Press">
												<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
													<SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="-3"/>
												</ThicknessAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
													<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
											<Storyboard x:Key="Unchecked">
												<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
													<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
											<Storyboard x:Key="Release">
												<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
													<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
													<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
												<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
													<SplineThicknessKeyFrame KeyTime="0" Value="-3"/>
													<SplineThicknessKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="-1"/>
												</ThicknessAnimationUsingKeyFrames>
											</Storyboard>
											<Storyboard x:Key="Checked">
												<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
													<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</ControlTemplate.Resources>
										<Grid x:Name="Grid" MinWidth="30" MinHeight="30">
											<Rectangle x:Name="Base" Fill="{TemplateBinding Background}" Margin="2" RadiusY="15" RadiusX="15" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stroke="{x:Null}" StrokeThickness="1"/>
											<Rectangle x:Name="Button" Margin="2" RadiusY="15" RadiusX="15" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="1">
												<Rectangle.Fill>
													<RadialGradientBrush GradientOrigin="0.496,-0.06">
														<RadialGradientBrush.RelativeTransform>
															<TransformGroup>
																<ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="1.192" ScaleX="1.954"/>
																<SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0.5"/>
																<RotateTransform Angle="180" CenterY="0.5" CenterX="0.5"/>
																<TranslateTransform X="-0.002" Y="-0.024"/>
															</TransformGroup>
														</RadialGradientBrush.RelativeTransform>
														<GradientStop Color="#33FFFFFF" Offset="0"/>
														<GradientStop Color="#19FFFFFF" Offset="0.75"/>
													</RadialGradientBrush>
												</Rectangle.Fill>
												<Rectangle.Stroke>
													<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
														<GradientStop Color="#66000000" Offset="0"/>
														<GradientStop Color="#33000000" Offset="1"/>
													</LinearGradientBrush>
												</Rectangle.Stroke>
											</Rectangle>
											<Rectangle x:Name="RenderOverlay" Margin="3" RadiusY="14" RadiusX="14" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="1">
												<Rectangle.Fill>
													<RadialGradientBrush GradientOrigin="0.5,0.072">
														<RadialGradientBrush.RelativeTransform>
															<TransformGroup>
																<ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="-1.484" ScaleX="-2.281"/>
																<SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0.5"/>
																<RotateTransform Angle="359.337" CenterY="0.5" CenterX="0.5"/>
																<TranslateTransform X="-0.001" Y="-0.126"/>
															</TransformGroup>
														</RadialGradientBrush.RelativeTransform>
														<GradientStop Color="Transparent" Offset="0.205"/>
														<GradientStop Color="#26000000" Offset="0.652"/>
													</RadialGradientBrush>
												</Rectangle.Fill>
												<Rectangle.Stroke>
													<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
														<GradientStop Color="#7FFFFFFF" Offset="0"/>
														<GradientStop Color="#0CFFFFFF" Offset="1"/>
													</LinearGradientBrush>
												</Rectangle.Stroke>
											</Rectangle>
											<Microsoft_Surface_Presentation_Generic:SurfaceShadowChrome x:Name="Glow" Color="White" CornerRadius="15" Margin="-1" Opacity="0"/>
											<Microsoft_Surface_Presentation_Generic:SurfaceShadowChrome x:Name="CheckMark" Color="White" CornerRadius="15" Margin="-1" Opacity="0"/>
											<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
												<ContentPresenter.RenderTransform>
													<TranslateTransform X="0" Y="-1"/>
												</ContentPresenter.RenderTransform>
											</ContentPresenter>
											<ed:BlockArrow Fill="Blue" Height="15" Margin="0" Orientation="Down" Width="15"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsThreeState" Value="True"/>
											<Trigger Property="IsChecked" Value="False">
												<Trigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
																<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.EnterActions>
												<Trigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
																<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.ExitActions>
											</Trigger>
											<Trigger Property="IsChecked" Value="True">
												<Trigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
																<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.EnterActions>
												<Trigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
																<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.ExitActions>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Trigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
																<SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="-3"/>
															</ThicknessAnimationUsingKeyFrames>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
																<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
															</DoubleAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.EnterActions>
												<Trigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
																<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
																<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
															</DoubleAnimationUsingKeyFrames>
															<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
																<SplineThicknessKeyFrame KeyTime="0" Value="-3"/>
																<SplineThicknessKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="-1"/>
															</ThicknessAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.ExitActions>
											</Trigger>
											<Trigger Property="IsEnabled" Value="True"/>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="#A5333333"/>
												<Setter Property="Fill" TargetName="Button" Value="#00000000"/>
												<Setter Property="Stroke" TargetName="Button" Value="#33000000"/>
												<Setter Property="Fill" TargetName="RenderOverlay" Value="#00000000"/>
												<Setter Property="Opacity" TargetName="RenderOverlay" Value="0.5"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.BasedOn>
								<Style TargetType="{x:Type ButtonBase}">
									<Setter Property="SnapsToDevicePixels" Value="True"/>
									<Setter Property="FocusVisualStyle">
										<Setter.Value>
											<Style>
												<Setter Property="Control.Template">
													<Setter.Value>
														<ControlTemplate/>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter Property="FontFamily" Value="Segoe UI"/>
									<Setter Property="FontSize" Value="10"/>
									<Setter Property="Foreground" Value="Black"/>
									<Setter Property="Background" Value="#33A4B4BD"/>
									<Setter Property="BorderBrush">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
												<GradientStop Color="#7FFFFFFF" Offset="0"/>
												<GradientStop Color="#0CFFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderThickness" Value="1"/>
									<Setter Property="HorizontalContentAlignment" Value="Center"/>
									<Setter Property="VerticalContentAlignment" Value="Center"/>
									<Setter Property="Padding" Value="15,6"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="MinWidth" Value="30"/>
									<Setter Property="MinHeight" Value="30"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ButtonBase}">
												<ControlTemplate.Resources>
													<Storyboard x:Key="Press">
														<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
															<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
														</DoubleAnimationUsingKeyFrames>
														<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
															<SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="-3"/>
														</ThicknessAnimationUsingKeyFrames>
													</Storyboard>
													<Storyboard x:Key="Release">
														<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
															<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
															<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
														<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
															<SplineThicknessKeyFrame KeyTime="0" Value="-3"/>
															<SplineThicknessKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="1"/>
														</ThicknessAnimationUsingKeyFrames>
													</Storyboard>
												</ControlTemplate.Resources>
												<Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
													<Border x:Name="Shadow" BorderBrush="#33000000" BorderThickness="0,0,0,1" CornerRadius="6" Margin="1,1,1,0" Padding="1"/>
													<Rectangle x:Name="Base" Fill="{TemplateBinding Background}" Margin="1" RadiusY="5" RadiusX="5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="1">
														<Rectangle.Stroke>
															<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																<GradientStop Color="#66000000" Offset="0"/>
																<GradientStop Color="#33000000" Offset="1"/>
															</LinearGradientBrush>
														</Rectangle.Stroke>
													</Rectangle>
													<Rectangle x:Name="RenderOverlay" Margin="2" Opacity="1" RadiusY="4" RadiusX="4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1">
														<Rectangle.Fill>
															<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																<GradientStop Color="#26000000" Offset="0"/>
																<GradientStop Color="#4CFFFFFF" Offset="1"/>
															</LinearGradientBrush>
														</Rectangle.Fill>
													</Rectangle>
													<!--<Microsoft_Surface_Presentation_Generic:SurfaceShadowChrome x:Name="Glow" Color="White" CornerRadius="4" Margin="1" Opacity="0"/>-->
													<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
														<ContentPresenter.RenderTransform>
															<TranslateTransform X="0" Y="-1"/>
														</ContentPresenter.RenderTransform>
													</ContentPresenter>
												</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsPressed" Value="True">
														<Trigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
																		<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
																	</DoubleAnimationUsingKeyFrames>
																	<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
																		<SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="-3"/>
																	</ThicknessAnimationUsingKeyFrames>
																</Storyboard>
															</BeginStoryboard>
														</Trigger.EnterActions>
														<Trigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
																		<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
																		<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
																	</DoubleAnimationUsingKeyFrames>
																	<ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
																		<SplineThicknessKeyFrame KeyTime="0" Value="-3"/>
																		<SplineThicknessKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="1"/>
																	</ThicknessAnimationUsingKeyFrames>
																</Storyboard>
															</BeginStoryboard>
														</Trigger.ExitActions>
													</Trigger>
													<Trigger Property="IsEnabled" Value="True"/>
													<Trigger Property="IsEnabled" Value="False">
														<Setter Property="Fill" TargetName="RenderOverlay" Value="#0CFFFFFF"/>
														<Setter Property="Stroke" TargetName="RenderOverlay" Value="#33FFFFFF"/>
														<Setter Property="Stroke" TargetName="Base" Value="#33000000"/>
														<Setter Property="BorderBrush" TargetName="Shadow" Value="#00000000"/>
														<Setter Property="Foreground" Value="#A5333333"/>
														<Setter Property="Background" Value="Transparent"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Style.BasedOn>
						</Style>
					</Custom:SurfaceToggleButton.Resources>
					<Custom:SurfaceToggleButton.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform/>
						</TransformGroup>
					</Custom:SurfaceToggleButton.RenderTransform>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Unchecked">
							<ei:GoToStateAction StateName="Normal"/>
						</i:EventTrigger>
						<i:EventTrigger EventName="Checked">
							<ei:GoToStateAction StateName="Extended"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Custom:SurfaceToggleButton>
			</Grid>
			<Grid x:Name="grid" Visibility="Collapsed" MaxHeight="0">
				<Custom:SurfaceSlider Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:LayoutOverrides="Height"/>
			</Grid>
		</StackPanel>
	</Grid>
</UserControl>
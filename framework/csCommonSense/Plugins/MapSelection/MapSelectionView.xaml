<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation" xmlns:local="clr-namespace:csCommon" xmlns:Presentation="clr-namespace:Microsoft.Surface.Presentation;assembly=Microsoft.Surface.Presentation" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:csShared="clr-namespace:csShared" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:ThirdParty="clr-namespace:csShared.ThirdParty"
             xmlns:wpfSpark="clr-namespace:WPFSpark"
             xmlns:mapSelection="clr-namespace:csCommon.MapPlugins.MapSelection"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             mc:Ignorable="d" x:Class="csCommon.MapPlugins.MapSelection.MapSelectionView">
	<UserControl.Resources>
        <mapSelection:TileLayerExists x:Key="TileLayerExists" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <wpfConverters:ReverseBooleanVisibilityConverter x:Key="ReverseBooleanVisibilityConverter" />
		<DataTemplate x:Key="DataTemplate1">
			<Grid  >
                <s:SurfaceButton Height="110" Margin="0" Width="110" Background="Transparent" cal:Message.Attach="[Event Click]=[Action SelectMapType($dataContext)]" Padding="0" BorderThickness="0">

                    <Border Height="Auto" Width="Auto" BorderThickness="1" Background="{x:Null}" Margin="0" BorderBrush="Black">

					<Image 
						ThirdParty:Loader.DisplayOption="FullResolution"
						ThirdParty:Loader.CacheHeight="60"
						ThirdParty:Loader.Source="{Binding PreviewImage}" 
						ThirdParty:Loader.SourceType="Both"
						ThirdParty:Loader.DisplayWaitingAnimationDuringLoading="True"
						Stretch="UniformToFill"/>

				</Border>
                </s:SurfaceButton>
                <TextBlock Foreground="White" Text="{Binding Title}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" FontSize="10.667" Width="Auto" Margin="0" TextWrapping="Wrap" Background="#96000000" Padding="0,4" TextAlignment="Center" />
				<s:SurfaceButton cal:Message.Attach="[Event Click]=[Action Add($dataContext)]" HorizontalAlignment="Right" Margin="0" Background="Black" VerticalAlignment="Top" MinWidth="30" MinHeight="30" Width="35" Height="35" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0">
					<Path Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" Stretch="Uniform" Fill="#FFFFFFFF" Width="15" Height="15" Margin="0,0,0,0" />
				</s:SurfaceButton>
                <s:SurfaceButton Visibility="{Binding Activated, Converter={StaticResource BooleanToVisibilityConverter}}"  cal:Message.Attach="[Event Click]=[Action Remove($dataContext)]" HorizontalAlignment="Right" Margin="0" Background="Black" VerticalAlignment="Top" MinWidth="30" MinHeight="30" Width="35" Height="35" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0">
                    <Path Data="M32.5,19.833999 L52.334,19.833999 52.334,32.500999 32.5,32.500999 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999 z" Stretch="Uniform" Fill="#FFFFFFFF" Width="15" Height="3.631" Margin="0,0,0,0" />
                </s:SurfaceButton>
            </Grid>
			
		</DataTemplate>
	
		<ItemsPanelTemplate x:Key="MapSelectionItemPanelTemplate">
			<WrapPanel IsItemsHost="True" />
		</ItemsPanelTemplate>

		

	</UserControl.Resources>

	<Grid  DataContext="{Binding Source={x:Static csShared:AppStateSettings.Instance}}">
        
		

        
		<s:SurfaceListBox x:Name="Maps" ItemTemplate="{DynamicResource DataTemplate1}" HorizontalAlignment="Stretch" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" Height="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" SelectedItem="{Binding Instance.ViewDef.SelectedBaseLayer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Instance.ViewDef.BaseLayerProviders}" ItemContainerStyle="{DynamicResource SurfaceListBoxItemStyle1}" >
			<s:SurfaceListBox.Resources>
				<ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
					<WrapPanel  Orientation="Horizontal" />
				</ItemsPanelTemplate>
				<Style x:Key="SurfaceListBoxItemStyle1" TargetType="{x:Type s:SurfaceListBoxItem}">
					<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
					<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
					<Setter Property="BorderThickness" Value="0"/>
					<!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>-->
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type s:SurfaceListBoxItem}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="Press">
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
											<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="Release">
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
											<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<Border x:Name="ButtonBody" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<Border x:Name="PressOverlay" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
										<Setter Property="Background" TargetName="PressOverlay" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
									</Trigger>
									<Trigger Property="IsPressed" Value="True">
										<Trigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
														<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</Trigger.EnterActions>
										<Trigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
														<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</Trigger.ExitActions>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
											<Condition Property="IsSelected" Value="True"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
										<Setter Property="Opacity" TargetName="Content" Value="0.6"/>
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
											<Condition Property="IsSelected" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Presentation:SurfaceColors}}}"/>
										<Setter Property="Opacity" TargetName="Content" Value="0.33"/>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.BasedOn>
						<Style TargetType="{x:Type Control}">
							<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							<Setter Property="SnapsToDevicePixels" Value="False"/>
							<Setter Property="FontFamily" Value="Segoe360"/>
							<Setter Property="FontWeight" Value="Normal"/>
							<Setter Property="FontSize" Value="17"/>
							<Setter Property="Padding" Value="6,2,10,10"/>
							<Setter Property="MinHeight" Value="38"/>
							<Setter Property="MinWidth" Value="38"/>
							<Setter Property="Margin" Value="1"/>
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="VerticalContentAlignment" Value="Top"/>
							<Setter Property="BorderThickness" Value="2"/>
						</Style>
					</Style.BasedOn>
				</Style>
			</s:SurfaceListBox.Resources>
		</s:SurfaceListBox>
	</Grid>

</UserControl>
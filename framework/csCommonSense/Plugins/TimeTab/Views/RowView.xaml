<UserControl x:Class="iTable.Plugins.TimeTab.Views.RowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Custom="http://schemas.microsoft.com/surface/2008"
             xmlns:cal="http://www.caliburnproject.org"
            
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:wpfSpark1="clr-namespace:WPFSpark"

             d:DesignHeight="1024" x:Name="UserControl"
             d:DesignWidth="768"
             mc:Ignorable="d" Background="White" HorizontalAlignment="Left"
             >
   
<Grid Width="325" HorizontalAlignment="Left">
    <Custom:SurfaceCheckBox Width="Auto" Content="{Binding Id}" cal:Message.Attach="[Event Click]=[Action Update()]"  HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" IsChecked="{Binding Visible, Mode=TwoWay}" Foreground="Black" Style="{DynamicResource SurfaceCheckBoxStyle1}" MinHeight="26" Padding="6,2,10,2">
        <Custom:SurfaceCheckBox.Resources>
            <Style x:Key="SurfaceCheckBoxStyle1" TargetType="{x:Type Custom:SurfaceCheckBox}">
                <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:SurfaceCheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Checked">
                                    <DoubleAnimation Duration="0:0:0.01" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Checkmark"/>
                                </Storyboard>
                                <Storyboard x:Key="Unchecked">
                                    <DoubleAnimation Duration="0:0:0.15" From="0.4" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Checkmark"/>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="hitArea" Grid.ColumnSpan="2" Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                <BulletDecorator x:Name="bulletDecorator" Grid.Column="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <BulletDecorator.Bullet>
                                        <Border x:Name="CheckButtonRect" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="24" Margin="1,1,0,0" Width="24">
                                            <Grid>
                                                <Path x:Name="Checkmark" Data="M0,24L12,0 M0,0L12,24" Fill="{x:Null}" Height="16" Opacity="0" StrokeStartLineCap="Flat" Stretch="Fill" StrokeEndLineCap="Flat" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Width="16"/>
                                                <Rectangle x:Name="ThreeStateMark" Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" Height="6" Opacity="0" Width="6"/>
                                            </Grid>
                                        </Border>
                                    </BulletDecorator.Bullet>
                                </BulletDecorator>
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsThreeState" Value="True"/>
                                        <Condition Property="IsChecked" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="Checkmark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="ThreeStateMark" Value="1"/>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.01" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Checkmark"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.15" From="0.4" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Checkmark"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Stroke" TargetName="Checkmark" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Stroke" TargetName="Checkmark" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                    <Setter Property="Fill" TargetName="ThreeStateMark" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="SnapsToDevicePixels" Value="False"/>
                        <Setter Property="FontFamily" Value="Segoe360"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="FontSize" Value="17"/>
                        <Setter Property="Padding" Value="6,2,10,10"/>
                        <Setter Property="MinHeight" Value="38"/>
                        <Setter Property="MinWidth" Value="38"/>
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Style>
                </Style.BasedOn>
            </Style>
        </Custom:SurfaceCheckBox.Resources>
            
        </Custom:SurfaceCheckBox>
    <Border  HorizontalAlignment="Right" Background="Transparent">
            <i:Interaction.Behaviors>
                <wpfSpark1:FluidMouseDragBehavior Changed="FluidMouseDragBehavior_OnChanged" DragButton="Left"></wpfSpark1:FluidMouseDragBehavior>
            </i:Interaction.Behaviors>
        <Image Source="/csCommon;component/icons/Order.png" Width="30" Height="30" IsHitTestVisible="False" />
        </Border>
    </Grid>
</UserControl>

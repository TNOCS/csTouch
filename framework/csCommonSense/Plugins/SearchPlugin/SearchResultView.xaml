<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cal="http://www.caliburnproject.org"        xmlns:Custom="http://schemas.microsoft.com/surface/2008" 
        xmlns:csDataServerPlugin="clr-namespace:csDataServerPlugin"
        x:Class="csCommon.MapPlugins.Search.SearchResultView">
	<UserControl.Resources>
		<DataTemplate x:Key="ResultTemplate">
            <Grid cal:Message.Attach="[Event TouchDown]=[Action Find($dataContext)];[Event MouseDown]=[Action Find($dataContext)]">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <csDataServerPlugin:ucPoiPreview PoI="{Binding}" />
				<TextBlock VerticalAlignment="Center" Grid.Column="1" Text="{Binding Name}" Foreground="Black"/>
			</Grid>
		</DataTemplate>
	</UserControl.Resources>

	<Grid HorizontalAlignment="Stretch">
		<s:SurfaceListBox   HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" ItemTemplate="{DynamicResource ResultTemplate}" x:Name="Result" Background="{x:Null}" Margin="10,0,0,0" ItemContainerStyle="{DynamicResource SurfaceListBoxItemStyle1}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" >
			<s:SurfaceListBox.Resources>
				
				<Style x:Key="SurfaceListBoxItemStyle1" TargetType="{x:Type s:SurfaceListBoxItem}">
					<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
					<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
					<Setter Property="BorderThickness" Value="0"/>
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type s:SurfaceListBoxItem}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="Press">
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
											<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="Release">
										<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
											<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid x:Name="Grid" Background="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<Border x:Name="ButtonBody" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<Border x:Name="PressOverlay" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
										<Setter Property="Background" TargetName="PressOverlay" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
									</Trigger>
									<Trigger Property="IsPressed" Value="True">
										<Trigger.EnterActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
														<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</Trigger.EnterActions>
										<Trigger.ExitActions>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
														<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</Trigger.ExitActions>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
											<Condition Property="IsSelected" Value="True"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
										<Setter Property="Opacity" TargetName="Content" Value="0.6"/>
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
											<Condition Property="IsSelected" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
										<Setter Property="Opacity" TargetName="Content" Value="0.33"/>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.BasedOn>
						<Style TargetType="{x:Type Control}">
							<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							<Setter Property="SnapsToDevicePixels" Value="False"/>
							<Setter Property="FontFamily" Value="Segoe360"/>
							<Setter Property="FontWeight" Value="Normal"/>
							<Setter Property="FontSize" Value="17"/>
							
							<Setter Property="MinHeight" Value="38"/>
							<Setter Property="MinWidth" Value="38"/>
							<Setter Property="Margin" Value="1"/>
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="VerticalContentAlignment" Value="Top"/>
							<Setter Property="BorderThickness" Value="2"/>
						</Style>
					</Style.BasedOn>
				</Style>
			</s:SurfaceListBox.Resources>
		</s:SurfaceListBox>
	</Grid>

</UserControl>

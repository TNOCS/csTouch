<UserControl x:Class="csCommon.Plugins.NotebookPlugin.NoteTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Custom="http://schemas.microsoft.com/surface/2008"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:controls="clr-namespace:csShared.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:thirdParty="clr-namespace:csShared.ThirdParty"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             xmlns:notebookPlugin="clr-namespace:csCommon.Plugins.NotebookPlugin"
             x:Name="UserControl"
             d:DesignHeight="1024"
             d:DesignWidth="768"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance notebookPlugin:NoteTabViewModel}">
    <UserControl.Resources>
        <DataTemplate x:Key="NotebookItemTemplate">
            <Grid Height="Auto" Background="LightGray">
                <Image x:Name="image"
                       Source="{Binding FileName, Converter={wpfConverters:ConvertBitmapFrame DecodePixelHeight=200}}" 
                       Stretch="UniformToFill"                   
                       thirdParty:Loader.CacheHeight="200"
                       thirdParty:Loader.DisplayOption="Preview"
                       thirdParty:Loader.DisplayWaitingAnimationDuringLoading="True"
                       thirdParty:Loader.Source="{Binding FileName}" />
                <Custom:SurfaceButton Width="38"
                                      Height="38"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      HorizontalContentAlignment="Center"
                                      Background="#4D000000"
                                      Content="..."
                                      Foreground="White"
                                      Padding="0"
                                      cal:Message.Attach="[Event Click] = [Action ItemMenu($executionContext)]" />

            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="NotebookPanel">
            <StackPanel IsItemsHost="True" Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="PopupButtonStyle1" TargetType="{x:Type controls:PopupButton}">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:PopupButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Rectangle x:Name="ButtonBody"
                                       Fill="{TemplateBinding Background}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Rectangle x:Name="PressOverlay"
                                       Fill="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                       Opacity="0"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <StackPanel Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Vertical">
                                <Border Width="40"
                                        Height="40"
                                        Background="{x:Null}">
                                    <Grid Margin="0" Background="{x:Null}">
                                        <Path Margin="5"
                                              Data="M78.505678,8.6831653C79.032389,8.6534097 79.521448,9.1961935 79.653567,10.014287 79.801974,10.947847 79.426974,11.891908 78.817568,12.1224L39.936106,26.668603C39.846205,26.702401 39.756304,26.718001 39.666506,26.718001 39.574106,26.718001 39.481703,26.699902 39.391806,26.668603L0.86691642,12.118399C0.25494647,11.889309 -0.11746025,10.946547 0.033602476,10.011785 0.18466425,9.0742242 0.79922819,8.503947 1.4098828,8.7370279L39.044104,22.946055C39.445204,23.097049,39.890505,23.098449,40.291506,22.948655L78.278567,8.731838C78.354418,8.7033517,78.43043,8.6874158,78.505678,8.6831653z M12.613961,6.1869788E-07C20.456185,-0.0013463921 31.803953,2.1961648 39.398897,12.921693 39.577196,13.172793 39.948393,13.168993 40.139693,12.926793 51.125399,-0.995022 65.810183,-0.083583034 71.333437,0.6363892 72.138132,0.74185979 72.820521,1.2561404 73.291819,1.9175814 74.218912,3.2170825 75.235804,4.4175837 75.945498,5.2145145 76.36999,5.692425 76.205797,6.4527962 75.609598,6.6833966L39.664496,20.626002 3.680432,6.6833966C3.1127163,6.4632361 3.0293671,5.7235553 3.4486832,5.2836149 4.130988,4.5662043 5.0607003,3.4058626 5.922533,1.7132311 6.3080001,0.95933008 6.9954646,0.37216947 7.833988,0.27444878 9.1811583,0.11772244 10.804217,0.0003124105 12.613961,6.1869788E-07z"
                                              Fill="Black"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Uniform">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <RotateTransform Angle="0" />
                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="Content"
                                                  Margin="0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetName="PressOverlay"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetName="PressOverlay"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBody" Property="Fill" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter TargetName="Content" Property="Opacity" Value="0.33" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="SnapsToDevicePixels" Value="False" />
                    <Setter Property="FontFamily" Value="Segoe360" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Padding" Value="6,2,10,10" />
                    <Setter Property="MinHeight" Value="38" />
                    <Setter Property="MinWidth" Value="38" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="BorderThickness" Value="2" />
                </Style>
            </Style.BasedOn>
        </Style>
    </UserControl.Resources>


    <Grid x:Name="gMain">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <controls:PopupButton Width="100"
                                  Height="100"
                                  Margin="10,10,1,1"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Background="#4DFFFFFF"
                                  BorderBrush="Black"
                                  Foreground="#FF0C0C0C"
                                  Options="{Binding AvailableNotebooks}"
                                  Style="{DynamicResource PopupButtonStyle1}"
                                  cal:Message.Attach="[Event ValueChanged]=[Action NotebookChanged()]"
                                  Value="{Binding Plugin.Notebooks.ActiveNotebookConfig,
                                              Mode=TwoWay}" />
            <Custom:SurfaceButton x:Name="CreatePowerPoint"
                                  Margin="10,10,1,1"
                                  Width="100"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Bottom"
                                  Content="PPT" />
        </StackPanel>
        <Custom:SurfaceListBox x:Name="Items"
                               Grid.Column="1"
                               Margin="120,0,0,0"
                               HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               Background="{x:Null}"
                               ItemContainerStyle="{DynamicResource SurfaceListBoxItemStyle1}"
                               ItemTemplate="{DynamicResource NotebookItemTemplate}"
                               ItemsPanel="{DynamicResource NotebookPanel}"
                               ItemsSource="{Binding ActiveNotebook.Items}"
                               ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                               SelectionMode="Multiple">
            <Custom:SurfaceListBox.Resources>
                <Style x:Key="SurfaceListBoxItemStyle1" TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Template" Value="{DynamicResource SurfaceListBoxItemControlTemplate1}" />
                </Style>
                <ControlTemplate x:Key="SurfaceListBoxItemControlTemplate1" TargetType="{x:Type Custom:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                           Storyboard.TargetName="PressOverlay"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                           Storyboard.TargetName="PressOverlay"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Width="{Binding ActualHeight,
                                            ElementName=border}"
                            BorderBrush="White"
                            BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="10" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderThickness)">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Grid"
                              Height="Auto"
                              Background="{x:Null}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="ButtonBody"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter TargetName="PressOverlay" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="PressOverlay"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="PressOverlay"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter TargetName="Content" Property="Opacity" Value="0.6" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter TargetName="Content" Property="Opacity" Value="0.33" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Custom:SurfaceListBox.Resources>
        </Custom:SurfaceListBox>
    </Grid>
</UserControl>
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:custom="http://schemas.microsoft.com/surface/2008"
             xmlns:csDataServerPlugin="clr-namespace:csDataServerPlugin"
             xmlns:utils="clr-namespace:csCommon.Utils;assembly=csCommon"             
             xmlns:controls="clr-namespace:csShared.Controls"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             xmlns:pieChart1="clr-namespace:ScottLogic.Controls.PieChart;assembly=PieChart"
             x:Name="UserControl"
             x:Class="csDataServerPlugin.HighlighterView"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/csCommon;component/Resources/Styles/BlackStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <x:ArrayExtension x:Key="Brushes" Type="{x:Type Brush}">
                <SolidColorBrush Color="#9F15C3" />
                <SolidColorBrush Color="#FF8E01" />
                <SolidColorBrush Color="#339933" />
                <SolidColorBrush Color="#00AAFF" />
                <SolidColorBrush Color="#818183" />
                <SolidColorBrush Color="#000033" />
            </x:ArrayExtension>

            <Style TargetType="{x:Type Control}"
                   x:Key="ControlBaseStyle">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels"
                        Value="False" />
                <Setter Property="FontFamily"
                        Value="Segoe360" />
                <Setter Property="FontWeight"
                        Value="Normal" />
                <Setter Property="Padding"
                        Value="6,2,10,10" />
                <Setter Property="MinHeight"
                        Value="38" />
                <Setter Property="MinWidth"
                        Value="38" />
                <Setter Property="Margin"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Top" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </Style>
            <SolidColorBrush x:Key="ControlHitAreaBrush"
                             Color="#00FFFFFF" />
            <Style x:Key="BlackCheckBox"
                   TargetType="{x:Type custom:SurfaceCheckBox}"
                   BasedOn="{StaticResource ControlBaseStyle}">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundBrushKey}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundBrushKey}}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type custom:SurfaceCheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Checked">
                                    <DoubleAnimation Duration="00:00:00.0100000"
                                                     Storyboard.TargetName="Checkmark"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" />
                                </Storyboard>
                                <Storyboard x:Key="Unchecked">
                                    <DoubleAnimation Duration="00:00:00.1500000"
                                                     Storyboard.TargetName="Checkmark"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0.4"
                                                     To="0" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2"
                                           x:Name="hitArea"
                                           Fill="{StaticResource ControlHitAreaBrush}"
                                           Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}" />
                                <BulletDecorator Grid.Column="0"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 x:Name="bulletDecorator"
                                                 RenderTransformOrigin="0.5,0.5">
                                    <BulletDecorator.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.5"
                                                            ScaleY="1.5" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </BulletDecorator.RenderTransform>
                                    <BulletDecorator.Bullet>
                                        <Border x:Name="CheckButtonRect"
                                                Margin="1,6,0,0"
                                                Width="16"
                                                Height="16"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Path x:Name="Checkmark"
                                                      StrokeEndLineCap="Flat"
                                                      Fill="{x:Null}"
                                                      Stroke="#E6000000"
                                                      StrokeStartLineCap="Flat"
                                                      StrokeThickness="2"
                                                      Width="10"
                                                      Height="10"
                                                      Data="M0,24 L12,0 M0,0 L12,24"
                                                      Opacity="0"
                                                      Stretch="Fill" />
                                                <Rectangle x:Name="ThreeStateMark"
                                                           Opacity="0"
                                                           Fill="{DynamicResource {x:Static custom:SurfaceColors.BulletBrushKey}}"
                                                           Width="6"
                                                           Height="6" />
                                            </Grid>
                                        </Border>
                                    </BulletDecorator.Bullet>
                                </BulletDecorator>
                                <ContentPresenter Grid.Column="1"
                                                  x:Name="Content"
                                                  Margin="12,0,10,0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsThreeState"
                                                   Value="True" />
                                        <Condition Property="IsChecked"
                                                   Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Checkmark"
                                            Property="Opacity"
                                            Value="0" />
                                    <Setter TargetName="ThreeStateMark"
                                            Property="Opacity"
                                            Value="1" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Checked}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Unchecked}" />
                                    </Trigger.ExitActions>
                                    <Setter Property="Opacity"
                                            TargetName="Checkmark"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundPressedBrushKey}}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderPressedBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundPressedBrushKey}}" />
                                    <Setter TargetName="Checkmark"
                                            Property="Stroke"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.BulletPressedBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderDisabledBrushKey}}" />
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundDisabledBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundDisabledBrushKey}}" />
                                    <Setter TargetName="Checkmark"
                                            Property="Stroke"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
                                    <Setter TargetName="ThreeStateMark"
                                            Property="Fill"
                                            Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="0,0,0,15">
        <StackPanel Margin="0">
            <custom:SurfaceCheckBox x:Name="surfaceCheckBox"
                                    Foreground="Black"
                                    Content="{Binding Highlighter.Title}"
                                    cal:Message.Attach="[Event Checked]=[Action ChangeActive()];[Event Unchecked]=[Action ChangeActive()]"
                                    IsChecked="{Binding Highlighter.IsActive, Mode=TwoWay}"
                                    BorderBrush="#99000000"
                                    MinHeight="0"
                                    MinWidth="0"
                                    Style="{DynamicResource BlackCheckBox}"
                                    FontWeight="Normal"
                                    Background="{x:Null}"
                                    MaxWidth="275"
                                    Margin="1,1,40,1" />
            <StackPanel Orientation="Vertical"
                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=surfaceCheckBox}"
                        Margin="30,0,0,0">
                <Border x:Name="ShowSymbolSize"
                        BorderBrush="Black"
                        BorderThickness="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top">
                    <StackPanel Orientation="Horizontal"
                                Margin="0,0,0,5">
                        <Ellipse Fill="#FFF4F4F5"
                                 Height="10"
                                 Stroke="Black"
                                 VerticalAlignment="Center"
                                 Width="10"
                                 StrokeThickness="2"
                                 Margin="0,0,5,0" />
                        <Ellipse Fill="#FFF4F4F5"
                                 Height="20"
                                 Stroke="Black"
                                 VerticalAlignment="Center"
                                 Width="20"
                                 StrokeThickness="2"
                                 Margin="0,0,5,0" />
                        <Ellipse Fill="#FFF4F4F5"
                                 Height="30"
                                 Stroke="Black"
                                 VerticalAlignment="Center"
                                 Width="30"
                                 StrokeThickness="2"
                                 Margin="0,0,5,0" />
                    </StackPanel>
                </Border>
                <TextBlock x:Name="tvVisualType"
                           HorizontalAlignment="Stretch"
                           TextWrapping="Wrap"
                           Text="{Binding Highlighter.VisualType}"
                           VerticalAlignment="Stretch"
                           Foreground="Black"
                           Visibility="Collapsed" />
                <Border x:Name="ShowSelectionCriteria"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                    <TextBlock x:Name="tbSelectionCriteria"
                               TextWrapping="Wrap"
                               Text="{Binding Highlighter.SelectionCriteria}"
                               Foreground="Black" />
                </Border>
                <Border x:Name="ShowThreshholdType"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">

                    <StackPanel Margin="0"
                                Orientation="Horizontal">

                        <TextBlock x:Name="tbThresholdType"
                                   TextWrapping="Wrap"
                                   Text="{Binding Highlighter.ThresholdType}"
                                   Foreground="Black"
                                   Margin="0" />
                        <TextBlock x:Name="tbThresholdValue"
                                   TextWrapping="Wrap" Visibility="{Binding ShowNumberValue}"
                                   Text="{Binding Highlighter.ThresHoldValue, StringFormat=F2}"
                                   Foreground="Black"
                                   Margin="10,0,0,0" />
                        <TextBlock x:Name="tbStringValue"
                                   TextWrapping="Wrap" Visibility="{Binding ShowStringValue}"
                                   Text="{Binding Highlighter.StringValue}"
                                   Foreground="Black"
                                   Margin="10,0,0,0" />
                    </StackPanel>
                </Border>
                <!--<TextBlock x:Name="tbHighlighterType" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Highlighter.HighlighterType}" VerticalAlignment="Stretch" Foreground="Black" FontSize="17" />-->
                <Border x:Name="ShowThresholdDoubleValue">
                    <Grid Height="40"
                          Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <custom:SurfaceSlider Margin="0"
                                              Maximum="{Binding Highlighter.MaxValue}"
                                              Value="{Binding Highlighter.ThresHoldValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource BlackSliderStyle}"
                                              AutoToolTipPlacement="BottomRight"
                                              Minimum="{Binding Highlighter.MinValue}"
                                              Grid.Column="1" />
                        <TextBlock x:Name="tbMaxValue_Copy"
                                   HorizontalAlignment="Stretch"
                                   TextWrapping="Wrap"
                                   Text="{Binding Highlighter.MaxValue}"
                                   VerticalAlignment="Stretch"
                                   Foreground="Black"
                                   Margin="0"
                                   Grid.Column="2" />
                        <TextBlock x:Name="tbMinValue_Copy"
                                   HorizontalAlignment="Stretch"
                                   TextWrapping="Wrap"
                                   Text="{Binding Highlighter.MinValue}"
                                   VerticalAlignment="Stretch"
                                   Foreground="Black"
                                   Margin="0" />
                    </Grid>
                </Border>
                <Border x:Name="ShowColorRange"
                        BorderBrush="Black">
                    <Grid Height="20"
                          cal:Message.Attach="[Event MouseDown]=[Action SelectColor($source)];[Event TouchDown]=[Action SelectColor($source)]">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border BorderBrush="Black"
                                BorderThickness="0"
                                Grid.Column="1"
                                Background="{Binding Gradient}" />
                        <TextBlock x:Name="tbMaxValue"
                                   HorizontalAlignment="Stretch"
                                   TextWrapping="Wrap"
                                   Text="{Binding Highlighter.MaxValue}"
                                   VerticalAlignment="Stretch"
                                   Foreground="Black"
                                   Grid.ColumnSpan="2"
                                   Margin="5,0"
                                   Grid.Column="2" />
                        <TextBlock x:Name="tbMinValue"
                                   HorizontalAlignment="Stretch"
                                   TextWrapping="Wrap"
                                   Text="{Binding Highlighter.MinValue}"
                                   VerticalAlignment="Stretch"
                                   Foreground="Black"
                                   Margin="5,0" />
                    </Grid>
                </Border>
            </StackPanel>
            <StackPanel x:Name="Edit"
                        Orientation="Vertical"
                        Visibility="{Binding Expanded, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="30,5,0,0"
                        MaxWidth="250" d:DataContext="{d:DesignInstance csDataServerPlugin:HighlighterViewModel}">
                <Grid x:Name="NumberEdit" Visibility="{Binding ShowNumberValue}">
                <Grid x:Name="spMinMaxValue">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock TextWrapping="Wrap"
                               Text="Min Value"
                               Margin="3" />
                    <controls:KeyboardTextBox TextWrapping="Wrap"
                                               Text="{Binding Highlighter.MinValue, Mode=TwoWay}"
                                               VerticalAlignment="Top"
                                               Grid.Column="1"
                                               Margin="3"
                                               MaxWidth="200" />
                    <TextBlock TextWrapping="Wrap"
                               Text="Max Value"
                               Margin="3"
                               Grid.Row="1" />
                    <controls:KeyboardTextBox TextWrapping="Wrap"
                                               Text="{Binding Highlighter.MaxValue, Mode=TwoWay}"
                                               VerticalAlignment="Top"
                                               Grid.Column="1"
                                               Grid.Row="1"
                                               Margin="3"
                                               MaxWidth="200" />
                    <custom:SurfaceButton x:Name="CalculateMin"
                                          HorizontalAlignment="Left"
                                          Margin="10,0,0,0"
                                          VerticalAlignment="Top"
                                          Grid.Column="2">
                        <Path
                            Data="F1M43.4779,8.19067L20.8699,8.19067C17.7292,8.19067,15.172,10.7454,15.172,13.8873L15.172,49.6016C15.172,52.7428,17.7292,55.3014,20.8699,55.3014L43.4779,55.3014C46.6187,55.3014,49.1759,52.7428,49.1759,49.6016L49.1759,13.8873C49.1759,10.7454,46.6187,8.19067,43.4779,8.19067z M25.241,46.5618C25.241,47.4004,24.5587,48.0813,23.7202,48.0813L22.0105,48.0813C21.172,48.0813,20.491,47.4004,20.491,46.5618L20.491,45.0416C20.491,44.2031,21.172,43.5215,22.0105,43.5215L23.7202,43.5215C24.5587,43.5215,25.241,44.2031,25.241,45.0416L25.241,46.5618z M25.241,38.582C25.241,39.4219,24.5587,40.1028,23.7202,40.1028L22.0105,40.1028C21.172,40.1028,20.491,39.4219,20.491,38.582L20.491,37.0625C20.491,36.2246,21.172,35.5436,22.0105,35.5436L23.7202,35.5436C24.5587,35.5436,25.241,36.2246,25.241,37.0625L25.241,38.582z M25.241,30.6041C25.241,31.4426,24.5587,32.123,23.7202,32.123L22.0105,32.123C21.172,32.123,20.491,31.4426,20.491,30.6041L20.491,29.0846C20.491,28.2461,21.172,27.5645,22.0105,27.5645L23.7202,27.5645C24.5587,27.5645,25.241,28.2461,25.241,29.0846L25.241,30.6041z M34.5483,46.5618C34.5483,47.4004,33.8672,48.0813,33.0281,48.0813L31.3191,48.0813C30.4806,48.0813,29.7997,47.4004,29.7997,46.5618L29.7997,45.0416C29.7997,44.2031,30.4806,43.5215,31.3191,43.5215L33.0281,43.5215C33.8672,43.5215,34.5483,44.2031,34.5483,45.0416L34.5483,46.5618z M34.5483,38.582C34.5483,39.4219,33.8672,40.1028,33.0281,40.1028L31.3191,40.1028C30.4806,40.1028,29.7997,39.4219,29.7997,38.582L29.7997,37.0625C29.7997,36.2246,30.4806,35.5436,31.3191,35.5436L33.0281,35.5436C33.8672,35.5436,34.5483,36.2246,34.5483,37.0625L34.5483,38.582z M34.5483,30.6041C34.5483,31.4426,33.8672,32.123,33.0281,32.123L31.3191,32.123C30.4806,32.123,29.7997,31.4426,29.7997,30.6041L29.7997,29.0846C29.7997,28.2461,30.4806,27.5645,31.3191,27.5645L33.0281,27.5645C33.8672,27.5645,34.5483,28.2461,34.5483,29.0846L34.5483,30.6041z M43.8569,46.5618C43.8569,47.4004,43.1759,48.0813,42.3374,48.0813L40.6277,48.0813C39.7866,48.0813,39.1069,47.4004,39.1069,46.5618L39.1069,45.0416C39.1069,44.2031,39.7866,43.5215,40.6277,43.5215L42.3374,43.5215C43.1759,43.5215,43.8569,44.2031,43.8569,45.0416L43.8569,46.5618z M43.8569,38.582C43.8569,39.4219,43.1759,40.1028,42.3374,40.1028L40.6277,40.1028C39.7866,40.1028,39.1069,39.4219,39.1069,38.582L39.1069,37.0625C39.1069,36.2246,39.7866,35.5436,40.6277,35.5436L42.3374,35.5436C43.1759,35.5436,43.8569,36.2246,43.8569,37.0625L43.8569,38.582z M43.8569,30.6041C43.8569,31.4426,43.1759,32.123,42.3374,32.123L40.6277,32.123C39.7866,32.123,39.1069,31.4426,39.1069,30.6041L39.1069,29.0846C39.1069,28.2461,39.7866,27.5645,40.6277,27.5645L42.3374,27.5645C43.1759,27.5645,43.8569,28.2461,43.8569,29.0846L43.8569,30.6041z M44.4272,20.916C44.4272,22.1738,43.4052,23.1953,42.1472,23.1953L22.2007,23.1953C20.9441,23.1953,19.9207,22.1738,19.9207,20.916L19.9207,15.7858C19.9207,14.5293,20.9441,13.5071,22.2007,13.5071L42.1472,13.5071C43.4052,13.5071,44.4272,14.5293,44.4272,15.7858L44.4272,20.916z"
                            Stretch="Uniform"
                            Fill="#BF000000"
                            Width="26"
                            Height="26"
                            Margin="0,0,0,0"
                            RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1"
                                                        ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </custom:SurfaceButton>
                    <custom:SurfaceButton x:Name="CalculateMax"
                                          HorizontalAlignment="Left"
                                          Margin="10,0,0,0"
                                          VerticalAlignment="Top"
                                          Grid.Column="2"
                                          Grid.Row="1">
                        <Path
                            Data="F1M43.4779,8.19067L20.8699,8.19067C17.7292,8.19067,15.172,10.7454,15.172,13.8873L15.172,49.6016C15.172,52.7428,17.7292,55.3014,20.8699,55.3014L43.4779,55.3014C46.6187,55.3014,49.1759,52.7428,49.1759,49.6016L49.1759,13.8873C49.1759,10.7454,46.6187,8.19067,43.4779,8.19067z M25.241,46.5618C25.241,47.4004,24.5587,48.0813,23.7202,48.0813L22.0105,48.0813C21.172,48.0813,20.491,47.4004,20.491,46.5618L20.491,45.0416C20.491,44.2031,21.172,43.5215,22.0105,43.5215L23.7202,43.5215C24.5587,43.5215,25.241,44.2031,25.241,45.0416L25.241,46.5618z M25.241,38.582C25.241,39.4219,24.5587,40.1028,23.7202,40.1028L22.0105,40.1028C21.172,40.1028,20.491,39.4219,20.491,38.582L20.491,37.0625C20.491,36.2246,21.172,35.5436,22.0105,35.5436L23.7202,35.5436C24.5587,35.5436,25.241,36.2246,25.241,37.0625L25.241,38.582z M25.241,30.6041C25.241,31.4426,24.5587,32.123,23.7202,32.123L22.0105,32.123C21.172,32.123,20.491,31.4426,20.491,30.6041L20.491,29.0846C20.491,28.2461,21.172,27.5645,22.0105,27.5645L23.7202,27.5645C24.5587,27.5645,25.241,28.2461,25.241,29.0846L25.241,30.6041z M34.5483,46.5618C34.5483,47.4004,33.8672,48.0813,33.0281,48.0813L31.3191,48.0813C30.4806,48.0813,29.7997,47.4004,29.7997,46.5618L29.7997,45.0416C29.7997,44.2031,30.4806,43.5215,31.3191,43.5215L33.0281,43.5215C33.8672,43.5215,34.5483,44.2031,34.5483,45.0416L34.5483,46.5618z M34.5483,38.582C34.5483,39.4219,33.8672,40.1028,33.0281,40.1028L31.3191,40.1028C30.4806,40.1028,29.7997,39.4219,29.7997,38.582L29.7997,37.0625C29.7997,36.2246,30.4806,35.5436,31.3191,35.5436L33.0281,35.5436C33.8672,35.5436,34.5483,36.2246,34.5483,37.0625L34.5483,38.582z M34.5483,30.6041C34.5483,31.4426,33.8672,32.123,33.0281,32.123L31.3191,32.123C30.4806,32.123,29.7997,31.4426,29.7997,30.6041L29.7997,29.0846C29.7997,28.2461,30.4806,27.5645,31.3191,27.5645L33.0281,27.5645C33.8672,27.5645,34.5483,28.2461,34.5483,29.0846L34.5483,30.6041z M43.8569,46.5618C43.8569,47.4004,43.1759,48.0813,42.3374,48.0813L40.6277,48.0813C39.7866,48.0813,39.1069,47.4004,39.1069,46.5618L39.1069,45.0416C39.1069,44.2031,39.7866,43.5215,40.6277,43.5215L42.3374,43.5215C43.1759,43.5215,43.8569,44.2031,43.8569,45.0416L43.8569,46.5618z M43.8569,38.582C43.8569,39.4219,43.1759,40.1028,42.3374,40.1028L40.6277,40.1028C39.7866,40.1028,39.1069,39.4219,39.1069,38.582L39.1069,37.0625C39.1069,36.2246,39.7866,35.5436,40.6277,35.5436L42.3374,35.5436C43.1759,35.5436,43.8569,36.2246,43.8569,37.0625L43.8569,38.582z M43.8569,30.6041C43.8569,31.4426,43.1759,32.123,42.3374,32.123L40.6277,32.123C39.7866,32.123,39.1069,31.4426,39.1069,30.6041L39.1069,29.0846C39.1069,28.2461,39.7866,27.5645,40.6277,27.5645L42.3374,27.5645C43.1759,27.5645,43.8569,28.2461,43.8569,29.0846L43.8569,30.6041z M44.4272,20.916C44.4272,22.1738,43.4052,23.1953,42.1472,23.1953L22.2007,23.1953C20.9441,23.1953,19.9207,22.1738,19.9207,20.916L19.9207,15.7858C19.9207,14.5293,20.9441,13.5071,22.2007,13.5071L42.1472,13.5071C43.4052,13.5071,44.4272,14.5293,44.4272,15.7858L44.4272,20.916z"
                            Stretch="Uniform"
                            Fill="#BF000000"
                            Width="26"
                            Height="26"
                            Margin="0,0,0,0"
                            RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1"
                                                    ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </custom:SurfaceButton>
                </Grid>
                </Grid>
                <Grid x:Name="StringEdit" Visibility="{Binding ShowStringValue}">
                    <custom:SurfaceButton cal:Message.Attach="[Event Click] = [Action ChangeStringValue($source)]"
                                      Content="{Binding Highlighter.StringValue, Mode=TwoWay}"
                                      Margin="0"
                                      Background="{Binding AccentBrush}" />
                   
                </Grid>
                <custom:SurfaceButton cal:Message.Attach="[Event Click] = [Action ChangeVisualType($source)]"
                                      x:Name="VisualType"
                                      Content="{Binding Highlighter.VisualType, Mode=TwoWay}"
                                      Margin="0"
                                      Visibility="{Binding ShowVisualType, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Background="{Binding AccentBrush}" />
                <custom:SurfaceButton cal:Message.Attach="[Event Click] = [Action ChangeThresholdType($source)]"
                                      x:Name="ThresholdType"
                                      Content="{Binding Highlighter.ThresholdType}"
                                      Margin="0"
                                      Visibility="{Binding ShowThreshholdType, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Background="{Binding AccentBrush}" />

                <Grid x:Name="HighlightersGrid" Margin="0"
                      Visibility="{Binding Highlighter.UsesMultipleCriteria, Converter={wpfConverters:ConvertBoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" 
                             ItemsSource="{Binding Highlighter.Criteria}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="0 0 0 -5"
                                                   Text="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                         AncestorType={x:Type ListBoxItem}}, 
                                                         Converter={wpfConverters:ConvertIndexToCharacter}, StringFormat='{}{0}: '}" />
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                    <StackPanel x:Name="SliderWrapper" 
                                                Visibility="Collapsed"
                                                Margin="-20 0 0 0">
                                        <custom:SurfaceSlider Margin="5 0"
                                                              Minimum="0"
                                                              Maximum="1"
                                                              SmallChange="0.1"
                                                              LargeChange="0.2"
                                                              Width="{Binding ElementName=HighlightersGrid, Path=ActualWidth}"
                                                              HorizontalAlignment="Stretch"
                                                              Visibility="{Binding DataContext.Highlighter.InMcaMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Converter={wpfConverters:ConvertBoolToVisibility}}"
                                                              Value="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                              Style="{StaticResource BlackSliderStyle}"
                                                              cal:Message.Attach="[Event ValueChanged] = [Action UpdateMathFormula()]" />
                                    </StackPanel>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger
                                        Binding="{Binding RelativeSource={RelativeSource
                                                    Mode=FindAncestor,
                                                    AncestorType={x:Type ListBoxItem}},
                                                    Path=IsSelected}"
                                        Value="True">
                                        <Setter
                                            TargetName="SliderWrapper"
                                            Property="Visibility"
                                            Value="Visible" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Visibility="{Binding Highlighter.InMcaMode, Converter={wpfConverters:ConvertBoolToVisibility}}"
                                Grid.Row="1">
                        <Viewbox HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch">
                            <pieChart1:PieChartLayout x:Name="PiePlotter"
                                                     Margin="10 0"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Top"
                                                     DataContext="{Binding Highlighter.Criteria}"
                                                     PlottedProperty="Weight">
                                <pieChart1:PieChartLayout.ColorSelector>
                                    <pieChart1:IndexedColourSelector Brushes="{StaticResource Brushes}" />
                                </pieChart1:PieChartLayout.ColorSelector>
                            </pieChart1:PieChartLayout>
                        </Viewbox>
                        <TextBlock Text="{Binding Highlighter.MathFormula}" />
                    </StackPanel>

                    <controls:KeyboardTextBox TextWrapping="Wrap"
                                               Text="{Binding Highlighter.MathFormula, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                               Visibility="{Binding Highlighter.InMcaMode, Converter={wpfConverters:ConvertBoolToVisibility}, ConverterParameter=false}"
                                               VerticalAlignment="Top"
                                               Grid.Row="1"
                                               Margin="0 0 0 5"
                                               cal:Message.Attach="[Event LostFocus]=[Action MathFormulateUpdated()]" />
                </Grid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <!--<Custom:SurfaceToggleButton cal:Message.Attach="[Event Click] = [Action ToggleMCA()]"-->
                    <custom:SurfaceToggleButton x:Name="ToggleMcaMode"
                                                IsChecked="{Binding Highlighter.InMcaMode}"
                                                Background="{Binding AccentBrush}">
                        <Path Margin="0 "
                              Data="M28.709368,33.899765L7.5679998,46.105526C12.448099,54.53917 21.558705,60.215001 31.999995,60.215001 41.136128,60.215001 49.255437,55.866459 54.408349,49.13205L54.918153,48.443161z M32.000001,3.7849998L32.000001,28.870228 57.877824,43.23042 58.034516,42.872685C59.436379,39.526433 60.212003,35.8555 60.212003,31.999955 60.212003,16.661346 47.972184,4.1804976 32.728135,3.7942151z M32.000001,0C49.673199,2.3841858E-07 64.000001,14.328101 64.000001,32 64.000001,49.671902 49.673199,64 32.000001,64 14.325599,64 0,49.671902 0,32 0,14.328101 14.325599,2.3841858E-07 32.000001,0z"
                              Stretch="Uniform"
                              Fill="#BF000000"
                              Width="26"
                              Height="26" />
                    </custom:SurfaceToggleButton>
                    <custom:SurfaceButton cal:Message.Attach="[Event Click] = [Action Remove($source)]"
                                          x:Name="Remove"
                                          Margin="0"
                                          Background="{Binding AccentBrush}">
                        <Path Margin="0 5 0 0"
                              Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z"
                              Stretch="Uniform"
                              Fill="#BF000000"
                              Width="26"
                              Height="26" />
                    </custom:SurfaceButton>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <custom:SurfaceToggleButton x:Name="stbExpand"
                                    HorizontalAlignment="Right"
                                    Margin="0"
                                    VerticalAlignment="Top"
                                    IsChecked="{Binding Expanded, Mode=TwoWay}"
                                    Style="{DynamicResource SurfaceToggleButtonStyle1}"
                                    MinWidth="20"
                                    MinHeight="20">
            <custom:SurfaceToggleButton.Resources>
                <!-- ToggleButton -->
                <Style x:Key="SurfaceToggleButtonStyle1"
                       TargetType="{x:Type custom:SurfaceToggleButton}"
                       BasedOn="{StaticResource ControlBaseStyle}">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="Padding"
                            Value="7" />
                    <Setter Property="Background"
                            Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundBrushKey}}" />
                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type custom:SurfaceToggleButton}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="Press">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PressOverlay"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="Release">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PressOverlay"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2500000"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid x:Name="Grid"
                                      Background="{StaticResource ControlHitAreaBrush}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Border x:Name="ButtonBody"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Border x:Name="PressOverlay"
                                            Background="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundPressedBrushKey}}"
                                            Opacity="0"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <ContentPresenter x:Name="Content"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ToggleButtonBackgroundCheckedBrushKey}}"
                                                TargetName="ButtonBody" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                             Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource Press}" />
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource Release}" />
                                        </Trigger.ExitActions>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundPressedBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsPressed"
                                                       Value="True" />
                                            <Condition Property="IsChecked"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                                TargetName="PressOverlay"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ToggleButtonBackgroundCheckedPressedBrushKey}}" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled"
                                                       Value="False" />
                                            <Condition Property="IsChecked"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ToggleButtonBackgroundCheckedDisabledBrushKey}}"
                                                TargetName="ButtonBody" />
                                        <Setter Property="Opacity"
                                                Value="0.6"
                                                TargetName="Content" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled"
                                                       Value="False" />
                                            <Condition Property="IsChecked"
                                                       Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static custom:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
                                                TargetName="ButtonBody" />
                                        <Setter Property="Opacity"
                                                Value="0.33"
                                                TargetName="Content" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </custom:SurfaceToggleButton.Resources>
            <Path
                Data="M30.707001,52.895L63.441002,52.895 63.441002,58.181999 30.707001,58.181999z M0,47.075001L16.922001,47.075001 16.922001,64 0,64z M30.707001,29.372L63.441002,29.372 63.441002,34.66 30.707001,34.66z M0,23.555L16.922001,23.555 16.922001,40.478001 0,40.478001z M30.707001,5.8150005L63.441002,5.8150005 63.441002,11.103 30.707001,11.103z M0,0L16.922001,0 16.922001,16.921 0,16.921z"
                Stretch="Uniform"
                Fill="#FF898989"
                Width="15"
                Height="15"
                Margin="0,0,0,0"
                RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0" />
                        <ScaleTransform ScaleX="1"
                                        ScaleY="1" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </custom:SurfaceToggleButton>
    </Grid>
</UserControl>
<UserControl x:Class="csDataServerPlugin.ucPoiIcon"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:csCommon.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mapIconMenu1="clr-namespace:csCommon.csMapCustomControls.MapIconMenu"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             x:Name="UserControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <wpfConverters:BorderRadiusConverter x:Key="BorderRadiusConverter" />
        <converters:PoiIconConverter x:Key="PoiIconConverter" />
    </UserControl.Resources>
    <Grid 
        Visibility="{Binding Attributes[PoI].NEffectiveStyle.Visible, Converter={StaticResource BooleanToVisibilityConverter}}"
        Width="Auto"
          Height="Auto"
          HorizontalAlignment="Left"
          Background="{x:Null}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3">
                        <VisualTransition.GeneratedEasingFunction>
                            <BackEase EasingMode="EaseOut" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Rotating">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Default">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-12.5" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-12.5" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(Shape.StrokeThickness)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(Shape.StrokeLineJoin)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PenLineJoin.Bevel}" />
                        </ObjectAnimationUsingKeyFrames>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ePos" Storyboard.TargetProperty="(UIElement.ClipToBounds)">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                        </BooleanAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="cHeading" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="cHeading" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <mapIconMenu1:ReferenceAlignPanel Width="200"
                                          Height="200"
                                          Margin="-100,-100,0,0"
                                          AlignReferencePoint="0,0"
                                          AllowRealign="False"
                                          HorizontalReferencePointAlignment="Center"
                                          VerticalReferencePointAlignment="Center">
            <mapIconMenu1:MapMenu x:Name="MKRoot"
                                  Margin="0,0,0,0"
                                  VerticalAlignment="Bottom"
                                  MenuEnabled="False"
                                  Radius="50">
                <mapIconMenu1:MapMenuItem x:Name="bCircle"
                                          IconMoved="BCircleIconMoved"
                                          IconReleased="BCircleIconReleased"
                                          IconTapped="BCircleIconTapped"
                                          IconLongTapped="BCircleIconLongTapped"
                                          IconRightClicked="BCircleIconRightClicked"
                                          RootToolTip="User">
                    <mapIconMenu1:MapMenuItem.Header>
                        <Grid RenderTransformOrigin="0.5, 0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding Attributes[PoI].Orientation}" />
                                </TransformGroup>
                            </Grid.RenderTransform>

                            <Border x:Name="bIcon"
                                    Width="{Binding Attributes[PoI].NEffectiveStyle.IconWidth}"
                                    Height="{Binding Attributes[PoI].NEffectiveStyle.IconHeight}"
                                    BorderBrush="{Binding Attributes[PoI].NEffectiveStyle.StrokeColor,
                                                          Converter={wpfConverters:ConvertColorToBrush}}"
                                    BorderThickness="{Binding Attributes[PoI].NEffectiveStyle.StrokeWidth}"
                                    CornerRadius="{Binding Attributes[PoI].NEffectiveStyle.IconWidth,
                                                           Converter={StaticResource BorderRadiusConverter}}" />
                            <Image x:Name="iPoiIcon"
                                   Width="{Binding Attributes[PoI].NEffectiveStyle.IconWidth}"
                                   Height="{Binding Attributes[PoI].NEffectiveStyle.IconHeight}"
                                   RenderTransformOrigin="0.5, 0.5"
                                   >
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                                </Image.RenderTransform>
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{Binding Attributes[PoI].NEffectiveStyle.Picture}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Attributes[PoI].NEffectiveStyle.Picture}" Value="{x:Null}">
                                                <Setter Property="Source" Value="/csCommon;component/Resources/Icons/IconNotFound.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock x:Name="InnerText"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       FontWeight="ExtraBold"
                                       Foreground="{Binding Attributes[PoI].NEffectiveStyle.InnerTextColor,
                                                            Converter={wpfConverters:String2ColorConverter}}"
                                       Text="{Binding Attributes[PoI].InnerText}" />
                        </Grid>
                    </mapIconMenu1:MapMenuItem.Header>
                </mapIconMenu1:MapMenuItem>

            </mapIconMenu1:MapMenu>
        </mapIconMenu1:ReferenceAlignPanel>
        <Canvas x:Name="cHeading"
                Width="200"
                Height="200"
                Margin="-175,-175,-70,-70"
                RenderTransformOrigin="0.5,0.5">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="rScale"
                                    ScaleX="0"
                                    ScaleY="0" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Canvas.RenderTransform>
            <Ellipse x:Name="ellipse"
                     Width="200"
                     Height="200"
                     Stroke="#CC000000"
                     StrokeThickness="15" />
            <Ellipse x:Name="ePos"
                     Canvas.Left="88.5"
                     Canvas.Top="88.5"
                     Width="25"
                     Height="25"
                     Fill="Red"
                     RenderTransformOrigin="0.5,0.5"
                     Stroke="Black"
                     StrokeThickness="0">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Canvas>
        <TextBlock x:Name="tbName"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Background="#A0FFFFFF"
                   FontWeight="Bold"
                   RenderTransformOrigin="0.5,0.5"
                   Text="{Binding PoI.Name,
                                  ElementName=UserControl}"
                   TextAlignment="Center"
                   TextWrapping="Wrap">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform X="-20" Y="20" />
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
    </Grid>
</UserControl>
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:custom="http://schemas.microsoft.com/surface/2008"
             xmlns:controls1="clr-namespace:csShared.Controls"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             xmlns:converters="clr-namespace:csCommon.Converters"
             xmlns:local="clr-namespace:csDataServerPlugin"
             x:Name="userControl"
             x:Class="csDataServerPlugin.AnalysisTabView"
             mc:Ignorable="d">
    <UserControl.Resources>
    	<local:ReverseBooleanVisiblityConverter x:Key="ReverseBooleanVisiblityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style TargetType="{x:Type Control}"
               x:Key="ControlBaseStyle">
        	<Setter Property="FocusVisualStyle"
        		Value="{x:Null}" />
        	<Setter Property="SnapsToDevicePixels"
        		Value="False" />
        	<Setter Property="FontFamily"
        		Value="Segoe360" />
        	<Setter Property="FontWeight"
        		Value="Normal" />
            <!--<Setter Property="FontSize"
                    Value="17" />-->
        	<Setter Property="Padding"
        		Value="6,2,10,10" />
        	<Setter Property="MinHeight"
        		Value="38" />
        	<Setter Property="MinWidth"
        		Value="38" />
        	<Setter Property="Margin"
        		Value="1" />
        	<Setter Property="HorizontalContentAlignment"
        		Value="Left" />
        	<Setter Property="VerticalContentAlignment"
        		Value="Top" />
        	<Setter Property="BorderThickness"
        		Value="2" />
        </Style>
        <!--<DataTemplate x:Key="HighLightTemplate">
            <Grid x:Name="HighlightGrid"  Visibility="{Binding ShowInGui, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel Orientation="Vertical"
                            Margin="0"
                            Grid.Row="0">
                    <Grid Visibility="Collapsed">
                        <TextBlock Text="{Binding Name}"
                                   Margin="5,0,0,0"
                                   FontSize="21"
                                   FontWeight="Bold"
                                   Visibility="Collapsed" />
                        <StackPanel Margin="2,0,0,0"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Right">
                            <Custom:SurfaceToggleButton x:Name="stbExpand"
                                                        HorizontalAlignment="Left"
                                                        Margin="0"
                                                        VerticalAlignment="Top"
                                                        IsChecked="True"
                                                        Style="{DynamicResource SurfaceToggleButtonStyle1}"
                                                        MinWidth="20"
                                                        MinHeight="20">
                                <Custom:SurfaceToggleButton.Resources>
                                    <Style x:Key="SurfaceToggleButtonStyle1"
                                           TargetType="{x:Type Custom:SurfaceToggleButton}"
                                           BasedOn="{StaticResource ControlBaseStyle}">
                                        <Setter Property="HorizontalContentAlignment"
                                                Value="Center" />
                                        <Setter Property="VerticalContentAlignment"
                                                Value="Center" />
                                        <Setter Property="Padding"
                                                Value="7" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}" />
                                        <Setter Property="BorderThickness"
                                                Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
                                                    <ControlTemplate.Resources>
                                                        <Storyboard x:Key="Press">
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="PressOverlay"
                                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                                                                      Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                        <Storyboard x:Key="Release">
                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                           Storyboard.TargetName="PressOverlay"
                                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000"
                                                                                      Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </ControlTemplate.Resources>
                                                    <Grid   x:Name="Grid"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                        <Border  x:Name="ButtonBody"
                                                                 BorderThickness="{TemplateBinding BorderThickness}"
                                                                 Background="{TemplateBinding Background}"
                                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <Border x:Name="PressOverlay"
                                                                Background="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundPressedBrushKey}}"
                                                                Opacity="0"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <ContentPresenter   x:Name="Content"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked"
                                                                 Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ToggleButtonBackgroundCheckedBrushKey}}"
                                                                    TargetName="ButtonBody" />
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed"
                                                                 Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Press}" />
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource Release}" />
                                                            </Trigger.ExitActions>
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundPressedBrushKey}}" />
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsPressed"
                                                                           Value="True" />
                                                                <Condition Property="IsChecked"
                                                                           Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background"
                                                                    TargetName="PressOverlay"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ToggleButtonBackgroundCheckedPressedBrushKey}}" />
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsEnabled"
                                                                           Value="False" />
                                                                <Condition Property="IsChecked"
                                                                           Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ToggleButtonBackgroundCheckedDisabledBrushKey}}"
                                                                    TargetName="ButtonBody" />
                                                            <Setter Property="Opacity"
                                                                    Value="0.6"
                                                                    TargetName="Content" />
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition  Property="IsEnabled"
                                                                            Value="False" />
                                                                <Condition Property="IsChecked"
                                                                           Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}" />
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
                                                                    TargetName="ButtonBody" />
                                                            <Setter Property="Opacity"
                                                                    Value="0.33"
                                                                    TargetName="Content" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                </Custom:SurfaceToggleButton.Resources>
                                <Path Data="M30.707001,52.895L63.441002,52.895 63.441002,58.181999 30.707001,58.181999z M0,47.075001L16.922001,47.075001 16.922001,64 0,64z M30.707001,29.372L63.441002,29.372 63.441002,34.66 30.707001,34.66z M0,23.555L16.922001,23.555 16.922001,40.478001 0,40.478001z M30.707001,5.8150005L63.441002,5.8150005 63.441002,11.103 30.707001,11.103z M0,0L16.922001,0 16.922001,16.921 0,16.921z"
                                      Stretch="Uniform"
                                      Fill="#FF898989"
                                      Width="15"
                                      Height="15"
                                      Margin="0,0,0,0"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1"
                                                            ScaleY="1" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Custom:SurfaceToggleButton>
                        </StackPanel>
                    </Grid>
                    <Grid Margin="0,0,0,0">
                        <Grid.Resources>
                            <local:HighlighterViewModelConverter x:Key="HighlighterViewModelConverter" />
                            <DataTemplate x:Key="HighlightTemplate">
                                <Grid Background="{x:Null}">
                                    <ContentControl>
                                        <cal:View.Model>

                                            <MultiBinding Converter="{StaticResource HighlighterViewModelConverter}">
                                                <Binding />
                                                <Binding Path="DataContext.Service"
                                                         ElementName="userControl" />

                                            </MultiBinding>
                                        </cal:View.Model>
                                    </ContentControl>
                                    <StackPanel Visibility="Collapsed">
                                        <Custom:SurfaceCheckBox  x:Name="surfaceCheckBox"
                                                                 Foreground="Black"
                                                                 FontSize="24"
                                                                 Content="{Binding Title}"
                                                                 cal:Message.Attach="[Event Checked]=[Action Refresh()];[Event Unchecked]=[Action Refresh()]"
                                                                 IsChecked="{Binding IsActive, Mode=TwoWay}"
                                                                 BorderBrush="#99000000"
                                                                 MinHeight="0"
                                                                 MinWidth="0"
                                                                 Style="{DynamicResource BlackCheckBox}"
                                                                 FontWeight="Normal" />
                                        <StackPanel Orientation="Vertical"
                                                    Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=surfaceCheckBox}"
                                                    Margin="30,0,0,0">
                                            <TextBlock x:Name="tvVisualType"
                                                       HorizontalAlignment="Stretch"
                                                       TextWrapping="Wrap"
                                                       Text="{Binding VisualType}"
                                                       VerticalAlignment="Stretch"
                                                       Foreground="Black"
                                                       FontSize="17" />
                                            <TextBlock x:Name="tbSelectionCriteria"
                                                       HorizontalAlignment="Stretch"
                                                       TextWrapping="Wrap"
                                                       Text="{Binding SelectionCriteria}"
                                                       VerticalAlignment="Stretch"
                                                       Foreground="Black"
                                                       FontSize="17" />
                                            <TextBlock x:Name="tbHighlighterType"
                                                       HorizontalAlignment="Stretch"
                                                       TextWrapping="Wrap"
                                                       Text="{Binding HighlighterType}"
                                                       VerticalAlignment="Stretch"
                                                       Foreground="Black"
                                                       FontSize="17" />
                                            <TextBlock x:Name="tbThresholdType"
                                                       HorizontalAlignment="Stretch"
                                                       TextWrapping="Wrap"
                                                       Text="{Binding ThresholdType}"
                                                       VerticalAlignment="Stretch"
                                                       Foreground="Black"
                                                       FontSize="17" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </Grid.Resources>
                        <StackPanel Margin="0"
                                    Orientation="Vertical">
                            <Grid Margin="0"
                                  Background="{x:Null}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ItemsControl x:Name="icHighlights"
                                              Margin="0"
                                              VerticalAlignment="Stretch"
                                              Width="Auto"
                                              ItemTemplate="{StaticResource HighlightTemplate}"
                                              ItemsSource="{Binding EffectiveStyle.Analysis.Highlights}"
                                              HorizontalContentAlignment="Stretch" />
                            </Grid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid>
        </DataTemplate>-->
        <SolidColorBrush x:Key="ControlHitAreaBrush"
                         Color="#00FFFFFF" />
        <Style x:Key="BlackCheckBox"
               TargetType="{x:Type custom:SurfaceCheckBox}"
               BasedOn="{StaticResource ControlBaseStyle}">
        	<Setter Property="Background"
        		Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundBrushKey}}" />
        	<Setter Property="Foreground"
        		Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundBrushKey}}" />
        	<Setter Property="BorderBrush"
        		Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderBrushKey}}" />
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type custom:SurfaceCheckBox}">
        				<ControlTemplate.Resources>
        					<Storyboard x:Key="Checked">
        						<DoubleAnimation Duration="00:00:00.0100000"
        							Storyboard.TargetName="Checkmark"
        							Storyboard.TargetProperty="Opacity"
        							To="1" />
        					</Storyboard>
        					<Storyboard x:Key="Unchecked">
        						<DoubleAnimation Duration="00:00:00.1500000"
        							Storyboard.TargetName="Checkmark"
        							Storyboard.TargetProperty="Opacity"
        							From="0.4"
        							To="0" />
        					</Storyboard>
        				</ControlTemplate.Resources>
        				<Grid>
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="Auto" />
        						<ColumnDefinition Width="*" />
        					</Grid.ColumnDefinitions>
        					<Rectangle Grid.ColumnSpan="2"
        						x:Name="hitArea"
        						Fill="{StaticResource ControlHitAreaBrush}"
        						Width="{TemplateBinding Width}"
        						Height="{TemplateBinding Height}" />
        					<BulletDecorator Grid.Column="0"
        						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        						x:Name="bulletDecorator"
        						RenderTransformOrigin="0.5,0.5">
        						<BulletDecorator.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform ScaleX="1.5"
        									ScaleY="1.5" />
        								<SkewTransform />
        								<RotateTransform />
        								<TranslateTransform />
        							</TransformGroup>
        						</BulletDecorator.RenderTransform>
        						<BulletDecorator.Bullet>
        							<Border x:Name="CheckButtonRect"
        								Margin="1,6,0,0"
        								Width="16"
        								Height="16"
        								BorderThickness="{TemplateBinding BorderThickness}"
        								BorderBrush="{TemplateBinding BorderBrush}"
        								Background="{TemplateBinding Background}">
        								<Grid>
        									<Path x:Name="Checkmark"
        										StrokeEndLineCap="Flat"
        										Fill="{x:Null}"
        										Stroke="#E6000000"
        										StrokeStartLineCap="Flat"
        										StrokeThickness="2"
        										Width="10"
        										Height="10"
        										Data="M0,24 L12,0 M0,0 L12,24"
        										Opacity="0"
        										Stretch="Fill" />
        									<Rectangle x:Name="ThreeStateMark"
        										Opacity="0"
        										Fill="{DynamicResource {x:Static custom:SurfaceColors.BulletBrushKey}}"
        										Width="6"
        										Height="6" />
        								</Grid>
        							</Border>
        						</BulletDecorator.Bullet>
        					</BulletDecorator>
        					<ContentPresenter Grid.Column="1"
        						x:Name="Content"
        						Margin="12,0,10,0"
        						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        				</Grid>
        				<ControlTemplate.Triggers>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsThreeState"
        								Value="True" />
        							<Condition Property="IsChecked"
        								Value="{x:Null}" />
        						</MultiTrigger.Conditions>
        						<Setter TargetName="Checkmark"
        							Property="Opacity"
        							Value="0" />
        						<Setter TargetName="ThreeStateMark"
        							Property="Opacity"
        							Value="1" />
        					</MultiTrigger>
        					<Trigger Property="IsChecked"
        						Value="True">
        						<Trigger.EnterActions>
        							<BeginStoryboard Storyboard="{StaticResource Checked}" />
        						</Trigger.EnterActions>
        						<Trigger.ExitActions>
        							<BeginStoryboard Storyboard="{StaticResource Unchecked}" />
        						</Trigger.ExitActions>
        						<Setter Property="Opacity"
        							TargetName="Checkmark"
        							Value="1" />
        					</Trigger>
        					<Trigger Property="IsPressed"
        						Value="True">
        						<Setter Property="Background"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundPressedBrushKey}}" />
        						<Setter Property="BorderBrush"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderPressedBrushKey}}" />
        						<Setter Property="Foreground"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundPressedBrushKey}}" />
        						<Setter TargetName="Checkmark"
        							Property="Stroke"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.BulletPressedBrushKey}}" />
        					</Trigger>
        					<Trigger Property="IsEnabled"
        						Value="False">
        						<Setter Property="BorderBrush"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBorderDisabledBrushKey}}" />
        						<Setter Property="Background"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlBackgroundDisabledBrushKey}}" />
        						<Setter Property="Foreground"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.ControlForegroundDisabledBrushKey}}" />
        						<Setter TargetName="Checkmark"
        							Property="Stroke"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
        						<Setter TargetName="ThreeStateMark"
        							Property="Fill"
        							Value="{DynamicResource {x:Static custom:SurfaceColors.BulletDisabledBrushKey}}" />
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <converters:HighlighterViewModelConverter x:Key="HighlighterViewModelConverter" />
        <DataTemplate x:Key="HighlightTemplate">
        	<Grid Background="{x:Null}"
        		x:Name="HighlightGrid"
        		Visibility="{Binding ShowInGui, Converter={StaticResource BooleanToVisibilityConverter}}">
        		<ContentControl>
        			<cal:View.Model>

        				<MultiBinding Converter="{StaticResource HighlighterViewModelConverter}">
        					<Binding />
        					<Binding Path="DataContext.Service"
        						ElementName="userControl" />

        				</MultiBinding>
        			</cal:View.Model>
        		</ContentControl>
        		<StackPanel Visibility="Collapsed">
        			<custom:SurfaceCheckBox x:Name="surfaceCheckBox"
        				Foreground="Black"
        				Content="{Binding Title}"
        				cal:Message.Attach="[Event Checked]=[Action Refresh()];[Event Unchecked]=[Action Refresh()]"
        				IsChecked="{Binding IsActive, Mode=TwoWay}"
        				BorderBrush="#99000000"
        				MinHeight="0"
        				MinWidth="0"
        				Style="{DynamicResource BlackCheckBox}"
        				FontWeight="Normal" />
        			<StackPanel Orientation="Vertical"
        				Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=surfaceCheckBox}"
        				Margin="30,0,0,0">
        				<TextBlock x:Name="tvVisualType"
        					HorizontalAlignment="Stretch"
        					TextWrapping="Wrap"
        					Text="{Binding VisualType}"
        					VerticalAlignment="Stretch"
        					Foreground="Black" />
        				<TextBlock x:Name="tbSelectionCriteria"
        					HorizontalAlignment="Stretch"
        					TextWrapping="Wrap"
        					Text="{Binding SelectionCriteria}"
        					VerticalAlignment="Stretch"
        					Foreground="Black" />
        				<TextBlock x:Name="tbHighlighterType"
        					HorizontalAlignment="Stretch"
        					TextWrapping="Wrap"
        					Text="{Binding HighlighterType}"
        					VerticalAlignment="Stretch"
        					Foreground="Black" />
        				<TextBlock x:Name="tbThresholdType"
        					HorizontalAlignment="Stretch"
        					TextWrapping="Wrap"
        					Text="{Binding ThresholdType}"
        					VerticalAlignment="Stretch"
        					Foreground="Black" />
        			</StackPanel>
        		</StackPanel>
        	</Grid>
        </DataTemplate>
    </UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid x:Name="Categories"
			VerticalAlignment="Top" Visibility="Visible">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<custom:SurfaceButton x:Name="PreviousCategory"
				Margin="0"
				VerticalAlignment="Center">
				<Path
					Data="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z"
					Stretch="Uniform"
					Fill="Black"
					Width="26"
					Height="26"
					Margin="0,0,0,0"
					RenderTransformOrigin="0.5,0.5">
					<Path.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleY="1"
								ScaleX="-1" />
							<SkewTransform AngleY="0"
								AngleX="0" />
							<RotateTransform Angle="0" />
							<TranslateTransform />
						</TransformGroup>
					</Path.RenderTransform>
				</Path>
			</custom:SurfaceButton>
			<TextBlock x:Name="SelectedCategory"
				HorizontalAlignment="Left"
				TextWrapping="Wrap"
				FontSize="22"
				VerticalAlignment="Top"
				Margin="0 8 0 0"
				Grid.Column="1" />
			<StackPanel Grid.Column="2" 
				        Margin="0,8.5"
				        Orientation="Horizontal">
				<custom:SurfaceButton x:Name="CategorySettings"
    					cal:Message.Attach="[Event Click]=[Action CategorySettings($source)]"
                        Visibility="Hidden"
	    				Margin="0"
		    			VerticalAlignment="Center" Background="Transparent">
					<Path
						Data="F1M60.9043,41.6863C57.7236,39.6523 41.5319,29.1797 32.4893,23.332 33.1949,17.4545 30.6182,11.4167 25.3102,7.98975 20.0208,4.57422 13.4778,4.68884 8.41565,7.72009L22.7796,17.0052 22.3782,25.129 15.1432,28.8373 0.76886,19.5496C0.0845947,25.4115 2.66895,31.4285 7.95862,34.8463 13.2617,38.2709 19.8206,38.142 24.888,35.0925 33.9541,40.9545 50.2184,51.4688 53.303,53.4492 57.6168,56.2239 65.3626,44.5326 60.9043,41.6863z"
						Stretch="Uniform"
						Fill="Black"
						Width="26"
						Height="26"
						Margin="0,0,0,0"
						RenderTransformOrigin="0.5,0.5" />
				</custom:SurfaceButton>
				<custom:SurfaceButton x:Name="AddFilter"
					cal:Message.Attach="[Event Click]=[Action AddFilter($source)]"
					Margin="0"
					VerticalAlignment="Center" Background="Transparent">
					<Path
						Data="M0.33299977,11.255001L37.041492,11.255001C37.024494,11.5465 36.998592,11.833101 36.998592,12.127501 36.998592,16.835509 39.218594,21.028417 42.66,23.739322L32.947788,35.026046 32.947788,63.215999 21.340874,56.585582 21.340874,34.473741z M1.2878363,4.0470002L39.629997,4.0470002C38.815098,5.2892774,38.190102,6.6619451,37.777203,8.1230001L1.2878363,8.1230001C0.57543737,8.1229997,-1.1920924E-07,7.5472746,1.8521793E-14,6.8362782L1.8521793E-14,5.3361609C-1.1920924E-07,4.622725,0.57543737,4.0469999,1.2878363,4.0470002z M51.657997,2.851L51.658268,8.9899988 45.519997,8.9899988 45.520729,13.211999 51.658455,13.211999 51.658726,19.349998 55.881996,19.350998 55.881699,13.211999 62.019997,13.211999 62.019997,8.9899988 55.881493,8.9899988 55.881195,2.8514885z M53.78915,0C59.934986,0 64.920998,5.0391269 64.920998,11.25555 64.920998,17.470431 59.934986,22.511001 53.78915,22.511001 47.643211,22.511001 42.66,17.470431 42.66,11.25555 42.66,5.0391269 47.643211,0 53.78915,0z"
						Stretch="Uniform"
						Fill="Black"
						Width="26"
						Height="26"
						Margin="0,0,0,0"
						RenderTransformOrigin="0.5,0.5" />
				</custom:SurfaceButton>
				<custom:SurfaceButton x:Name="AddDashboard"
					cal:Message.Attach="[Event Click]=[Action AddDashboardItem($source)]"
					Margin="0"
					VerticalAlignment="Center" Background="Transparent">
					<Path
						Data="M61.352,34.599C60.224,34.282,59.033,34.956,58.719,36.1L50.119,67.534C49.957,67.527 49.796,67.506 49.633,67.506 45.598,67.506 41.978,69.749 40.187,73.361 37.607,78.565 39.739,84.9 44.944,87.482 46.413,88.212 47.987,88.583 49.621,88.583 53.654,88.583 57.272,86.34 59.063,82.728 61.647,77.526 59.513,71.191 54.309,68.607 54.298,68.602 54.286,68.598 54.275,68.592L62.855,37.23C63.166,36.089,62.495,34.911,61.352,34.599z M55.225,80.825C54.162,82.968 52.015,84.299 49.621,84.299 48.654,84.299 47.723,84.079 46.848,83.646 43.761,82.114 42.495,78.356 44.025,75.267 45.09,73.124 47.237,71.793 49.633,71.793 50.598,71.793 51.531,72.013 52.404,72.446 55.491,73.979 56.757,77.738 55.225,80.825z M49.625,15.151C24.813,15.151 4.625,35.338 4.625,60.151 4.625,62.518 6.544,64.437 8.911,64.437 11.278,64.437 13.197,62.518 13.197,60.151 13.197,40.064 29.538,23.722 49.626,23.722 69.714,23.722 86.055,40.063 86.055,60.151 86.055,62.518 87.974,64.437 90.341,64.437 92.708,64.437 94.627,62.518 94.627,60.151 94.625,35.338 74.437,15.151 49.625,15.151z"
						Stretch="Uniform"
						Fill="Black"
						Width="26"
						Height="26"
						Margin="0,0,0,0"
						RenderTransformOrigin="0.5,0.5" />
				</custom:SurfaceButton>
				<custom:SurfaceButton x:Name="NextCategory"
					Margin="0"
					VerticalAlignment="Center">
					<Path
						Data="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z"
						Stretch="Uniform"
						Fill="Black"
						Width="26"
						Height="26"
						Margin="0,0,0,0"
						RenderTransformOrigin="0.5,0.5" />
				</custom:SurfaceButton>
			</StackPanel>
		</Grid>
		<custom:SurfaceListBox x:Name="Styles"
			Foreground="Black"
			ItemTemplate="{DynamicResource HighlightTemplate}"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Stretch"
			ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			Grid.Row="1" />
		<custom:SurfaceListBox x:Name="icHighlights"
			Margin="0"
			VerticalAlignment="Stretch"
			Width="Auto"
			ItemTemplate="{StaticResource HighlightTemplate}"
			ItemsSource="{Binding Highlights}"
			HorizontalContentAlignment="Stretch"
			Grid.Row="1"
			ScrollViewer.HorizontalScrollBarVisibility="Disabled" Visibility="{Binding NewHighlightArea, Converter={StaticResource ReverseBooleanVisiblityConverter}}" />
		<Border x:Name="NewHighlightArea"
			Grid.Row="1"
			Grid.RowSpan="2">
			<Grid VerticalAlignment="Top" d:DataContext="{d:DesignData AnalysisTabViewModel}">
				<StackPanel Margin="0,0,0,45">
					<Grid>
						<TextBlock TextWrapping="Wrap"
							Text="Add Highlight"
							FontSize="22" Margin="0" />
						<!--<Custom:SurfaceButton x:Name="Wizard" HorizontalAlignment="Right" Margin="0" cal:Message.Attach="[Event Click]=[Action StartWizard($source)]" VerticalAlignment="Top" Background="#FFACACAC" Padding="0">
                			<Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="../icons/wizard.png" Width="30" Height="30"/>
                		</Custom:SurfaceButton>-->
					</Grid>
					<custom:SurfaceButton x:Name="SelectPreset"
						cal:Message.Attach="[Event Click]=[Action SelectPreset($source)]"
						Margin="0"
						Background="{Binding AccentBrush}"
						Content="Select"
						Visibility="Collapsed" />
					<TextBlock TextWrapping="Wrap"
						Text="Placemark Type" />
					<custom:SurfaceButton x:Name="ChangeNewStyle"
						cal:Message.Attach="[Event Click]=[Action ChangeNewStyle($source)]"
						Content="{Binding NewStyle.Name}"
						Margin="0"
						Background="{Binding AccentBrush}" />

					<TextBlock TextWrapping="Wrap"
						Text="Source" Visibility="Collapsed" />
					<custom:SurfaceButton x:Name="ChangeSource"
						cal:Message.Attach="[Event Click]=[Action ChangeSource($source)]"
						Content="{Binding NewHighlight.SelectionType}"
						Margin="0"
						Background="{Binding AccentBrush}" Visibility="Collapsed" />
					<TextBlock TextWrapping="Wrap"
						Text="Property" />
					<Grid Margin="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<custom:SurfaceButton x:Name="ChangeCriteria"
							cal:Message.Attach="[Event Click]=[Action ChangeCriteria($source)]"
							Content="{Binding NewHighlight.SelectionCriteria}"
							Margin="0"
							Background="{Binding AccentBrush}" />
						<custom:SurfaceButton x:Name="ExtendCriteria"
							cal:Message.Attach="[Event Click]=[Action ExtendCriteria($source)]"
							Margin="5 0 0 0"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Grid.Column="1"
							Visibility="{Binding CanAddAdditionalProperties, Converter={wpfConverters:ConvertBoolToVisibility}}">
							<Path
								Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"
								Stretch="Uniform"
								Fill="Black"
								Margin="2"
								Width="26"
								Height="26" />
						</custom:SurfaceButton>
					</Grid>
					<TextBlock TextWrapping="Wrap"
						Text="Method" />
					<custom:SurfaceButton cal:Message.Attach="[Event Click]=[Action ChangeHighlighterType($source)]"
						Content="{Binding NewHighlight.HighlighterType}"
						Margin="0"
						Background="{Binding AccentBrush}" />
					<TextBlock TextWrapping="Wrap"
						Text="Visual Style" Visibility="{Binding ShowVisualType}" />
					<custom:SurfaceButton cal:Message.Attach="[Event Click]=[Action ChangeVisualType($source)]"
						Content="{Binding NewHighlight.VisualType}"
						Margin="0"
						Background="{Binding AccentBrush}" Visibility="{Binding ShowVisualType}" />
					<TextBlock TextWrapping="Wrap"
						Text="Analysis Title" />
					<controls1:KeyboardTextBox TextWrapping="Wrap"
						FontSize="21.333"
						Text="{Binding NewHighlight.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock TextWrapping="Wrap"
						Text="Analysis Category" />
					<controls1:KeyboardTextBox TextWrapping="Wrap"
						FontSize="21.333"
						Text="{Binding NewHighlight.Category, Mode=TwoWay}" />
				</StackPanel>
				<custom:SurfaceButton x:Name="SaveHighlighter"
					Content="Save"
					HorizontalAlignment="Right"
					Margin="0"
					VerticalAlignment="Bottom"
					Background="{Binding AccentBrush}" />
				<custom:SurfaceButton x:Name="CancelHighlighter"
					Content="Cancel"
					HorizontalAlignment="Left"
					Margin="0"
					VerticalAlignment="Bottom"
					Background="{Binding AccentBrush}" />
			</Grid>
		</Border>
	</Grid>
</UserControl>
<UserControl x:Class="csDataServerPlugin.DataServicesSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:csShared="clr-namespace:csShared"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" Margin="5"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="http://schemas.microsoft.com/surface/2008"
             xmlns:wpfConverters="clr-namespace:WpfConverters"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">

    <UserControl.Resources>
        <wpfConverters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisiblityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <csShared:AppStateSettings x:Key="AppStateSettingsDataSource" d:IsDataSource="True" />
        <DataTemplate x:Key="DataTemplate1">
            <DataTemplate.Resources>
                <Storyboard x:Key="LoadingService" RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="360" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Grid Width="120" Height="120">
                <s:SurfaceButton x:Name="Add"
                                 Width="Auto"
                                 Height="Auto"
                                 Margin="0"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 Background="#B2000000"
                                 BorderThickness="0"
                                 Padding="0"
                                 Style="{DynamicResource SurfaceButtonStyle1}"
                                 Visibility="{Binding IsSubscribed,
                                                      Converter={StaticResource InverseBooleanToVisiblityConverter}}"
                                 cal:Message.Attach="[Event Click] = [Action Subscribe($dataContext)]">
                    <Grid Width="48"
                          Height="48"
                          Background="#3F000000">
                        <TextBlock Margin="0,-20,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="64"
                                   Foreground="White"
                                   FontWeight="Bold"
                                   Text="+"
                                   TextWrapping="Wrap" />
                    </Grid>
                </s:SurfaceButton>
                <s:SurfaceButton x:Name="Remove"
                                 Width="Auto"
                                 Height="Auto"
                                 Margin="0"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 Background="#B2000000"
                                 BorderThickness="0"
                                 Padding="0"
                                 Style="{DynamicResource SurfaceButtonStyle1}"
                                 Visibility="{Binding IsSubscribed,
                                                      Converter={StaticResource BooleanToVisibilityConverter}}"
                                 cal:Message.Attach="[Event Click] = [Action UnSubscribe($dataContext)]">
                    <Grid Width="48"
                          Height="48"
                          Background="#3F000000">
                        <TextBlock Margin="0,-25,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="96"
                                   Foreground="White"
                                   Text="-"
                                   TextWrapping="Wrap" />
                    </Grid>
                </s:SurfaceButton>
                <s:SurfaceButton x:Name="Config"
                                 Width="Auto"
                                 Height="Auto"
                                 Margin="0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 Background="#B2000000"
                                 BorderThickness="0"
                                 Padding="0"
                                 Style="{DynamicResource SurfaceButtonStyle1}"
                                 cal:Message.Attach="[Event Click] = [Action ServiceMenu($executionContext)]">
                    <Grid Width="48"
                          Height="48"
                          Background="#3F000000">
                        <Image Margin="10" Source="/csCommon;component/Resources/Icons/tools.png" />
                    </Grid>
                </s:SurfaceButton>
                <Border Height="50"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Background="#7F000000">
                    <TextBlock Width="Auto"
                               Height="Auto"
                               Margin="3,3,30,3"
                               Foreground="White"
                               Text="{Binding Name}"
                               TextWrapping="Wrap" />
                </Border>
                <Image Width="20"
                       Height="20"
                       Margin="0,0,5,27"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       Source="/csCommon;component/Resources/Icons/online.png"
                       Visibility="{Binding IsLocal,
                                            Converter={StaticResource InverseBooleanToVisiblityConverter}}" />


            </Grid>
            <DataTemplate.Triggers>
                <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Add">
                    <BeginStoryboard Storyboard="{StaticResource LoadingService}" />
                </EventTrigger>
            </DataTemplate.Triggers>


        </DataTemplate>

        <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="FontFamily" Value="Segoe360" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="17" /> 
            <Setter Property="Padding" Value="6,2,10,10" />
            <Setter Property="MinHeight" Value="38" />
            <Setter Property="MinWidth" Value="38" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <SolidColorBrush x:Key="ControlHitAreaBrush" Color="#00FFFFFF" />
        <Style x:Key="SurfaceToggleButtonMetroStyle"
               BasedOn="{StaticResource ControlBaseStyle}"
               TargetType="{x:Type s:SurfaceToggleButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SurfaceToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid"
                              Width="Auto"
                              Height="Auto"
                              Background="{StaticResource ControlHitAreaBrush}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates" />
                                <VisualStateGroup x:Name="FocusStates" />
                                <VisualStateGroup x:Name="CheckStates" />
                                <VisualStateGroup x:Name="ValidationStates" />
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBody"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="30"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundPressedBrushKey}}"
                                    CornerRadius="30"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ButtonBody" Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Press}" />
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Release}" />
                                </Trigger.ExitActions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundPressedBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PressOverlay" Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ToggleButtonBackgroundCheckedPressedBrushKey}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ToggleButtonBackgroundCheckedDisabledBrushKey}}" />
                                <Setter TargetName="Content" Property="Opacity" Value="0.6" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonForegroundDisabledBrushKey}}" />
                                <Setter TargetName="ButtonBody" Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ButtonBackgroundDisabledBrushKey}}" />
                                <Setter TargetName="Content" Property="Opacity" Value="0.33" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ServicesSurfaceListBoxItemStyle"
               BasedOn="{StaticResource ControlBaseStyle}"
               TargetType="{x:Type s:SurfaceListBoxItem}">
            <Setter Property="Background" Value="{DynamicResource {x:Static s:SurfaceColors.ListBoxItemBackgroundBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static s:SurfaceColors.ListBoxItemForegroundBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SurfaceListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="PressOverlay"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid"
                              Margin="0,0,10,0"
                              Background="{StaticResource ControlHitAreaBrush}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="ButtonBody"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {x:Static s:SurfaceColors.ListBoxItemBackgroundPressedBrushKey}}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>
    <Grid>
        <s:SurfaceListBox x:Name="Services"
                          Height="Auto"
                          Margin="125,0,0,0"
                          HorizontalAlignment="Stretch"
                          BorderBrush="{x:Null}"
                          BorderThickness="0"
                          ItemContainerStyle="{DynamicResource ServicesSurfaceListBoxItemStyle}"
                          ItemTemplate="{DynamicResource DataTemplate1}"
                          ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <s:SurfaceListBox.Resources>
                <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                    <WrapPanel Orientation="Horizontal" Width="{Binding ElementName=Services, Path=ActualWidth}" />
                </ItemsPanelTemplate>
            </s:SurfaceListBox.Resources>
        </s:SurfaceListBox>
        <StackPanel Margin="7,3,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
            <s:SurfaceToggleButton x:Name="CreateLayer"
                                   Width="40"
                                   Height="40"
                                   Margin="0,0,10,0"
                                   ContextMenuService.Placement="Top"
                                   Foreground="Black"
                                   Style="{DynamicResource SurfaceToggleButtonMetroStyle}"
                                   cal:Message.Attach="[Event Click] = [Action CreateLayer($source, $eventArgs)]">
                <TextBlock Margin="0,-15,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="48"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="+"
                           TextWrapping="Wrap" />
            </s:SurfaceToggleButton>

            <s:SurfaceToggleButton x:Name="SelectLayer"
                                   Width="40"
                                   Height="40"
                                   Margin="0,0,10,0"
                                   Content="Import"
                                   ContextMenuService.HasDropShadow="False"
                                   ContextMenuService.Placement="Top"
                                   ContextMenuService.VerticalOffset="-20"
                                   Foreground="Black"
                                   Style="{DynamicResource SurfaceToggleButtonMetroStyle}"
                                   Visibility="Collapsed" />
        </StackPanel>


    </Grid>
</UserControl>

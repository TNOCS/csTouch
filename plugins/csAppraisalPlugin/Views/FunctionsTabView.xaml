<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation"
             xmlns:Micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Custom="http://schemas.microsoft.com/surface/2008"
             mc:Ignorable="d"
             x:Class="csAppraisalPlugin.Views.FunctionsTabView"
             d:DesignWidth="600"
             d:DesignHeight="176">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <DataTemplate x:Key="AppraisalTemplate">
            <Grid Height="Auto"
                  Background="White">
                <Custom:SurfaceButton Content="..."
                                      Micro:Message.Attach="[Event Click] = [Action AppraisalMenu($executionContext)]"
                                      HorizontalAlignment="Center"
                                      Margin="0"
                                      VerticalAlignment="Top"
                                      Width="38"
                                      Height="38"
                                      Background="#4D000000"
                                      HorizontalContentAlignment="Center"
                                      Padding="0"
                                      Foreground="White" />
                <TextBlock TextWrapping="Wrap"
                                  Text="{Binding Name}"
                                  Background="Transparent"
                                  Foreground="Black"
                                  VerticalAlignment="Center"
                                  d:LayoutOverrides="Width"
                                  HorizontalAlignment="Center"
                                  FontSize="21.333" />
                <Path Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"
                      Stretch="Uniform"
                      Fill="#FF1A1A1A"
                      Width="15"
                      Height="15"
                      Margin="0,3,3,0"
                      RenderTransformOrigin="0.5,0.5"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Visibility="{Binding IsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="AppraisalPanel">
            <StackPanel IsItemsHost="True"
                        Orientation="Horizontal" />
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <Grid Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <s:SurfaceListBox Micro:Message.Attach="[Event SelectionChanged]=[Action Selected($eventArgs)]"
                          x:Name="Functions"
                          Margin="20,0,0,0"
                          ItemTemplate="{DynamicResource AppraisalTemplate}"
                          ItemsPanel="{DynamicResource AppraisalPanel}"
                          Grid.Column="1"
                          SelectionMode="Multiple"
                          Background="{x:Null}"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          ItemContainerStyle="{DynamicResource SurfaceListBoxItemStyle1}"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <s:SurfaceListBox.Resources>
                <Style x:Key="SurfaceListBoxItemStyle1"
                       TargetType="{x:Type s:SurfaceListBoxItem}">
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Template"
                            Value="{DynamicResource SurfaceListBoxItemControlTemplate1}" />
                </Style>
                <ControlTemplate x:Key="SurfaceListBoxItemControlTemplate1"
                                 TargetType="{x:Type s:SurfaceListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Press">
                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="PressOverlay">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Release">
                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="PressOverlay">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.25"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Width="{Binding ActualHeight, ElementName=border}"
                            BorderThickness="1"
                            BorderBrush="White">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                          Storyboard.TargetName="border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                                                     Value="10" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                          Storyboard.TargetName="border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                                                     Value="5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Grid"
                              Background="{x:Null}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              Height="Auto">
                            <Border x:Name="ButtonBody"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="ButtonBody"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Background"
                                    TargetName="PressOverlay"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressOverlay">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressOverlay">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.25"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="ButtonBody"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Opacity"
                                    TargetName="Content"
                                    Value="0.6" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="ButtonBody"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            <Setter Property="Opacity"
                                    TargetName="Content"
                                    Value="0.33" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </s:SurfaceListBox.Resources>
        </s:SurfaceListBox>
        <StackPanel Orientation="Vertical"
                    VerticalAlignment="Top">
            <Custom:SurfaceButton x:Name="Add"
                                  Margin="0"
                                  Width="75"
                                  Height="75"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Padding="0">
                <Path Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"
                      Stretch="Uniform"
                      Fill="#FFFFFFFF"
                      Margin="20"
                      RenderTransformOrigin="0.5,0.5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <RotateTransform Angle="0" />
                                <ScaleTransform ScaleX="1"
                                                ScaleY="1" />
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Custom:SurfaceButton>
        </StackPanel>
    </Grid>

</UserControl>